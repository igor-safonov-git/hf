{"openapi":"3.0.2","info":{"title":"Huntflow API Reference","description":"<h1>Welcome!</h1>\n\n<p>Easily build integrations with your corporate systems with Huntflow API:</p>\n\n<ul>\n<li><p>Pass vacancy requests from Intranet</p></li>\n<li><p>Receive responses from vacancy landings</p></li>\n<li><p>Synchronize company organization structure</p></li>\n<li><p>Create individual reports</p></li>\n<li><p>Connect with Power BI, Tableau, etc. </p></li>\n</ul>\n\n<h1>Full changelog</h1>\n\n<p><details></p>\n\n<p><summary>Show changelog</summary></p>\n\n<h1>Changelog v2</h1>\n\n<ul>\n<li>No changelog available.</li>\n</ul>\n\n<p></details></p>\n\n<h1>Sandbox</h1>\n\n<p>Try out <a href=\"https://sandbox.huntflow.dev\">Huntflow Sandbox</a> – a risk free environment for experimenting and testing developed integrations. </p>\n\n<p>It's free for all Huntflow API customers. </p>\n\n<h1>Getting started with API</h1>\n\n<p>All requests to this API require Bearer token authentication. </p>\n\n<p>Bearer authentication is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication\">HTTP authentication scheme</a> that involves security tokens called bearer tokens. The name \"Bearer authentication\" can be understood as \"give access to the bearer of this token\". The client must send this token in the Authorization header when making requests to protected resources:</p>\n\n<pre><code>Authorization: Bearer &lt;token&gt;</code></pre>\n\n<p>The Bearer authentication scheme was originally created as part of OAuth 2.0 in <a href=\"https://tools.ietf.org/html/rfc6750\">RFC 6750</a>, but is also used on its own.</p>\n\n<p>You can get a token through the corresponding section in the Huntflow settings (Settings → API → Add Token).</p>\n\n<p>Upon adding, you will be given a link for a pair of tokens: <code>access_token</code> and <code>refresh_token</code>.</p>\n\n<p><code>access_token</code> is a Bearer token you should use for making requests to API:</p>\n\n<pre><code>curl \\\n\n    -H 'Authorization: Bearer access_token' \\\n\n    https://&lt;api domain&gt;/v2/accounts\n\n</code></pre>\n\n<p>The lifetime of the <code>access_token</code> is 7 days. </p>\n\n<p>Upon expiring you will start receiving a 401 HTTP response code for the requests to API with a body <code>{\"errors\":[{\"type\":\"authorization_error\",\"title\":\"Authorization Error\",\"detail\":\"token_expired\"}]}</code>. You should handle a pair of keys <code>type</code> and <code>detail</code> for checking token expiration. </p>\n\n<p>In that case you should update and receive a new pair of tokens.</p>\n\n<p>Here comes a <code>refresh_token</code>. The purpose of <code>refresh_token</code> is to update the pair of tokens for the new one after expiration of <code>access_token</code> by the calling a special <a href=\"/v2/docs#post-/token/refresh\">refresh token method</a>:</p>\n\n<pre><code>curl \\\n\n    -H 'Content-Type: application/json' \\\n\n    -d '{\"refresh_token\": \"refresh_token\"}' \\\n\n    https://&lt;api domain&gt;/v2/token/refresh\n\n</code></pre>\n\n<p>Keep in mind that <code>refresh_token</code> has its lifetime of 14 days. You will have to generate a new pair of tokens in Huntflow settings in case of the <code>refresh_token</code> won't be used in 14 days. </p>\n","version":"v2"},"servers":[{"url":"/v2"}],"paths":{"/me":{"get":{"tags":["Basic information"],"summary":"Get information about current user","description":"Returns information about the user associated with the passed authentication","operationId":"get_user_info_me_get","security":[{"HTTPBearerAuth":[]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MeResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts":{"get":{"tags":["Basic information"],"summary":"Get all available organizations","description":"Returns a list of available organizations for the user associated with the passed authentication","operationId":"get_organizations_list_accounts_get","security":[{"HTTPBearerAuth":[]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}":{"get":{"tags":["Basic information"],"summary":"Get information about organization","description":"Returns information about specified organization.","operationId":"get_organization_accounts__account_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationInfoResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/token/refresh":{"post":{"tags":["Basic information"],"summary":"Refresh existing token","operationId":"refresh_token_token_refresh_post","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/email_accounts":{"get":{"tags":["User settings"],"summary":"Get user email accounts","description":"Returns a list of user email accounts.","operationId":"email_accounts_list_email_accounts_get","security":[{"HTTPBearerAuth":[]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailAccountsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/calendar_accounts":{"get":{"tags":["User settings"],"summary":"Get user calendar accounts","description":"Returns a list of user calendar accounts with associated calendars.","operationId":"calendar_accounts_list_calendar_accounts_get","security":[{"HTTPBearerAuth":[]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CalendarAccountsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/account_vacancy_requests":{"get":{"tags":["Vacancy Requests"],"summary":"Get all vacancy request schemas","description":"Returns a list of vacancy requests schemas available in the organization.","operationId":"get_account_vacancy_requests_list_accounts__account_id__account_vacancy_requests_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"only_active","in":"query","required":false,"schema":{"title":"Only Active","description":"Shows only active schemas","default":true,"type":"boolean"},"description":"Shows only active schemas","example":"false"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountVacancyRequestsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/account_vacancy_requests/{account_vacancy_request_id}":{"get":{"tags":["Vacancy Requests"],"summary":"Get vacancy request schema","description":"Returns the specified vacancy request schema.","operationId":"get_account_vacancy_request_accounts__account_id__account_vacancy_requests__account_vacancy_request_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"account_vacancy_request_id","in":"path","required":true,"schema":{"title":"Account Vacancy Request Id","description":"[Vacancy request schema ID](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy request schema ID](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests)","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountVacancyRequestResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancy_requests":{"get":{"tags":["Vacancy Requests"],"summary":"Get all vacancy requests","description":"Returns a list of vacancy requests.\n__________\nBy default, only vacancy requests that have not been accepted for work will be returned.<br>\nAlso, you can pass the `vacancy_id` query-parameter with the vacancy ID\nto get a list of vacancy requests that were taken to work on the vacancy","operationId":"get_vacancy_requests_list_accounts__account_id__vacancy_requests_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1},{"name":"vacancy_id","in":"query","required":false,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). If supplied, only vacancy requests related to the specified vacancy will be returned","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). If supplied, only vacancy requests related to the specified vacancy will be returned","example":3},{"name":"values","in":"query","required":false,"schema":{"title":"Values","description":"Show values flag (if supplied, vacancy requests fields will be included)","default":false,"type":"boolean"},"description":"Show values flag (if supplied, vacancy requests fields will be included)","example":"true"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyRequestListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Vacancy Requests"],"summary":"Create a vacancy request","description":"The request body structure depends on\n[Vacancy request schemas](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests).\n\nTwo options for transferring custom or system dictionary fields are allowed:\n - You can get the custom dictionary\n [here](/v2/docs#get-/accounts/-account_id-/dictionaries/-dictionary_code-),\n and use the dictionary ID in request body. For example:\n```\n{\n    ...,\n    \"dictionary_field\": 42,\n    ...\n}\n```\n - You can use the foreign value specified when creating the dictionary. For example:\n```\n{\n    ...,\n    \"dictionary_field\": {\"foreign\": \"field_foreign_value\"},\n    ...\n}\n```","operationId":"create_vacancy_request_accounts__account_id__vacancy_requests_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/CreateVacancyRequestRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyRequestResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/vacancy_requests/{vacancy_request_id}":{"get":{"tags":["Vacancy Requests"],"summary":"Get a vacancy request","operationId":"get_vacancy_request_accounts__account_id__vacancy_requests__vacancy_request_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_request_id","in":"path","required":true,"schema":{"title":"Vacancy Request Id","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":2}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyRequestResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/additional_fields":{"get":{"tags":["Vacancies"],"summary":"Get organization vacancy's additional fields schema","description":"Returns a schema of additional fields for vacancies set in organization.","operationId":"get_additional_fields_schema_accounts__account_id__vacancies_additional_fields_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdditionalFieldsSchemaResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies":{"get":{"tags":["Vacancies"],"summary":"Get all vacancies","description":"Returns a list of vacancies.","operationId":"get_vacancies_list_accounts__account_id__vacancies_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1},{"name":"mine","in":"query","required":false,"schema":{"title":"Mine","description":"Shows only vacancies that the current user is working on","default":false,"type":"boolean"},"description":"Shows only vacancies that the current user is working on","example":"false"},{"name":"opened","in":"query","required":false,"schema":{"title":"Opened","description":"Show only open vacancies. This parameter is deprecated, use the state parameter instead","default":false,"type":"boolean"},"description":"Show only open vacancies. This parameter is deprecated, use the state parameter instead","example":"false","deprecated":true},{"name":"state","in":"query","required":false,"schema":{"description":"The state of a vacancy","type":"array","items":{"$ref":"#/components/schemas/VacancyListState"}},"description":"The state of a vacancy"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Vacancies"],"summary":"Create a vacancy","description":"Create a vacancy and returns it.\n______________________\n\nRestrictions:\n- When creating a new vacancy, you cannot specify more than one quota in the fill_quotas list.\n- The same [vacancy request](/v2/docs#get-/accounts/-account_id-/vacancy_requests)\ncannot be linked more than once (to the same vacancy or to different ones)\n\n______________________\nQuotas [(Hiring quotas)](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)\n\nA vacancy can have one or more hiring quotas.<br>\nHiring quotas link the vacancy, the vacancy request (optional),\nthe number of people to hire and the deadline for closing the quota.<br>\nAn arbitrary number of quotas for one vacancy makes it possible to accurately\ntrack the deadlines for closing vacancy requests.<br>\nThere can be several vacancy requests for the same vacancy,\nthey can also be added to a vacancy at any time.\nOne vacancy quota is allowed without specifying an vacancy request.","operationId":"create_vacancy_accounts__account_id__vacancies_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyCreateResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/vacancies/{vacancy_id}":{"get":{"tags":["Vacancies"],"summary":"Get a vacancy","description":"Returns a vacancy.\n______________________\nThe response body depends on the vacancy fields schema. You can see this schema\n[here](/v2/docs#get-/accounts/-account_id-/vacancies/additional_fields)","operationId":"get_vacancy_accounts__account_id__vacancies__vacancy_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"put":{"tags":["Vacancies"],"summary":"Update a vacancy","description":"Updates a vacancy and returns it.","operationId":"update_vacancy_accounts__account_id__vacancies__vacancy_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyUpdateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"patch":{"tags":["Vacancies"],"summary":"Partially update a vacancy","description":"Partially updates a vacancy and returns it (only passed request body parameters would be updated).","operationId":"update_vacancy_partial_accounts__account_id__vacancies__vacancy_id__patch","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyUpdatePartialRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2},"delete":{"tags":["Vacancies"],"summary":"Delete a vacancy","operationId":"delete_vacancy_accounts__account_id__vacancies__vacancy_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":3}},"/accounts/{account_id}/vacancies/{vacancy_id}/logs":{"get":{"tags":["Vacancies"],"summary":"Get a vacancy's logs","description":"Returns a list of vacancy logs with pagination.","operationId":"get_vacancy_logs_accounts__account_id__vacancies__vacancy_id__logs_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"date_begin","in":"query","required":false,"schema":{"title":"Date Begin","example":"2020-01-01T00:00:00+03:00","type":"string","format":"date-time"}},{"name":"date_end","in":"query","required":false,"schema":{"title":"Date End","example":"2020-01-01T00:00:00+03:00","type":"string","format":"date-time"}},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyLogsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/periods":{"get":{"tags":["Vacancies"],"summary":"Get a vacancy periods","description":"Returns the periods of the vacancy.","operationId":"get_vacancy_periods_accounts__account_id__vacancies__vacancy_id__periods_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"date_begin","in":"query","required":true,"schema":{"title":"Date Begin","example":"2020-01-01T00:00:00+03:00","type":"string","format":"date-time"}},{"name":"date_end","in":"query","required":true,"schema":{"title":"Date End","example":"2020-01-01T00:00:00+03:00","type":"string","format":"date-time"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyPeriodsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/frame":{"get":{"tags":["Vacancies"],"summary":"Get a last vacancy frame","description":"Returns the last frame of a vacancy.","operationId":"get_last_vacancy_frame_accounts__account_id__vacancies__vacancy_id__frame_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LastVacancyFrameResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/frames":{"get":{"tags":["Vacancies"],"summary":"Get a list of vacancy frames","description":"Returns the list of vacancy frames.","operationId":"get_vacancy_frames_list_accounts__account_id__vacancies__vacancy_id__frames_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyFramesListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/quotas":{"get":{"tags":["Vacancies"],"summary":"Get a vacancy quotas","description":"Returns quotas for vacancy.\n\nA vacancy can have one or more fill quotas.\nFill quotas bind vacancies, vacancy requests (optional),\na number of applicants to hire and deadlines to close vacancies.\nSelectable number of fill quotas for one vacancy allows to precise\ncontrol times of vacancy requests closing.\nAnd at the same time there may be several vacancy requests on one vacancy,\nalso requests may be attached to the vacancy at any moment.\nFor a vacancy it's allowed to have one fill quota without a vacancy request.\n______________________\nCases:\n1. Vacancy is not multivacancy - just select all vacancy's quotas\n2. Vacancy is multivacancy - select all children quotas not further than first page,\n otherwise error returned.\n\n______________________\nResponse format is:\n```json\n{\n    \"vacancy_id\": {\n        \"page\": 1,\n        \"count\": 5,\n        \"total\": 10,\n        \"items\": [{quota_1}, {quota_2}, ...]\n    },\n    \"another_vacancy_id\": {\n        ...\n    }\n}\n```","operationId":"get_vacancy_quotas_accounts__account_id__vacancies__vacancy_id__quotas_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyQuotasResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/frames/{frame_id}/quotas":{"get":{"tags":["Vacancies"],"summary":"Get a vacancy quotas in frame","description":"Returns quotas for vacancy frame.","operationId":"get_vacancy_quotas_by_frame_accounts__account_id__vacancies__vacancy_id__frames__frame_id__quotas_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"frame_id","in":"path","required":true,"schema":{"title":"Frame Id","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":4}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyFrameQuotasResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/members/{account_member_id}":{"put":{"tags":["Vacancies"],"summary":"Assign a coworker to a vacancy","description":"Assigns a coworker to a vacancy.\n__________\nRestrictions:\n- To assign a `watcher` to a vacancy, you must specify a permission list with vacancy statuses,\n otherwise a 400 error will be returned.","operationId":"assign_vacancy_member_accounts__account_id__vacancies__vacancy_id__members__account_member_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"account_member_id","in":"path","required":true,"schema":{"title":"Account Member Id","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","exclusiveMinimum":0,"type":"integer"},"description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":11}],"requestBody":{"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyMemberCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"delete":{"tags":["Vacancies"],"summary":"Remove a coworker from a vacancy","operationId":"remove_vacancy_member_accounts__account_id__vacancies__vacancy_id__members__account_member_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"account_member_id","in":"path","required":true,"schema":{"title":"Account Member Id","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","exclusiveMinimum":0,"type":"integer"},"description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":11}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/vacancies/{vacancy_id}/state/close":{"post":{"tags":["Vacancies"],"summary":"Close vacancy","description":"Changes the vacancy's state to 'CLOSED'.","operationId":"close_vacancy_accounts__account_id__vacancies__vacancy_id__state_close_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyCloseRequest"}]}}}},"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/state/hold":{"post":{"tags":["Vacancies"],"summary":"Hold vacancy","description":"Changes the vacancy's status to 'HOLD'.","operationId":"hold_vacancy_accounts__account_id__vacancies__vacancy_id__state_hold_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/VacancyHoldRequest"}]}}}},"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/{vacancy_id}/state/resume":{"post":{"tags":["Vacancies"],"summary":"Resume vacancy","description":"Changes the vacancy's state to 'OPEN' (for vacancies with 'HOLD' state).","operationId":"resume_vacancy_accounts__account_id__vacancies__vacancy_id__state_resume_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants":{"get":{"tags":["Applicants"],"summary":"Get all applicants","description":"Returns a list of applicants with pagination. This is a simple method that has limited filtering options.\nUse [search](/v2/docs#get-/accounts/-account_id-/applicants/search) method for more precise filtering.","operationId":"get_applicants_list_accounts__account_id__applicants_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":30,"type":"integer"},"description":"Number of items per page"},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1},{"name":"status","in":"query","required":false,"schema":{"title":"Status","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)<br>If supplied, then only applicants who are currently in vacancies at the specified status will be returned.<br>Cannot be supplied if the `agreement_state` parameter is passed.","exclusiveMinimum":0,"type":"integer"},"description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)<br>If supplied, then only applicants who are currently in vacancies at the specified status will be returned.<br>Cannot be supplied if the `agreement_state` parameter is passed.","example":4},{"name":"vacancy","in":"query","required":false,"schema":{"title":"Vacancy","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>Used to filter applicants by vacancy.","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>Used to filter applicants by vacancy.","example":9},{"name":"agreement_state","in":"query","required":false,"schema":{"description":"Agreement's state of applicant to personal data processing.<br>Available if the Personal Data module is enabled for organization.<br>Cannot be supplied if the `status` parameter is passed.","allOf":[{"$ref":"#/components/schemas/AgreementState"}]},"description":"Agreement's state of applicant to personal data processing.<br>Available if the Personal Data module is enabled for organization.<br>Cannot be supplied if the `status` parameter is passed.","example":"not_sent"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Applicants"],"summary":"Create an applicant","description":"Returns the created applicant.","operationId":"create_applicant_accounts__account_id__applicants_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/ApplicantCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantCreateResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"402":{"content":{"application/json":{"example":{"errors":[{"type":"payment_required","title":"applicants_limit_exceeded"}]}}},"description":"Payment Required"}},"x-order":1}},"/accounts/{account_id}/applicants/{applicant_id}":{"get":{"tags":["Applicants"],"summary":"Get an applicant","description":"Returns the specified applicant.","operationId":"get_applicant_accounts__account_id__applicants__applicant_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantItem"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"patch":{"tags":["Applicants"],"summary":"Update an applicant","description":"Partially updates an applicant and returns it.\n\nFor example, to update the applicant's firstname only, you can send a request like this:\n```json\n{\"first_name\": \"John\"}\n```","operationId":"update_applicant_accounts__account_id__applicants__applicant_id__patch","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/ApplicantUpdateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantItem"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"delete":{"tags":["Applicants"],"summary":"Delete an applicant","operationId":"delete_applicant_accounts__account_id__applicants__applicant_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2}},"/accounts/{account_id}/applicants/search":{"get":{"tags":["Applicants"],"summary":"Search applicants","description":"Returns a list of found applicants. Limited by 20k items.\nIf you want to get more, use [applicants search by cursor](/v2/docs#get-/accounts/-account_id-/applicants/search_by_cursor)","operationId":"search_applicants_accounts__account_id__applicants_search_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"q","in":"query","required":false,"schema":{"title":"Q","description":"Search query","type":"string"},"description":"Search query","example":"Python developer"},{"name":"field","in":"query","required":false,"schema":{"description":"Search field","default":"all","allOf":[{"$ref":"#/components/schemas/ApplicantSearchField"}]},"description":"Search field","example":"education"},{"name":"tag","in":"query","required":false,"schema":{"title":"Tag","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","type":"array","items":{"type":"integer"}},"description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":[2,3]},{"name":"status","in":"query","required":false,"schema":{"title":"Status","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","type":"array","items":{"type":"integer"}},"description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":[1,2,3]},{"name":"rejection_reason","in":"query","required":false,"schema":{"title":"Rejection Reason","description":"\n[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons). This parameter is applicable only in conjunction with \n`status` parameter, which is set to the rejection status identifier (one with type='trash').\nOtherwise it will be ignored.\n","type":"array","items":{"type":"integer"}},"description":"\n[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons). This parameter is applicable only in conjunction with \n`status` parameter, which is set to the rejection status identifier (one with type='trash').\nOtherwise it will be ignored.\n","example":[5,6,7]},{"name":"only_current_status","in":"query","required":false,"schema":{"title":"Only Current Status","description":"If the value is set to `true`, then applicants who are currently at this status will be displayed. Otherwise applicants who have ever been at this status will be displayed","default":false,"type":"boolean"},"description":"If the value is set to `true`, then applicants who are currently at this status will be displayed. Otherwise applicants who have ever been at this status will be displayed","example":"false"},{"name":"vacancy","in":"query","required":false,"schema":{"title":"Vacancy","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If you pass a `null` value, then applicants who have not been added to any vacancy will be displayed","type":"array","items":{"anyOf":[{"type":"integer"},{"$ref":"#/components/schemas/NullStr"}]}},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If you pass a `null` value, then applicants who have not been added to any vacancy will be displayed","example":[1,2,3]},{"name":"account_source","in":"query","required":false,"schema":{"title":"Account Source","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","type":"array","items":{"type":"integer"}},"description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":[7,8,9]},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantSearchResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/search_by_cursor":{"get":{"tags":["Applicants"],"summary":"Search applicants by cursor","description":"Returns a list of found applicants and a cursor to the next page.\nTo get the next page, you have to copy `next_page_cursor` from the answer and pass it in the request params.","operationId":"search_applicants_by_cursor_accounts__account_id__applicants_search_by_cursor_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"q","in":"query","required":false,"schema":{"title":"Q","description":"Search query","type":"string"},"description":"Search query","example":"Python developer"},{"name":"next_page_cursor","in":"query","required":false,"schema":{"title":"Next Page Cursor","description":"Next page cursor","type":"string"},"description":"Next page cursor"},{"name":"field","in":"query","required":false,"schema":{"description":"Search field","default":"all","allOf":[{"$ref":"#/components/schemas/ApplicantSearchField"}]},"description":"Search field","example":"education"},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"type":"integer"},"description":"Number of items per page","example":30},{"name":"tag","in":"query","required":false,"schema":{"title":"Tag","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","type":"array","items":{"type":"integer"}},"description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":[2,3]},{"name":"status","in":"query","required":false,"schema":{"title":"Status","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","type":"array","items":{"type":"integer"}},"description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":[1,2,3]},{"name":"rejection_reason","in":"query","required":false,"schema":{"title":"Rejection Reason","description":"\n[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons). This parameter is applicable only in conjunction with \n`status` parameter, which is set to the rejection status identifier (one with type='trash').\nOtherwise it will be ignored.\n","type":"array","items":{"type":"integer"}},"description":"\n[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons). This parameter is applicable only in conjunction with \n`status` parameter, which is set to the rejection status identifier (one with type='trash').\nOtherwise it will be ignored.\n","example":[5,6,7]},{"name":"only_current_status","in":"query","required":false,"schema":{"title":"Only Current Status","description":"If the value is set to `true`, then applicants who are currently at this status will be displayed. Otherwise applicants who have ever been at this status will be displayed","default":false,"type":"boolean"},"description":"If the value is set to `true`, then applicants who are currently at this status will be displayed. Otherwise applicants who have ever been at this status will be displayed","example":"false"},{"name":"vacancy","in":"query","required":false,"schema":{"title":"Vacancy","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If you pass a `null` value, then applicants who have not been added to any vacancy will be displayed","type":"array","items":{"anyOf":[{"type":"integer"},{"$ref":"#/components/schemas/NullStr"}]}},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If you pass a `null` value, then applicants who have not been added to any vacancy will be displayed","example":[1,2,3]},{"name":"account_source","in":"query","required":false,"schema":{"title":"Account Source","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","type":"array","items":{"type":"integer"}},"description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":[7,8,9]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantSearchByCursorResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/logs":{"get":{"tags":["Applicants"],"summary":"Get an applicant's worklog","description":"Returns a list of applicant's worklog.\n\nAvailable log types:\n- `COMMENT`: Regular comment\n- `ADD`: Applicant created\n- `RESPONSE`: Response letter\n- `STATUS`: Applicant moved to the [vacancy status](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)\n- `VACANCY-ADD`: Applicant applied on the vacancy\n- `UPDATE`: Resume updated from another source\n- `DOUBLE`: Applicant was merged with another applicant (duplicate)\n- `MAIL`: Email\n- `AGREEMENT`: Applicant agreement\n\n__________\nRestrictions:\n- Arguments `vacancy` and `personal` are mutually exclusive.\nYou must provide only one of them, not both.\nOtherwise, a 400 error will be returned.","operationId":"get_applicant_log_accounts__account_id__applicants__applicant_id__logs_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9},{"name":"type","in":"query","required":false,"schema":{"description":"Log type","type":"array","items":{"$ref":"#/components/schemas/ApplicantLogType"}},"description":"Log type"},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1},{"name":"personal","in":"query","required":false,"schema":{"title":"Personal","description":"If supplied, only logs not related to any vacancy will be returned","type":"boolean"},"description":"If supplied, only logs not related to any vacancy will be returned","example":"false"},{"name":"vacancy","in":"query","required":false,"schema":{"title":"Vacancy","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If supplied, only logs related to the specified vacancy will be returned","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If supplied, only logs related to the specified vacancy will be returned","example":9}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantLogResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Applicants"],"summary":"Create a worklog note","description":"Adds a log of type `COMMENT` to the applicant's worklog.\n\nPossible log types available [here](/v2/docs#get-/accounts/-account_id-/applicants/-applicant_id-/logs)","operationId":"create_applicant_log_accounts__account_id__applicants__applicant_id__logs_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/CreateApplicantLogRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApplicantLogResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/applicants/{applicant_id}/responses":{"get":{"tags":["Applicants"],"summary":"Get an applicant's responses","description":"Returns a list of applicant's responses from job sites.\n\nTo get the next page, you have to copy `next_page_cursor`\nfrom the answer and pass it in the request params.","operationId":"get_applicant_responses_accounts__account_id__applicants__applicant_id__responses_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"next_page_cursor","in":"query","required":false,"schema":{"title":"Next Page Cursor","description":"Next page cursor","type":"string"},"description":"Next page cursor"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantResponsesListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/externals/{external_id}":{"get":{"tags":["Applicant's resumes"],"summary":"Get an applicant's resume","description":"Returns an applicant resume.","operationId":"get_applicant_resume_accounts__account_id__applicants__applicant_id__externals__external_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":20},{"name":"external_id","in":"path","required":true,"schema":{"title":"External Id","description":"Resume ID","type":"integer"},"description":"Resume ID","example":2}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantResumeResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"put":{"tags":["Applicant's resumes"],"summary":"Update an applicant's resume","description":"Edits the specified applicant's resume and returns it.\n_____________\nRestrictions:\n- Note that you cannot edit the body of a resume from job boards\n- Only one file can be attached to a resume","operationId":"update_applicant_resume_accounts__account_id__applicants__applicant_id__externals__external_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":20},{"name":"external_id","in":"path","required":true,"schema":{"title":"External Id","description":"Resume ID","type":"integer"},"description":"Resume ID","example":2}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/ApplicantResumeUpdateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantResumeResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"delete":{"tags":["Applicant's resumes"],"summary":"Delete an applicant's resume","description":"________\nRestrictions:\n  - Note that you cannot delete the only remaining resume.","operationId":"delete_applicant_resume_accounts__account_id__applicants__applicant_id__externals__external_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":20},{"name":"external_id","in":"path","required":true,"schema":{"title":"External Id","description":"Resume ID","type":"integer"},"description":"Resume ID","example":2}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2}},"/accounts/{account_id}/applicants/{applicant_id}/externals/{external_id}/pdf":{"get":{"tags":["Applicant's resumes"],"summary":"Download an applicant's resume in PDF","description":"Returns a pdf file of the applicant's resume.","operationId":"download_applicant_resume_pdf_accounts__account_id__applicants__applicant_id__externals__external_id__pdf_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":20},{"name":"external_id","in":"path","required":true,"schema":{"title":"External Id","description":"Resume ID","type":"integer"},"description":"Resume ID","example":2}],"responses":{"200":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/sources":{"get":{"tags":["Applicant's resumes"],"summary":"Get all applicants' resume sources","description":"Returns a list of applicant's resume sources.","operationId":"get_applicant_sources_accounts__account_id__applicants_sources_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantSourcesResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/upload":{"post":{"tags":["Files and CV Parsing"],"summary":"Upload file","description":"To upload a file send a request `multipart/form-data` with a file in parameter `file`.\n\nTo make sure that the file will be processed by the system of field recognition, one has to pass a header `X-File-Parse: true`. <br>\nIn this case the response will contain the fields `text`, `photo`, `fields`.","operationId":"upload_file_accounts__account_id__upload_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"Organization ID","exclusiveMinimum":0,"type":"integer"},"description":"Organization ID","example":11},{"name":"x-file-parse","in":"header","required":false,"schema":{"title":"X-File-Parse","default":false,"type":"boolean"},"example":true},{"name":"x-ignore-lastname","in":"header","required":false,"schema":{"title":"X-Ignore-Lastname","type":"string"},"example":"Ivanov,Petrov"},{"name":"x-ignore-email","in":"header","required":false,"schema":{"title":"X-Ignore-Email","type":"string"},"example":"example@mail.ru"},{"name":"x-ignore-phone","in":"header","required":false,"schema":{"title":"X-Ignore-Phone","type":"string"},"example":"+7999999999999"}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_file_accounts__account_id__upload_post"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UploadResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/vacancy":{"post":{"tags":["Applicant On Vacancy"],"summary":"Add an applicant or applicant's response to the vacancy","description":"Attaches an applicant to the vacancy\n\n`Note`: Optionally you can add email message, calendar event, offer, sms or telegram-message","operationId":"add_applicant_to_vacancy_accounts__account_id__applicants__applicant_id__vacancy_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":8},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants) / Response ID","pattern":"(?:response-)?[0-9]+","type":"string"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants) / Response ID","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/AddApplicantToVacancyRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddApplicantToVacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"402":{"content":{"application/json":{"example":{"errors":[{"type":"payment_required","title":"applicants_limit_exceeded"}]}}},"description":"Payment Required"}},"x-order":0},"put":{"tags":["Applicant On Vacancy"],"summary":"Change a recruitment status for an applicant","description":"Changes a vacancy status for an applicant\n\n`Note`: Optionally you can add email message, calendar event, offer, sms or telegram-message","operationId":"change_applicant_vacancy_status_accounts__account_id__applicants__applicant_id__vacancy_put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":8},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/ChangeVacancyApplicantStatusRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddApplicantToVacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/applicants/vacancy/{vacancy_id}/split":{"put":{"tags":["Applicant On Vacancy"],"summary":"Move an applicant to a child vacancy","description":"In case the applicant is on the [multivacancy](/v2/docs#tag--Multivacancies),\nhe can be moved to a child vacancy using this endpoint.","operationId":"split_applicant_to_vacancy_accounts__account_id__applicants_vacancy__vacancy_id__split_put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"Organization ID","type":"integer"},"description":"Organization ID"},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"Child vacancy ID","type":"integer"},"description":"Child vacancy ID"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/ApplicantVacancySplitRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantVacancySplitResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/statuses":{"get":{"tags":["Applicant On Vacancy"],"summary":"Get all recruitment statuses","description":"Returns a list of recruitment statuses (hiring stages).","operationId":"get_vacancy_statuses_accounts__account_id__vacancies_statuses_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyStatusesResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancies/status_groups":{"get":{"tags":["Applicant On Vacancy"],"summary":"Get a list of recruitment status groups","description":"Returns a list of recruitment status groups.\n______________________\nRecruitment status groups are groups of hiring stages","operationId":"get_vacancy_status_groups_list_accounts__account_id__vacancies_status_groups_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyStatusGroupsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/rejection_reasons":{"get":{"tags":["Applicant On Vacancy"],"summary":"Get all rejection reasons","description":"Returns a list of applicant on vacancy rejection reasons","operationId":"get_rejection_reasons_accounts__account_id__rejection_reasons_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RejectionReasonsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/tags":{"get":{"tags":["Applicant's Tags"],"summary":"Get all tags","description":"Returns a list of tags in the organization.\n____________\nRestrictions:\n- Users of type `watcher` do not have access to get the list of tags","operationId":"get_account_tags_list_accounts__account_id__tags_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountTagsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Applicant's Tags"],"summary":"Create a tag","description":"Creates a new tag in the organization and returns it.\n_____________\nRestrictions:\n- Users of type `watcher` do not have access to create a tag\n- Users of type `manager` have access to create a tag only if they have the\n`manage-tags` permission.","operationId":"create_account_tag_accounts__account_id__tags_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/CreateAccountTagRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountTagResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/tags/{tag_id}":{"get":{"tags":["Applicant's Tags"],"summary":"Get a tag","description":"Returns the specified tag.\n____________\nRestrictions:\n- Users of type `watcher` do not have access to get the tag","operationId":"get_account_tag_accounts__account_id__tags__tag_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"tag_id","in":"path","required":true,"schema":{"title":"Tag Id","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","type":"integer"},"description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":10}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountTagResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"put":{"tags":["Applicant's Tags"],"summary":"Update a tag","description":"Edits the specified tag in the organization and returns it.\n_____________\nRestrictions:\n- Users of type `watcher` do not have access to edit a tag\n- Users of type `manager` have access to edit a tag only if they have the\n`manage-tags` permission.","operationId":"update_account_tag_accounts__account_id__tags__tag_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"tag_id","in":"path","required":true,"schema":{"title":"Tag Id","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","type":"integer"},"description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":10}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/CreateAccountTagRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountTagResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"delete":{"tags":["Applicant's Tags"],"summary":"Delete a tag","description":"Deletes the specified tag in the organization.\n_____________\nRestrictions:\n- Users of type `watcher` do not have access to delete a tag\n- Users of type `manager` have access to delete a tag only if they have the\n`manage-tags` permission.","operationId":"delete_account_tag_accounts__account_id__tags__tag_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"tag_id","in":"path","required":true,"schema":{"title":"Tag Id","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","type":"integer"},"description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":10}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2}},"/accounts/{account_id}/applicants/{applicant_id}/tags":{"get":{"tags":["Applicant's Tags"],"summary":"Get all applicant's tags","description":"Returns a list of applicant's tags IDs.\n_____________\nRestrictions:\n- Users of type `watcher` do not have access to get applicant's tags","operationId":"get_applicant_tags_list_accounts__account_id__applicants__applicant_id__tags_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":10}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantTagsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Applicant's Tags"],"summary":"Update applicant's tags","description":"Edits a list of applicant's tags.\n\nThis operation overwrites all applicant's tags.\nFor example: current list of applicant's tags is `{\"tags\": [1, 2]}`.\n- To add a new tag with `ID=3` to the applicant, you should send `{\"tags\": [1, 2, 3]}`\n- To remove an existing applicant's tag with `ID=2`, you should send `{\"tags\": [1, 3]}`\n- To remove all applicant's tags, you should send `{\"tags\": []}`\n\n_____________\nRestrictions:\n- Users of type `watcher` cannot edit a list of applicant's tags","operationId":"update_applicant_tags_accounts__account_id__applicants__applicant_id__tags_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":10}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/CreateApplicantTagRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantTagsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/applicants/questionary":{"get":{"tags":["Applicant's questionary"],"summary":"Get organization applicant's questionary schema","description":"Returns a schema of applicant's questionary for organization.\n_________\nThe successful response may be very different from the example given here\nand depends on the settings of the organization.","operationId":"get_applicant_questionary_schema_accounts__account_id__applicants_questionary_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuestionarySchemaResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/questionary":{"get":{"tags":["Applicant's questionary"],"summary":"Get an applicant's questionary","description":"Returns a questionary for the specified applicant.\n_________\nThe successful response depends on the\n[questionary schema](/v2/docs#get-/accounts/-account_id-/applicants/questionary).","operationId":"get_applicant_questionary_accounts__account_id__applicants__applicant_id__questionary_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuestionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Applicant's questionary"],"summary":"Create an applicant's questionary","description":"Creates the questionary for the specified applicant and returns it.\n_________\nThe successful response depends on the\n[questionary schema](/v2/docs#get-/accounts/-account_id-/applicants/questionary).","operationId":"create_applicant_questionary_accounts__account_id__applicants__applicant_id__questionary_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/QuestionaryRequest"}]},"example":{"current_salary":{"income":"9","type":"Gross"},"current_total":{"income":"9","type":"Gross"},"expected_main":{"income":"9","type":"Gross"},"expected_trial":{"income":"9","type":"Gross"},"position":33255,"resource":667}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuestionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"patch":{"tags":["Applicant's questionary"],"summary":"Partially update an applicant's questionary","description":"Partially updates (changes only fields that passed with a request) a questionary for the\n specified applicant and returns it.\n_________\nThe successful response depends on the\n[questionary schema](/v2/docs#get-/accounts/-account_id-/applicants/questionary).","operationId":"change_applicant_questionary_accounts__account_id__applicants__applicant_id__questionary_patch","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/QuestionaryRequest"}]},"example":{"current_salary":{"income":"9","type":"Gross"},"current_total":{"income":"9","type":"Gross"},"expected_main":{"income":"9","type":"Gross"},"expected_trial":{"income":"9","type":"Gross"},"position":33255,"resource":667}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuestionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2}},"/accounts/{account_id}/offers":{"get":{"tags":["Applicant's Offer"],"summary":"Get all organization offers","description":"Returns a list of organization's offers.","operationId":"get_account_offers_list_accounts__account_id__offers_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountOffersListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/offers/{offer_id}":{"get":{"tags":["Applicant's Offer"],"summary":"Get an organization offer with it's schema","description":"Returns an organization's offer with a schema of values.","operationId":"get_account_offer_accounts__account_id__offers__offer_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"offer_id","in":"path","required":true,"schema":{"title":"Offer Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":100}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountOfferResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/offers/{offer_id}/pdf":{"get":{"tags":["Applicant's Offer"],"summary":"Get an applicant's PDF offer","description":"Returns an applicant offer in PDF format.","operationId":"get_applicant_offer_pdf_accounts__account_id__applicants__applicant_id__offers__offer_id__pdf_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9},{"name":"offer_id","in":"path","required":true,"schema":{"title":"Offer Id","description":"Offer ID","type":"integer"},"description":"Offer ID","example":12}],"responses":{"200":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/offers/{offer_id}":{"put":{"tags":["Applicant's Offer"],"summary":"Update an applicant's offer","description":"Updates an applicant's offer.","operationId":"edit_applicant_offer_accounts__account_id__applicants__applicant_id__offers__offer_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9},{"name":"offer_id","in":"path","required":true,"schema":{"title":"Offer Id","description":"Offer ID","type":"integer"},"description":"Offer ID","example":12}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantOffer"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantVacancyOfferResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/applicants/{applicant_id}/vacancy_frames/{vacancy_frame_id}/offer":{"get":{"tags":["Applicant's Offer"],"summary":"Get an applicant's vacancy offer","description":"Returns an applicant's offer for vacancy with its values.<br>\nThe composition of the values depends on the organization's offer settings.","operationId":"get_applicant_vacancy_offer_accounts__account_id__applicants__applicant_id__vacancy_frames__vacancy_frame_id__offer_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"applicant_id","in":"path","required":true,"schema":{"title":"Applicant Id","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","type":"integer"},"description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":9},{"name":"vacancy_frame_id","in":"path","required":true,"schema":{"title":"Vacancy Frame Id","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","type":"integer"},"description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":1},{"name":"normalize","in":"query","required":false,"schema":{"title":"Normalize","description":"Expand dictionary values to objects","default":false,"type":"boolean"},"description":"Expand dictionary values to objects","example":"false"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplicantVacancyOfferResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/multi-vacancies":{"post":{"tags":["Multivacancies"],"summary":"Create a multivacancy","description":"Creates a background task to create multivacancy and returns the [Task ID](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","operationId":"create_multi_vacancy_accounts__account_id__multi_vacancies_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","minimum":1,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/MultiVacancyCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MultiVacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/multi-vacancies/{vacancy_id}":{"put":{"tags":["Multivacancies"],"summary":"Update a multivacancy","description":"Creates a background task to edit a multivacancy and returns the [Task ID](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","operationId":"update_multi_vacancy_accounts__account_id__multi_vacancies__vacancy_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","minimum":1,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"Multivacancy ID","minimum":1,"type":"integer"},"description":"Multivacancy ID","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/MultiVacancyUpdateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MultiVacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"patch":{"tags":["Multivacancies"],"summary":"Partially update a multivacancy","description":"Creates a background task to partially update a multivacancy and returns the [Task ID](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","operationId":"update_multi_vacancy_partial_accounts__account_id__multi_vacancies__vacancy_id__patch","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","minimum":1,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"Multivacancy ID","minimum":1,"type":"integer"},"description":"Multivacancy ID","example":4}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/MultiVacancyUpdatePartialRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MultiVacancyResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/divisions":{"get":{"tags":["System Dictionaries"],"summary":"Get all company divisions","description":"Returns a list of company divisions.\n___________\nRestrictions:\n- Users of type `watcher` can only see their own available divisions","operationId":"get_account_divisions_accounts__account_id__divisions_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"only_available","in":"query","required":false,"schema":{"title":"Only Available","description":"If supplied, then only divisions available to the current user will be returned","default":false,"type":"boolean"},"description":"If supplied, then only divisions available to the current user will be returned","example":"true"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DivisionsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/coworkers/{coworker_id}/divisions":{"get":{"tags":["System Dictionaries"],"summary":"Get company divisions available to the specified user","description":"Returns a list of company divisions available to the specified user.\n\n**Note**: Coworker's company divisions are cached for 10 minutes.\n If a coworker's company divisions list has been changed,\n these changes will be displayed after a maximum of 10 minutes\n___________\nRestrictions:\n- Users of type `watcher` can not see coworker's company divisions","operationId":"get_coworkers_divisions_accounts__account_id__coworkers__coworker_id__divisions_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"coworker_id","in":"path","required":true,"schema":{"title":"Coworker Id","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","type":"integer"},"description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":15}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DivisionsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/divisions/batch":{"post":{"tags":["System Dictionaries"],"summary":"Create or update company divisions","description":"Creates or updates the structure of company divisions.<br>\n<span style=\"color:red\">Important</span>: Method requires the full structure of the actual divisions to be passed\n_____________\nYou can add some additional information for each division in the `meta` field.<br>\nThis endpoint creates a background task for updating the division structure and returns\nits identifier.\n_____________\nRestrictions:\n- `name` and `foreign` fields must be with non-zero length\n- `foreign` must be unique in the entire structure of the request body\n- Maximum nesting of subdivisions - 10\n- You cannot create tasks to update the hierarchy of division more than\nonce every 20 minutes (for the same organization). If an attempt is made\nto update divisions before 20 minutes have elapsed since the last\nsuccessful request, the server will return an error with HTTP status 429 (Too Many Requests).\n\nIf the task to update the divisions is accepted, the response will contains\n`payload.task_id` - the unique identifier of the task.\nYou can track this task [here](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","operationId":"update_account_divisions_batch_accounts__account_id__divisions_batch_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/BatchDivisionsRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchDivisionsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"429":{"content":{"application/json":{"example":{"errors":[{"type":"too_many_requests","title":"rate limit: too_freq"}]}}},"description":"Too Many Requests"}},"x-order":0}},"/accounts/{account_id}/regions":{"get":{"tags":["System Dictionaries"],"summary":"Get all organization regions","description":"Returns a list of organization regions.","operationId":"get_account_regions_accounts__account_id__regions_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegionsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/dictionaries":{"get":{"tags":["Custom Dictionaries"],"summary":"Get all custom dictionaries","description":"Returns a list of organization's custom dictionaries.\n_____________\nRestrictions:\n- This endpoint is only available to users of type `owner`,\notherwise a 403 error will be returned","operationId":"get_account_dictionaries_list_accounts__account_id__dictionaries_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","minimum":1,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionariesListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Custom Dictionaries"],"summary":"Create a custom dictionary","operationId":"create_account_dictionary_accounts__account_id__dictionaries_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/DictionaryCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryCreateResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/dictionaries/{dictionary_code}":{"get":{"tags":["Custom Dictionaries"],"summary":"Get a custom dictionary","operationId":"get_account_dictionary_accounts__account_id__dictionaries__dictionary_code__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"dictionary_code","in":"path","required":true,"schema":{"title":"Dictionary Code","description":"Dictionary code","type":"string"},"description":"Dictionary code","example":"citizenship"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"put":{"tags":["Custom Dictionaries"],"summary":"Update a custom dictionary","operationId":"update_account_dictionary_accounts__account_id__dictionaries__dictionary_code__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"dictionary_code","in":"path","required":true,"schema":{"title":"Dictionary Code","description":"Dictionary code","type":"string"},"description":"Dictionary code","example":"citizenship"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/DictionaryUpdateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DictionaryUpdateResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/action_logs":{"get":{"tags":["System and Security"],"summary":"Get all security logs","description":"Returns a list of security logs sorted in descending order (from newest to older).\n\nPossible types:\n- `SUCCESS_LOGIN`: Successful login\n- `FAILED_LOGIN`: User failed to login\n- `LOGOUT`: Sign Out\n- `INVITE_ACCEPTED`: Accepting an invitation to the system\n- `NEW_AUTH_IN_ACCOUNT`: Adding an additional login to the account (for example,\n linking the HeadHunter account via OAuth2)\n- `VACANCY_EXTERNAL`: Actions for posting vacancies on external resources\n- `ACCOUNT_MEMBER`: Actions related to changing user permissions\n- `DOWNLOAD_APPLICANTS`: Actions related to the bulk download of candidates (from the search, stop list and etc.)\n- `PASSWORD_CHANGE`: Actions related to password changing\n\nPagination is implemented using the `next_id` and `previous_id` parameters.<br>\nIf the response body contains the `next_id` field, and you need to get older logs,\nsupply its value as query-parameter.\n\nTo get logs that are newer than a particular log,\nyou need to supply this particular log ID as `previous_id` query-parameter\n__________\nRestrictions:\n- Users of types `manager` and `watcher` do not have access to get security logs","operationId":"get_action_logs_accounts__account_id__action_logs_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"type","in":"query","required":false,"schema":{"description":"Security log type","type":"array","items":{"$ref":"#/components/schemas/ActionLogType"}},"description":"Security log type","example":["SUCCESS_LOGIN"]},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"next_id","in":"query","required":false,"schema":{"title":"Next Id","description":"Security logs with IDs less than or equal to the specified one will be received","exclusiveMinimum":0,"type":"integer"},"description":"Security logs with IDs less than or equal to the specified one will be received","example":100},{"name":"previous_id","in":"query","required":false,"schema":{"title":"Previous Id","description":"Security logs with IDs strictly greater than the specified one will be received","exclusiveMinimum":0,"type":"integer"},"description":"Security logs with IDs strictly greater than the specified one will be received","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActionLogsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/delayed_tasks/{task_id}":{"get":{"tags":["System and Security"],"summary":"Get status of a system delayed task","operationId":"get_delayed_task_accounts__account_id__delayed_tasks__task_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"task_id","in":"path","required":true,"schema":{"title":"Task Id","description":"Task ID","type":"string","format":"uuid"},"description":"Task ID","example":"17d8ed92-1450-4000-8a39-94c4aa8ff901"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DelayedTask"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/hooks":{"get":{"tags":["Webhooks"],"summary":"Get all webhooks","operationId":"get_webhooks_accounts__account_id__hooks_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"webhook_type","in":"query","required":false,"schema":{"description":"Webhook type<br>If no value provided, webhooks of all types will be returned","allOf":[{"$ref":"#/components/schemas/WebhookType"}]},"description":"Webhook type<br>If no value provided, webhooks of all types will be returned","example":"USER"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhooksListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Webhooks"],"summary":"Create a webhook","operationId":"create_webhook_accounts__account_id__hooks_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Body","description":"Request body","allOf":[{"$ref":"#/components/schemas/WebhookRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/hooks/{webhook_id}":{"delete":{"tags":["Webhooks"],"summary":"Delete a webhook","operationId":"delete_webhook_accounts__account_id__hooks__webhook_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"webhook_id","in":"path","required":true,"schema":{"title":"Webhook Id","description":"[Webhook ID](/v2/docs#get-/accounts/-account_id-/hooks)","exclusiveMinimum":0,"type":"integer"},"description":"[Webhook ID](/v2/docs#get-/accounts/-account_id-/hooks)","example":1}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars":{"get":{"tags":["Production calendars"],"summary":"Get all production calendars","description":"Returns a list of production calendars","operationId":"get_production_calendars_list_production_calendars_get","security":[{"HTTPBearerAuth":[]}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CalendarListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}":{"get":{"tags":["Production calendars"],"summary":"Get a production calendar","description":"Returns a production calendar","operationId":"get_production_calendar_production_calendars__calendar_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CalendarResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/days/{deadline}":{"get":{"tags":["Production calendars"],"summary":"Get non-working days in a given period","description":"Returns the total number of non-working\\working days and a list of weekends and holidays within a range","operationId":"get_non_working_days_production_calendars__calendar_id__days__deadline__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1},{"name":"deadline","in":"path","required":true,"schema":{"title":"Deadline","description":"Deadline date","pattern":"^\\d{4}-\\d{2}-\\d{2}$","type":"string"},"description":"Deadline date","example":"2021-02-07"},{"name":"start","in":"query","required":false,"schema":{"title":"Start","description":"A date to start counting of non-working days. Default is today","type":"string","format":"date"},"description":"A date to start counting of non-working days. Default is today","example":"2021-02-01"},{"name":"verbose","in":"query","required":false,"schema":{"title":"Verbose","description":"Extends the response with the items field — list of dates, weekends and holidays within given range; in YYYY-MM-DD format","default":false,"type":"boolean"},"description":"Extends the response with the items field — list of dates, weekends and holidays within given range; in YYYY-MM-DD format","example":true}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NonWorkingDaysResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/days":{"post":{"tags":["Production calendars"],"summary":"Get non-working days for multiple periods","description":"Returns a list of objects with the total number of non-working / working days for the specified periods.\nObjects do not contain verbose information, as if you were making a single request","operationId":"get_non_working_days_bulk_production_calendars__calendar_id__days_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/NonWorkingDaysBulkRequest"}]},"example":[{"deadline":"2019-04-20"},{"deadline":"2019-05-20","start":"2018-05-20"}]}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NonWorkingDaysBulkResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/deadline/{days}":{"get":{"tags":["Production calendars"],"summary":"Get a deadline date evaluation taking into account the non-working days","description":"Returns a deadline after {days} working days","operationId":"get_get_deadline_date_production_calendars__calendar_id__deadline__days__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1},{"name":"days","in":"path","required":true,"schema":{"title":"Days","description":"Working days amount","type":"integer"},"description":"Working days amount","example":15},{"name":"start","in":"query","required":false,"schema":{"title":"Start","description":"A date to start counting. Default is today","type":"string","format":"date"},"description":"A date to start counting. Default is today","example":"2025-05-07"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get Get Deadline Date Production Calendars  Calendar Id  Deadline  Days  Get","type":"string","format":"date"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/deadline":{"post":{"tags":["Production calendars"],"summary":"Get multiple deadline dates evaluation taking into account the non-working days","description":"Returns a list of deadlines","operationId":"get_get_deadline_date_bulk_production_calendars__calendar_id__deadline_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/DeadLineDatesBulkRequest"}]},"example":[{"days":10},{"days":20},{"days":30,"start":"2007-09-01"}]}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeadLineDatesBulkResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/start/{days}":{"get":{"tags":["Production calendars"],"summary":"Get a start date evaluation taking into account the non-working days","description":"Returns a date in {days} working days ahead, according to {calendar_id} production calendar.","operationId":"get_start_date_production_calendars__calendar_id__start__days__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1},{"name":"days","in":"path","required":true,"schema":{"title":"Days","description":"Working days amount","type":"integer"},"description":"Working days amount","example":15},{"name":"deadline","in":"query","required":false,"schema":{"title":"Deadline","description":"A date to start reverse counting. Default is today","type":"string","format":"date"},"description":"A date to start reverse counting. Default is today","example":"2025-05-07"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get Start Date Production Calendars  Calendar Id  Start  Days  Get","type":"string","format":"date"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/production_calendars/{calendar_id}/start":{"post":{"tags":["Production calendars"],"summary":"Get a list of start dates evaluation taking into account the non-working days","description":"Returns a list of start dates","operationId":"get_start_dates_bulk_production_calendars__calendar_id__start_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"calendar_id","in":"path","required":true,"schema":{"title":"Calendar Id","description":"Calendar ID","exclusiveMinimum":0,"type":"integer"},"description":"Calendar ID","example":1}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/StartDatesBulkRequest"}]},"example":[{"days":10},{"days":20},{"days":30,"deadline":"2017-09-01"}]}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeadLineDatesBulkResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/calendar":{"get":{"tags":["Production calendars"],"summary":"Get organization's production calendar","operationId":"get_organization_calendar_accounts__account_id__calendar_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCalendar"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/coworkers":{"get":{"tags":["Organization settings"],"summary":"Get all coworkers","description":"Returns a list of coworkers with pagination.\n______________\n\nRestrictions:\n- Users of type `watcher` can only see coworkers who are on the same vacancies with them.\nCoworker permissions are not available for users of this type.","operationId":"get_account_coworkers_accounts__account_id__coworkers_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"type","in":"query","required":false,"schema":{"description":"Coworker type. Used to filter coworkers by their type (role). If not supplied, then coworkers of all types will be returned.","type":"array","items":{"$ref":"#/components/schemas/MemberType"}},"description":"Coworker type. Used to filter coworkers by their type (role). If not supplied, then coworkers of all types will be returned."},{"name":"fetch_permissions","in":"query","required":false,"schema":{"title":"Fetch Permissions","description":"Flag for returning coworker's permissions. If supplied, then all coworkers will contain a list of their permissions.","type":"boolean"},"description":"Flag for returning coworker's permissions. If supplied, then all coworkers will contain a list of their permissions."},{"name":"vacancy_id","in":"query","required":false,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). Used to filter coworkers by vacancies. If supplied, a list of coworkers working on the specified vacancies will be returned.","type":"array","items":{"type":"integer"}},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). Used to filter coworkers by vacancies. If supplied, a list of coworkers working on the specified vacancies will be returned."},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoworkersListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/coworkers/{coworker_id}":{"get":{"tags":["Organization settings"],"summary":"Get a coworker","description":"Returns the specified coworker with a list of their permissions.\n______________\nRestrictions:\n- Users of type `watcher` cannot see coworker detail information.","operationId":"get_account_coworker_accounts__account_id__coworkers__coworker_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"coworker_id","in":"path","required":true,"schema":{"title":"Coworker Id","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","type":"integer"},"description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":15},{"name":"vacancy_id","in":"query","required":false,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). Used to filter permissions by vacancy. If supplied, then the list of permissions will only contain permissions for the specified vacancy.","type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies). Used to filter permissions by vacancy. If supplied, then the list of permissions will only contain permissions for the specified vacancy.","example":4}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoworkerResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/mail/templates":{"get":{"tags":["Organization settings"],"summary":"Get all email templates","description":"Returns a list of email templates.\n______________\nRestrictions:\n- Users of type `watcher` do not have access to the list of email templates","operationId":"get_mail_templates_list_accounts__account_id__mail_templates_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"editable","in":"query","required":false,"schema":{"title":"Editable","description":"Pass `true` if the method should return only templates that the current user can edit","type":"boolean"},"description":"Pass `true` if the method should return only templates that the current user can edit","example":"false"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MailTemplatesResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancy_close_reasons":{"get":{"tags":["Organization settings"],"summary":"Get all vacancy close reasons","description":"Returns a list of vacancy close reasons","operationId":"get_vacancy_close_reasons_accounts__account_id__vacancy_close_reasons_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloseHoldReasonsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/vacancy_hold_reasons":{"get":{"tags":["Organization settings"],"summary":"Get all vacancy hold reasons","description":"Returns a list of vacancy hold reasons","operationId":"get_vacancy_hold_reasons_accounts__account_id__vacancy_hold_reasons_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloseHoldReasonsListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/interview_types":{"get":{"tags":["Organization settings"],"summary":"Get all interview types","description":"Returns a list of interview types","operationId":"get_interview_types_accounts__account_id__interview_types_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InterviewTypesListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/users/{user_id}":{"get":{"tags":["Users"],"summary":"Get a user","description":"Returns the specified user with a list of his permissions.\n______________\nRestrictions:\n- Users of type `watcher` cannot see other users detail information.","operationId":"get_user_accounts__account_id__users__user_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"user_id","in":"path","required":true,"schema":{"title":"User Id","description":"User id","type":"integer"},"description":"User id","example":15}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/users/foreign/task/{task_id}":{"get":{"tags":["Users Management"],"summary":"Get foreign user control task result","description":"Returns users management task handling result.\nAll user identifiers in response are foreign.","operationId":"get_task_result_accounts__account_id__users_foreign_task__task_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"task_id","in":"path","required":true,"schema":{"title":"Task Id","description":"Task ID","type":"string","format":"uuid"},"description":"Task ID","example":"17d8ed92-1450-4000-8a39-94c4aa8ff901"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserControlTaskResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/users/foreign":{"get":{"tags":["Users Management"],"summary":"Get a list of all users with their foreign identifiers","description":"Returns all users in organization with\ntheir permissions (vacancies permissions are not included),\n available divisions and their manager's identifiers.\nAll identifiers in response are foreign.\n______________\nRestrictions:\n- Divisions and managers fields available when this service kinds are active.\n- `null` in permissions or/and divisions fields means \"all\".","operationId":"get_foreign_users_list_accounts__account_id__users_foreign_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"member_types","in":"query","required":false,"schema":{"description":"Member types","type":"array","items":{"$ref":"#/components/schemas/MemberType"}},"description":"Member types","example":"owner"},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"maximum":100,"type":"integer"},"description":"Number of items per page","example":30},{"name":"page","in":"query","required":false,"schema":{"title":"Page","description":"Page number","default":1,"exclusiveMinimum":0,"type":"integer"},"description":"Page number","example":1}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForeignUsersListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"post":{"tags":["Users Management"],"summary":"Create new user","description":"Schedules a task to create a new user and returns the task's data.\nYou can track this task [here](/v2/docs#get-/accounts/-account_id-/users/foreign/task/-task_id-).\nYou can get created user [here](/v2/docs#get-/accounts/-account_id-/users/foreign/-foreign_user_id-).","operationId":"create_foreign_user_accounts__account_id__users_foreign_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Foreign user data","allOf":[{"$ref":"#/components/schemas/ForeignUserRequest"}]}}}},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatedUserControlTaskResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/users/foreign/{foreign_user_id}/id":{"get":{"tags":["Users Management"],"summary":"Get internal ID of an existing user by his foreign identifier","description":"Returns internal ID of the specified user.\nRequest user's identifier is foreign, response user's identifier is internal.","operationId":"get_internal_id_of_foreign_user_accounts__account_id__users_foreign__foreign_user_id__id_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"foreign_user_id","in":"path","required":true,"schema":{"title":"Foreign User Id","description":"Foreign ID of User","type":"string"},"description":"Foreign ID of User","example":"user-032155"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserId"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/users/foreign/{foreign_user_id}":{"get":{"tags":["Users Management"],"summary":"Get an existing user by his foreign identifier","description":"Returns the specified user with his permissions,\navailable divisions and his manager's identificators.\nAll identifiers in request and response are foreign.\n______________\nRestrictions:\n- Divisions and managers fields available when these service kinds are active.\n- `null` in permissions or/and divisions fields means \"all\".","operationId":"get_foreign_user_accounts__account_id__users_foreign__foreign_user_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"foreign_user_id","in":"path","required":true,"schema":{"title":"Foreign User Id","description":"Foreign ID of User","type":"string"},"description":"Foreign ID of User","example":"user-032155"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForeignUserResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"put":{"tags":["Users Management"],"summary":"Update existing user","description":"Schedules a task to update existing user and returns the task's data.\nYou can track this task [here](/v2/docs#get-/accounts/-account_id-/users/foreign/task/-task_id-).\nYou can get updated user [here](/v2/docs#get-/accounts/-account_id-/users/foreign/-foreign_user_id-).","operationId":"update_foreign_user_accounts__account_id__users_foreign__foreign_user_id__put","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"foreign_user_id","in":"path","required":true,"schema":{"title":"Foreign User Id","description":"Foreign ID of User","type":"string"},"description":"Foreign ID of User","example":"user-032155"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Foreign user data","allOf":[{"$ref":"#/components/schemas/ForeignUserRequest"}]}}}},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatedUserControlTaskResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1},"delete":{"tags":["Users Management"],"summary":"Delete existing user by his foreign identifier","description":"Schedules task to delete user and returns the task's data.\nYou can track this task [here](/v2/docs#get-/accounts/-account_id-/users/foreign/task/-task_id-).","operationId":"delete_foreign_user_accounts__account_id__users_foreign__foreign_user_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"foreign_user_id","in":"path","required":true,"schema":{"title":"Foreign User Id","description":"Foreign ID of User","type":"string"},"description":"Foreign ID of User","example":"user-032155"}],"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatedUserControlTaskResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":2}},"/accounts/{account_id}/surveys/type_a":{"get":{"tags":["Type a surveys"],"summary":"Get all applicant feedback form schemas","description":"Returns all applicant feedback form schemas in organization.","operationId":"get_survey_type_a_list_accounts__account_id__surveys_type_a_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"active","in":"query","required":true,"schema":{"title":"Active","description":"Shows either active or archived forms","type":"boolean"},"description":"Shows either active or archived forms","example":"true"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveySchemasTypeAListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_a/{survey_id}":{"get":{"tags":["Type a surveys"],"summary":"Get an applicant feedback form schema","description":"Returns an applicant feedback form schema.","operationId":"get_survey_type_a_accounts__account_id__surveys_type_a__survey_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"survey_id","in":"path","required":true,"schema":{"title":"Survey Id","description":"Survey ID","type":"integer"},"description":"Survey ID","example":8}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveySchemaTypeAResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_a/{survey_id}/answers/{answer_id}":{"get":{"tags":["Type a surveys"],"summary":"Get an answer of applicant feedback form by ID","description":"Returns answer of applicant feedback form.\nEach key in `data` represents a question in the survey form.\nSchema properties can be used to find information about the question by key.","operationId":"get_type_a_answer_accounts__account_id__surveys_type_a__survey_id__answers__answer_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"survey_id","in":"path","required":true,"schema":{"title":"Survey Id","description":"[Survey of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-)","type":"integer"},"description":"[Survey of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-)","example":3},{"name":"answer_id","in":"path","required":true,"schema":{"title":"Answer Id","description":"[Survey answer of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-/answers/-answer_id-)","type":"integer"},"description":"[Survey answer of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-/answers/-answer_id-)","example":8}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveyAnswerTypeAResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_q":{"get":{"tags":["Type q surveys"],"summary":"Get all survey questionary schemas for applicants","description":"Returns all survey questionary schemas for applicants for organization.","operationId":"get_survey_type_q_list_accounts__account_id__surveys_type_q_get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"active","in":"query","required":false,"schema":{"title":"Active","description":"Shows only active schemas","type":"boolean"},"description":"Shows only active schemas","example":"true"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveySchemasTypeQListResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_q/{survey_id}":{"get":{"tags":["Type q surveys"],"summary":"Get survey questionary schema for applicants","description":"Returns survey questionary schema for applicants.","operationId":"get_survey_type_q_accounts__account_id__surveys_type_q__survey_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"survey_id","in":"path","required":true,"schema":{"title":"Survey Id","description":"Survey ID","type":"integer"},"description":"Survey ID","example":8}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveySchemaTypeQResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_q/questionaries":{"post":{"tags":["Type q surveys"],"summary":"Create survey questionary for applicant","description":"Creates survey questionary.\n\nFor proper questionary creation a log must be created with survey questionary attached by\n[create a worklog note](/v2/docs#post-/accounts/-account_id-/applicants/-applicant_id-/logs)\nmethod.","operationId":"create_survey_questionary_accounts__account_id__surveys_type_q_questionaries_post","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"title":"Data","description":"Request body","allOf":[{"$ref":"#/components/schemas/SurveyQuestionaryCreateRequest"}]}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveyQuestionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/surveys/type_q/questionaries/{questionary_id}":{"get":{"tags":["Type q surveys"],"summary":"Get survey questionary for applicant by ID","description":"Returns survey questionary.","operationId":"get_survey_questionary_accounts__account_id__surveys_type_q_questionaries__questionary_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"questionary_id","in":"path","required":true,"schema":{"title":"Questionary Id","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)","type":"integer"},"description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)","example":8}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveyQuestionaryResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0},"delete":{"tags":["Type q surveys"],"summary":"Delete survey questionary for applicant by ID","description":"Deletes survey questionary.","operationId":"delete_survey_questionary_accounts__account_id__surveys_type_q_questionaries__questionary_id__delete","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"questionary_id","in":"path","required":true,"schema":{"title":"Questionary Id","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)","type":"integer"},"description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)","example":8}],"responses":{"204":{"description":"Successful Response"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":1}},"/accounts/{account_id}/surveys/type_q/answers/{answer_id}":{"get":{"tags":["Type q surveys"],"summary":"Get survey questionary answer by ID","description":"Returns survey questionary answer.\nEach key in `data` represents a question in the survey form.\nSchema properties can be used to find information about the question by key.","operationId":"get_type_q_answer_accounts__account_id__surveys_type_q_answers__answer_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"answer_id","in":"path","required":true,"schema":{"title":"Answer Id","description":"[Survey questionary answer ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/answers/-answer_id-)","type":"integer"},"description":"[Survey questionary answer ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/answers/-answer_id-)","example":8}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurveyQuestionaryAnswerResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}},"/accounts/{account_id}/recommendations/{vacancy_id}":{"get":{"tags":["Recommendations"],"summary":"Get a list of applicants recommended for a vacancy","description":"Get a list of applicants recommended for a vacancy","operationId":"get_recommendations_accounts__account_id__recommendations__vacancy_id__get","security":[{"HTTPBearerAuth":[]}],"parameters":[{"name":"account_id","in":"path","required":true,"schema":{"title":"Account Id","description":"[Organization ID](/v2/docs#get-/accounts)","exclusiveMinimum":0,"type":"integer"},"description":"[Organization ID](/v2/docs#get-/accounts)","example":11},{"name":"vacancy_id","in":"path","required":true,"schema":{"title":"Vacancy Id","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","exclusiveMinimum":0,"type":"integer"},"description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},{"name":"count","in":"query","required":false,"schema":{"title":"Count","description":"Number of items per page","default":30,"exclusiveMinimum":0,"type":"integer"},"description":"Number of items per page","example":30},{"name":"next_page_cursor","in":"query","required":false,"schema":{"title":"Next Page Cursor","description":"Next page cursor","type":"string"},"description":"Next page cursor"},{"name":"processing_status","in":"query","required":false,"schema":{"description":"Get all recommendations or processed\\unprocessed only","default":"ALL","allOf":[{"$ref":"#/components/schemas/RecommendationProcessingFilter"}]},"description":"Get all recommendations or processed\\unprocessed only"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VacancyRecommendationsResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"}},"x-order":0}}},"components":{"schemas":{"AcceptorInfo":{"title":"AcceptorInfo","required":["id","name","email"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) who accepted the vacancy request"},"name":{"title":"Name","type":"string","description":"Name of coworker who accepted the vacancy request","example":"Jane Doe"},"email":{"title":"Email","type":"string","description":"Email of coworker who accepted the vacancy request","format":"email"}}},"Account":{"title":"Account","required":["id","name","email","account_type","created","locale","nick","meta","active"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Account ID","example":12},"name":{"title":"Name","type":"string","description":"Account name","example":"Jack Dilan"},"email":{"title":"Email","type":"string","description":"Account email","example":"email@example.com"},"account_type":{"title":"Account Type","type":"string","description":"Account type","example":"personal"},"last_action":{"title":"Last Action","type":"string","description":"When was last action in account","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"created":{"title":"Created","type":"string","description":"When account created","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"locale":{"title":"Locale","type":"string","description":"Account locale","example":"RU_ru"},"photo":{"title":"Photo","maxLength":65536,"minLength":1,"type":"string","description":"Photo file","format":"uri","example":"https://some_photo.ru/38478"},"source":{"title":"Source","type":"string","description":"Source","example":"0x5F22EC3F759E002B"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"+7999999999"},"nick":{"title":"Nick","type":"string","description":"Account nick","example":"Test nick"},"meta":{"title":"Meta","description":"Additional info"},"production_calendar":{"title":"Production Calendar","exclusiveMinimum":0.0,"type":"integer","description":"Production calendar ID","example":14},"active":{"title":"Active","type":"boolean","description":"Is active"},"position":{"title":"Position","type":"string","description":"Position","example":"Some position"},"crm":{"title":"Crm","type":"integer","description":"CRM"}}},"AccountCalendar":{"title":"AccountCalendar","required":["account","production_calendar"],"type":"object","properties":{"account":{"title":"Account","exclusiveMinimum":0.0,"type":"integer","description":"Organization ID"},"production_calendar":{"title":"Production Calendar","exclusiveMinimum":0.0,"type":"integer","description":"Calendar ID"}}},"AccountInfo":{"title":"AccountInfo","required":["id","name"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"ID of the user who opened the quota","example":11},"name":{"title":"Name","type":"string","description":"Name of the user who opened the quota","example":"John Joe"},"email":{"title":"Email","type":"string","description":"Email of the user who opened the quota","format":"email","example":"test@example.com"}}},"AccountOffer":{"title":"AccountOffer","required":["id","name","active","template"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Offer ID","example":100},"name":{"title":"Name","type":"string","description":"Offer name","example":"Standard offer"},"active":{"title":"Active","type":"boolean","description":"Offer activity flag","example":true},"template":{"title":"Template","type":"string","description":"HTML template","example":"<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n</head>\n<body>\n{% set values = data.offer['values'] %}\n{% set applicant = data.applicant %}\n<div class=\"logo\">\n    {% if data.account.photo %}\n        <img src=\"{{ data.account.photo }}\">\n    {% endif %}\n</div>\n<div class=\"offer\">\n    <div class=\"offer__header\">\n        Offer: {{ values.whom_name }}<br>\n        Position: {{ values.position_name }}<br>\n        Date of employment: {{ values.whom_date }}\n    </div>\n    <div class=\"offer__body\">\n        {{ values.offer_text|safe }}\n    </div>\n    <div class=\"offer__footer\">\n        <div>\n            {{ data.manager.name }}<br>\n            {% if data.manager.position %}\n                {{ data.manager.position }}<br>\n            {% endif %}\n        </div>\n    </div>\n</div>\n</body>\n</html>\n"}}},"AccountOfferResponse":{"title":"AccountOfferResponse","required":["id","name","active","template","schema"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Offer ID","example":100},"name":{"title":"Name","type":"string","description":"Offer name","example":"Standard offer"},"active":{"title":"Active","type":"boolean","description":"Offer activity flag","example":true},"template":{"title":"Template","type":"string","description":"HTML template","example":"<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n</head>\n<body>\n{% set values = data.offer['values'] %}\n{% set applicant = data.applicant %}\n<div class=\"logo\">\n    {% if data.account.photo %}\n        <img src=\"{{ data.account.photo }}\">\n    {% endif %}\n</div>\n<div class=\"offer\">\n    <div class=\"offer__header\">\n        Offer: {{ values.whom_name }}<br>\n        Position: {{ values.position_name }}<br>\n        Date of employment: {{ values.whom_date }}\n    </div>\n    <div class=\"offer__body\">\n        {{ values.offer_text|safe }}\n    </div>\n    <div class=\"offer__footer\">\n        <div>\n            {{ data.manager.name }}<br>\n            {% if data.manager.position %}\n                {{ data.manager.position }}<br>\n            {% endif %}\n        </div>\n    </div>\n</div>\n</body>\n</html>\n"},"schema":{"title":"Schema","type":"object","description":"Values schema","example":{"whom_name":{"type":"string","title":"Full name","required":true,"order":1,"id":37,"account":11,"value_from":["applicant.last_name","applicant.first_name","applicant.middle_name"]},"position_name":{"type":"string","title":"Position","required":true,"order":2,"id":38,"account":11,"value_from":"vacancy.position"},"whom_date":{"type":"date","title":"Date of employment","required":true,"order":3,"id":39,"account":11},"offer_text":{"type":"html","title":"Offer text","required":true,"order":4,"id":40,"account":11}}}}},"AccountOffersListResponse":{"title":"AccountOffersListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/AccountOffer"},"description":"List of organization offers"}}},"AccountTagResponse":{"title":"AccountTagResponse","required":["id","name","color"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Tag ID","example":10},"name":{"title":"Name","type":"string","description":"Tag name","example":"Blacklist"},"color":{"title":"Color","type":"string","description":"Tag color (HEX format)","example":"000000"}}},"AccountTagsListResponse":{"title":"AccountTagsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/AccountTagResponse"}}}},"AccountVacancyRequestResponse":{"title":"AccountVacancyRequestResponse","required":["id","account","active"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Schema ID","example":1},"account":{"title":"Account","exclusiveMinimum":0.0,"type":"integer","description":"Organization ID","example":11},"name":{"title":"Name","type":"string","description":"Schema name","default":"","example":"IT Developers"},"attendee_required":{"title":"Attendee Required","type":"boolean","description":"The flag of the presence of the 'Send for approval' field when creating an application (null - no field, false — optional field, true — required field)"},"attendee_hint":{"title":"Attendee Hint","type":"string","description":"Hint under the field 'Send for approval'","default":"","example":"Send for approval"},"active":{"title":"Active","type":"boolean","description":"Schema activity flag"},"schema":{"title":"Schema","allOf":[{"$ref":"#/components/schemas/AccountVacancyRequestSchema"}],"description":"Description of schema fields"}}},"AccountVacancyRequestSchema":{"title":"AccountVacancyRequestSchema","type":"object","additionalProperties":{"$ref":"#/components/schemas/AccountVacancyRequestSchemaField"},"example":{"position":{"id":130,"type":"string","title":"Position","required":true,"order":1,"pass_to_report":true,"account":11,"key":"position"},"category":{"id":132,"type":"dictionary","title":"Category","required":true,"order":3,"pass_to_report":true,"account":11,"dictionary":"category","vacancy_field":"category"}}},"AccountVacancyRequestSchemaField":{"title":"AccountVacancyRequestSchemaField","required":["id","type","order"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Field ID"},"type":{"allOf":[{"$ref":"#/components/schemas/FieldType"}],"description":"Field type","example":"select"},"title":{"title":"Title","type":"string","description":"Field title","example":"Reason"},"required":{"title":"Required","type":"boolean","description":"Field required flag","default":false},"order":{"title":"Order","type":"integer","description":"The order of the field on the form","example":1},"values":{"title":"Values","type":"array","items":{},"description":"List of possible values (for fields with `select` type)","example":["New position","Replacing an employee"]},"value":{"title":"Value","type":"string","description":"Default value","example":"New position"},"fields":{"title":"Fields","type":"object","additionalProperties":{"$ref":"#/components/schemas/AccountVacancyRequestSchemaField"},"description":"Nested fields"}}},"AccountVacancyRequestsListResponse":{"title":"AccountVacancyRequestsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/AccountVacancyRequestResponse"}}}},"ActionLog":{"title":"ActionLog","required":["id","user","log_type","created","action","ipv4"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Action log ID","example":100},"user":{"title":"User","allOf":[{"$ref":"#/components/schemas/User"}],"description":"User who performed the action"},"log_type":{"allOf":[{"$ref":"#/components/schemas/ActionLogType"}],"description":"Action log type"},"created":{"title":"Created","type":"string","description":"Date and time of creating an action log","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"action":{"title":"Action","type":"string","description":"Action","example":"create"},"ipv4":{"title":"Ipv4","type":"string","description":"IP address","example":"127.0.0.1"},"data":{"title":"Data","type":"object","description":"Action data"}}},"ActionLogType":{"title":"ActionLogType","enum":["SUCCESS_LOGIN","FAILED_LOGIN","LOGOUT","INVITE_ACCEPTED","NEW_AUTH_IN_ACCOUNT","VACANCY_EXTERNAL","ACCOUNT_MEMBER","DOWNLOAD_APPLICANTS","PASSWORD_CHANGE"],"type":"string","description":"An enumeration."},"ActionLogsResponse":{"title":"ActionLogsResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ActionLog"}},"next_id":{"title":"Next Id","exclusiveMinimum":0.0,"type":"integer","description":"The next action log ID","example":70}}},"AddApplicantToVacancyRequest":{"title":"AddApplicantToVacancyRequest","required":["vacancy","status"],"type":"object","properties":{"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":2},"status":{"title":"Status","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":3},"comment":{"title":"Comment","maxLength":65535,"type":"string","description":"Comment text","example":"Example comment"},"rejection_reason":{"title":"Rejection Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons)<br>The reason of the rejection (if the status is 'rejected')","example":11},"fill_quota":{"title":"Fill Quota","exclusiveMinimum":0.0,"type":"integer","description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas) (if the status is 'hired')","example":1},"employment_date":{"title":"Employment Date","type":"string","description":"Employment date (if the status is 'hired')","format":"date","example":"2020-01-01"},"files":{"title":"Files","maxItems":15,"type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>The list of file's ID attached to the log","example":[1,2,3]},"calendar_event":{"title":"Calendar Event","allOf":[{"$ref":"#/components/schemas/ApplicantEvent"}],"description":"Calendar event object"},"email":{"title":"Email","allOf":[{"$ref":"#/components/schemas/ApplicantLogEmail"}],"description":"Email object"},"im":{"title":"Im","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/ApplicantLogIm"},"description":"Telegram message"},"sms":{"title":"Sms","allOf":[{"$ref":"#/components/schemas/ApplicantLogSms"}],"description":"SMS message"},"applicant_offer":{"title":"Applicant Offer","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantOffer"}],"description":"Applicant's offer"},"survey_questionary_id":{"title":"Survey Questionary Id","type":"integer","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)"}}},"AddApplicantToVacancyResponse":{"title":"AddApplicantToVacancyResponse","required":["id","changed","vacancy","status"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Binding ID","example":9},"changed":{"title":"Changed","type":"string","description":"The date of recruitment stage change","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":3},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":4},"rejection_reason":{"title":"Rejection Reason","type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons)","example":8}}},"Additional":{"title":"Additional","type":"object","properties":{"name":{"title":"Name","type":"string","description":"Name of additional info"},"description":{"title":"Description","type":"string","description":"Description of additional info"}}},"AdditionalFieldsSchemaResponse":{"title":"AdditionalFieldsSchemaResponse","type":"object","additionalProperties":{"$ref":"#/components/schemas/AccountVacancyRequestSchemaField"},"example":{"reason":{"id":50,"type":"select","title":"Reason","required":true,"order":1,"values":["New position","Replacing an employee"],"name":"reason","account":11},"category":{"id":51,"type":"dictionary","title":"Category","required":false,"order":2,"pass_to_report":false,"dictionary":"category","name":"category","account":11,"availableOn":{"operator":"==","field":"reason","value":"New position"},"filterable":false}}},"AgreementState":{"title":"AgreementState","enum":["not_sent","sent","accepted","declined","send_error"],"type":"string","description":"An enumeration."},"ApplicantAgreement":{"title":"ApplicantAgreement","type":"object","properties":{"state":{"allOf":[{"$ref":"#/components/schemas/AgreementState"}],"description":"Agreement's state of applicant to personal data processing","example":"accepted"},"decision_date":{"title":"Decision Date","type":"string","description":"Date of applicant's decision to personal data processing","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"ApplicantCreateRequest":{"title":"ApplicantCreateRequest","type":"object","properties":{"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"email":{"title":"Email","type":"string","description":"Email address","format":"email","example":"mail@mail.ru"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"position":{"title":"Position","type":"string","description":"Applicant’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Applicant’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Applicant’s photo ID","example":1},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2000-01-01"},"externals":{"title":"Externals","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/ApplicantResumeCreate"},"description":"List of applicant's resumes"},"social":{"title":"Social","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantSocial"},"description":"List of applicant's social accounts","default":[]}}},"ApplicantCreateResponse":{"title":"ApplicantCreateResponse","required":["id","created","doubles","external","social","reindex_job_id"],"type":"object","properties":{"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"email":{"title":"Email","type":"string","description":"Email address","format":"email","example":"mail@mail.ru"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"position":{"title":"Position","type":"string","description":"Applicant’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Applicant’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Applicant’s photo ID","example":1},"id":{"title":"Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":19},"created":{"title":"Created","type":"string","description":"Date and time of adding an applicant","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2020-01-01"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>The list of file's ID attached to the applicant","example":[1,2,3]},"doubles":{"title":"Doubles","type":"array","items":{"$ref":"#/components/schemas/ApplicantDouble"},"description":"List of duplicates"},"agreement":{"title":"Agreement","allOf":[{"$ref":"#/components/schemas/ApplicantAgreement"}],"description":"Agreement's state of applicant to personal data processing","example":"sent"},"external":{"title":"External","type":"array","items":{"$ref":"#/components/schemas/ApplicantResume"},"description":"Applicant's resume"},"social":{"title":"Social","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__ApplicantSocial"},"description":"List of applicant's social accounts"},"reindex_job_id":{"title":"Reindex Job Id","type":"string"}}},"ApplicantDouble":{"title":"ApplicantDouble","required":["double"],"type":"object","properties":{"double":{"title":"Double","type":"integer","description":"The ID of a duplicated applicant","example":8}}},"ApplicantEvent":{"title":"ApplicantEvent","required":["event_type","calendar","attendees","start","end","transparency"],"type":"object","properties":{"private":{"title":"Private","type":"boolean","description":"Event private flag","default":true},"name":{"title":"Name","type":"string","description":"Event name","example":"Example event"},"reminders":{"title":"Reminders","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__CalendarEventReminder"},"description":"List of reminders <a href=https://tools.ietf.org/html/rfc5545>RFC 5545</a>"},"location":{"title":"Location","maxLength":1024,"type":"string","description":"Event location","example":"Washington street 121"},"interview_type":{"title":"Interview Type","exclusiveMinimum":0.0,"type":"integer","description":"Interview type ID","example":17},"event_type":{"allOf":[{"$ref":"#/components/schemas/CalendarEventType"}],"description":"Calendar event type","example":"interview"},"description":{"title":"Description","type":"string","description":"Event description (comment)","example":"Interview with applicant"},"calendar":{"title":"Calendar","exclusiveMinimum":0.0,"type":"integer","description":"[Calendar ID](/v2/docs#get-/calendar_accounts)","example":4},"attendees":{"title":"Attendees","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__CalendarEventAttendee"},"description":"Event attendees (participants)"},"start":{"title":"Start","type":"string","description":"Event start date","format":"date-time","example":"2021-05-20T09:00:00"},"end":{"title":"End","type":"string","description":"Event end date","format":"date-time","example":"2021-05-20T10:00:00"},"timezone":{"title":"Timezone","type":"string","description":"Time zone","example":"Europe/Moscow"},"transparency":{"allOf":[{"$ref":"#/components/schemas/Transparency"}],"description":"Event transparency (availability)","example":"busy"}}},"ApplicantItem":{"title":"ApplicantItem","required":["id","account","created","tags","links","doubles","social"],"type":"object","properties":{"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"email":{"title":"Email","anyOf":[{"type":"string","format":"email"},{"type":"string"}],"description":"Email address","example":"mail@mail.ru"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"position":{"title":"Position","type":"string","description":"Applicant’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Applicant’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Applicant’s photo ID","example":1},"id":{"title":"Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":1},"account":{"title":"Account","type":"integer","description":"[Organization ID](/v2/docs#get-/accounts)","example":5},"photo_url":{"title":"Photo Url","type":"string","description":"A link to an applicant’s photo","example":"https://hh.resume/12341234"},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2020-01-01"},"created":{"title":"Created","type":"string","description":"Date and time of adding an applicant","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"tags":{"title":"Tags","type":"array","items":{"$ref":"#/components/schemas/ApplicantTag"},"description":"List of tags"},"links":{"title":"Links","type":"array","items":{"$ref":"#/components/schemas/ApplicantLink"},"description":"Applicant's vacancies"},"external":{"title":"External","type":"array","items":{"$ref":"#/components/schemas/ApplicantResume"},"description":"Applicant's resume"},"agreement":{"title":"Agreement","allOf":[{"$ref":"#/components/schemas/ApplicantAgreement"}],"description":"Agreement's state of applicant to personal data processing","example":"declined"},"doubles":{"title":"Doubles","type":"array","items":{"$ref":"#/components/schemas/ApplicantDouble"},"description":"List of duplicates"},"social":{"title":"Social","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__ApplicantSocial"},"description":"List of applicant's social accounts"}}},"ApplicantLink":{"title":"ApplicantLink","required":["status","updated","changed","vacancy"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Link ID","example":7},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":12},"updated":{"title":"Updated","type":"string","description":"The date of the applicant's update at a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"The date of the latest changes at the current recruitment stage","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4}}},"ApplicantListResponse":{"title":"ApplicantListResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantItem"},"description":"List of applicants"}}},"ApplicantLogAccountInfo":{"title":"ApplicantLogAccountInfo","required":["id","name"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"ID of the user who created the log","example":9},"name":{"title":"Name","type":"string","description":"Name of the user who created the log","example":"John Joe"}}},"ApplicantLogEmail":{"title":"ApplicantLogEmail","required":["account_email","html","email","subject"],"type":"object","properties":{"account_email":{"title":"Account Email","exclusiveMinimum":0.0,"type":"integer","description":"[Email account ID](/v2/docs#get-/email_accounts)","example":12},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>List of uploaded files ID","example":[1,2,3]},"followups":{"title":"Followups","type":"array","items":{"$ref":"#/components/schemas/EmailFollowup"},"description":"Followups list. You can get all available followups here - [List of email templates](/v2/docs#get-/accounts/-account_id-/mail/templates)"},"html":{"title":"Html","type":"string","description":"Email content (HTML)","example":"<p>Hello John!</p>"},"email":{"title":"Email","type":"string","description":"Recipient email address","format":"email","example":"recipient@example.com"},"subject":{"title":"Subject","type":"string","description":"Email subject","example":"Welcome aboard!"},"send_at":{"title":"Send At","type":"string","description":"Date and time to send email. If not supplied, email will be sent immediately","format":"date-time","example":"2021-05-20T10:00:00"},"timezone":{"title":"Timezone","type":"string","description":"Time zone","example":"Europe/Moscow"},"to":{"title":"To","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__EmailRecipient"},"description":"List of additional recipients (cc/bcc)"},"reply":{"title":"Reply","exclusiveMinimum":0.0,"type":"integer","description":"Reply email ID","example":6}}},"ApplicantLogEmailResponse":{"title":"ApplicantLogEmailResponse","required":["id","created","timezone"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Email ID","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating email","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"subject":{"title":"Subject","type":"string","description":"Email subject","example":"Welcome aboard!"},"email_thread":{"title":"Email Thread","type":"integer","description":"Email thread ID","example":15},"account_email":{"title":"Account Email","type":"integer","description":"[Email account ID](/v2/docs#get-/email_accounts)","example":6},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of uploaded files ID"},"foreign":{"title":"Foreign","type":"string","description":"Foreign email ID","example":"f1"},"timezone":{"title":"Timezone","type":"string","description":"Time zone","example":"Europe/Moscow"},"html":{"title":"Html","type":"string","description":"Email content (HTML)","example":"<p>Hello John!</p>"},"from_email":{"title":"From Email","type":"string","description":"Sender email address","example":"sender@example.com"},"from_name":{"title":"From Name","type":"string","description":"Sender name","example":"John Doe"},"replyto":{"title":"Replyto","type":"array","items":{"type":"string"},"description":"List of email foreign IDs, to which a reply is send","example":["<CAOFTTcsSJ76SbpbHwDxA8MUrSZjcgb+X39TL_G9n01UEuBDOAA@mail.gmail.com>"]},"send_at":{"title":"Send At","type":"string","description":"Date and time to send email","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"to":{"title":"To","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__EmailRecipient"},"description":"Recipients list"},"state":{"title":"State","type":"string","description":"Email state","example":"QUEUED"}}},"ApplicantLogIm":{"title":"ApplicantLogIm","required":["account_im","receiver","body"],"type":"object","properties":{"account_im":{"title":"Account Im","exclusiveMinimum":0.0,"type":"integer","description":"Account IM ID","example":8},"receiver":{"title":"Receiver","type":"string","description":"Username or phone of recipient","example":"tg_user"},"body":{"title":"Body","type":"string","description":"Message text","example":"Hello John!"}}},"ApplicantLogItem":{"title":"ApplicantLogItem","required":["id","created","account_info"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Log ID","example":20},"type":{"allOf":[{"$ref":"#/components/schemas/ApplicantLogType"}],"description":"Log type","example":"ADD"},"vacancy":{"title":"Vacancy","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":14},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":13},"source":{"title":"Source","type":"string","description":"Source ID","example":"326784718"},"rejection_reason":{"title":"Rejection Reason","type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons)","example":8},"created":{"title":"Created","type":"string","description":"Date and time of creation of the log","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"employment_date":{"title":"Employment Date","type":"string","description":"Employment date","format":"date","example":"2020-01-01"},"account_info":{"title":"Account Info","allOf":[{"$ref":"#/components/schemas/ApplicantLogAccountInfo"}],"description":"The user who created the log"},"comment":{"title":"Comment","maxLength":65535,"type":"string","description":"Comment text","example":"Example comment"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of files attached to the log","default":[]},"calendar_event":{"title":"Calendar Event","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__ApplicantLogCalendarEvent"}],"description":"Calendar event"},"hired_in_fill_quota":{"title":"Hired In Fill Quota","allOf":[{"$ref":"#/components/schemas/VacancyQuotaItem"}],"description":"Quota data by which applicant was hired"},"applicant_offer":{"title":"Applicant Offer","allOf":[{"$ref":"#/components/schemas/ApplicantVacancyOffer"}],"description":"Applicant's offer"},"email":{"title":"Email","allOf":[{"$ref":"#/components/schemas/ApplicantLogEmailResponse"}],"description":"Email object"},"survey_questionary":{"title":"Survey Questionary","allOf":[{"$ref":"#/components/schemas/ApplicantLogSurveyQuestionary"}],"description":"[Survey Questionary](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries)"},"survey_answer_of_type_a":{"title":"Survey Answer Of Type A","allOf":[{"$ref":"#/components/schemas/ApplicantLogSurveyAnswerTypeA"}],"description":"[Survey answer of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-/answers/-answer_id-)"}}},"ApplicantLogResponse":{"title":"ApplicantLogResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantLogItem"},"description":"List of applicant's logs"}}},"ApplicantLogSms":{"title":"ApplicantLogSms","required":["phone","body"],"type":"object","properties":{"phone":{"title":"Phone","type":"string","description":"Phone number of recipient","example":"+79999999999"},"body":{"title":"Body","type":"string","description":"Message text","example":"Hello John!"}}},"ApplicantLogSurveyAnswerTypeA":{"title":"ApplicantLogSurveyAnswerTypeA","required":["id","created","respondent","survey"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Survey answer of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-/answers/-answer_id-)","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an survey answer of type A","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"respondent":{"title":"Respondent","allOf":[{"$ref":"#/components/schemas/SurveyTypeARespondent"}],"description":"Who created the survey answer"},"survey":{"title":"Survey","allOf":[{"$ref":"#/components/schemas/SurveySchemaTypeALogResponse"}],"description":"Survey schema"}}},"ApplicantLogSurveyQuestionary":{"title":"ApplicantLogSurveyQuestionary","required":["id","survey","created"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)","example":1},"survey":{"title":"Survey","allOf":[{"$ref":"#/components/schemas/SurveySchemaTypeQLogResponse"}],"description":"Survey schema"},"survey_answer_id":{"title":"Survey Answer Id","type":"integer","description":"[Survey questionary answer ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/answers/-answer_id-)","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an survey questionary","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"ApplicantLogType":{"title":"ApplicantLogType","enum":["ADD","UPDATE","VACANCY-ADD","STATUS","COMMENT","DOUBLE","AGREEMENT","MAIL","RESPONSE"],"type":"string","description":"An enumeration."},"ApplicantResponse":{"title":"ApplicantResponse","required":["id","foreign","created","applicant_external","vacancy","vacancy_external"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Response ID","example":1},"foreign":{"title":"Foreign","type":"string","description":"Foreign response ID (from job site)","example":"10"},"created":{"title":"Created","type":"string","description":"Date and time of response creation","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"applicant_external":{"title":"Applicant External","type":"integer","description":"[Applicant resume ID](/v2/docs#get-/accounts/-account_id-/applicants/-applicant_id-/externals/-external_id-)","example":1},"vacancy":{"title":"Vacancy","allOf":[{"$ref":"#/components/schemas/ApplicantResponseVacancy"}],"description":"Vacancy"},"vacancy_external":{"title":"Vacancy External","allOf":[{"$ref":"#/components/schemas/ApplicantResponseVacancyExternal"}],"description":"Publication of a vacancy for which an applicant responded"}}},"ApplicantResponseVacancy":{"title":"ApplicantResponseVacancy","required":["id","position"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":12},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"}}},"ApplicantResponseVacancyExternal":{"title":"ApplicantResponseVacancyExternal","required":["id","foreign"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Publication ID","example":10},"foreign":{"title":"Foreign","type":"string","description":"Foreign publication ID (from job site)","example":"10"}}},"ApplicantResponsesListResponse":{"title":"ApplicantResponsesListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantResponse"},"description":"List of applicant's responses"},"next_page_cursor":{"title":"Next Page Cursor","type":"string","descriptions":"Next page cursor"}}},"ApplicantResume":{"title":"ApplicantResume","required":["id"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Resume ID","example":1},"auth_type":{"title":"Auth Type","type":"string","description":"The format of resume","example":"HH"},"account_source":{"title":"Account Source","type":"integer","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":10},"updated":{"title":"Updated","type":"string","description":"The date and time of resume update","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"ApplicantResumeCreate":{"title":"ApplicantResumeCreate","type":"object","properties":{"auth_type":{"title":"Auth Type","type":"string","description":"Auth type","example":"NATIVE"},"account_source":{"title":"Account Source","exclusiveMinimum":0.0,"type":"integer","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":5},"data":{"title":"Data","allOf":[{"$ref":"#/components/schemas/ApplicantResumeData"}],"description":"Resume data","example":{"body":"Resume text"}},"files":{"title":"Files","maxItems":1,"type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>List of file's ID attached to the applicant resume","example":[1]}}},"ApplicantResumeData":{"title":"ApplicantResumeData","type":"object","properties":{"body":{"title":"Body","type":"string","description":"Resume text","example":"Resume text for example"}}},"ApplicantResumeResponse":{"title":"ApplicantResumeResponse","required":["id","created","foreign"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Resume ID","example":1},"auth_type":{"title":"Auth Type","type":"string","description":"The format of resume","example":"HH"},"account_source":{"title":"Account Source","type":"integer","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":10},"updated":{"title":"Updated","type":"string","description":"The date and time of resume update","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"created":{"title":"Created","type":"string","description":"The date and time of resume create","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of files"},"source_url":{"title":"Source Url","type":"string","description":"Link to resume source"},"foreign":{"title":"Foreign","type":"string","description":"Foreign resume ID","example":"580ab9e3ff02cd5e710039ed1f74593273674e"},"key":{"title":"Key","type":"string","description":"Resume key","example":"580ab9e3ff02cd5e710039ed1f74593273674e"},"portfolio":{"title":"Portfolio","type":"array","items":{"$ref":"#/components/schemas/Portfolio"},"description":"Portfolio images"},"data":{"title":"Data","allOf":[{"$ref":"#/components/schemas/RawData"}],"description":"Raw resume data (format depends on auth_type)"},"resume":{"title":"Resume","allOf":[{"$ref":"#/components/schemas/Resume"}],"description":"Resume data in unified format"}}},"ApplicantResumeUpdateData":{"title":"ApplicantResumeUpdateData","required":["body"],"type":"object","properties":{"body":{"title":"Body","type":"string","description":"Resume text","example":"Resume text for example"}}},"ApplicantResumeUpdateRequest":{"title":"ApplicantResumeUpdateRequest","required":["account_source","data"],"type":"object","properties":{"account_source":{"title":"Account Source","exclusiveMinimum":0.0,"type":"integer","description":"[Resume source ID](/v2/docs#get-/accounts/-account_id-/applicants/sources)","example":5},"data":{"title":"Data","allOf":[{"$ref":"#/components/schemas/ApplicantResumeUpdateData"}],"description":"Resume data","example":{"body":"Resume text"}},"files":{"title":"Files","maxItems":1,"type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>List of file's ID attached to the applicant resume","default":[],"example":[1]}}},"ApplicantSearchByCursorResponse":{"title":"ApplicantSearchByCursorResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantSearchItem"},"description":"List of applicants"},"next_page_cursor":{"title":"Next Page Cursor","type":"string","description":"Next page cursor","example":"ZWRfa2V5IjogIm5lc3RlZF92YWx1ZSJ9LCAia2V5MzQiOiB7InNvbWVfbmVzdGVkX2tleSI6ICJuZXN0ZeyJjb3VudCI6IDIsICJpbmZvIjogInRydWUiLCAiYWNjb3VudCI6IDExLCAicSI6ICJweXRob24iLCAicXVlc3Rpb25hcnkiOiB7fSwgImZpZWxkIjogImFsbCIsICJvcGVyYXRvciI6ICJhbmQiLCAibmV4dF9wYWdlX2N1cnNvciI6IG51bGwsICJvbmx5X2N1cnJlbnRfc3RhdHVzIjogMCwgImFjdGlvbiI6IG51bGwsICJyZWNydWl0ZXJzIjogW10sICJwZXJpb2Rfc3RhcnQiOiBudWxsLCAicGVyaW9kX2VuZCI6IG51bGwsICJhZ3JlZW1lbnRfc3RhdGVzIjogW10sICJ0YWciOiBbXSwgImFjY291bnRfc291cmNlIjogW10sICJzZWFyY2hfYWZ0ZXIiOiBbIjE0IiwgMy4wXX0="}}},"ApplicantSearchField":{"title":"ApplicantSearchField","enum":["all","education","experience","position"],"type":"string","description":"An enumeration."},"ApplicantSearchItem":{"title":"ApplicantSearchItem","required":["id","created"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":1},"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2020-01-01"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"email":{"title":"Email","anyOf":[{"type":"string","format":"email"},{"type":"string"}],"description":"Email address","example":"mail@mail.ru"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"position":{"title":"Position","type":"string","description":"Candidate’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Candidate’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Candidate’s photo ID","example":10},"photo_url":{"title":"Photo Url","type":"string","description":"A link to a candidate’s photo","example":"https://hh.resume/12341234"},"created":{"title":"Created","type":"string","description":"Date and time of adding a candidate","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"ApplicantSearchItemWithOrder":{"title":"ApplicantSearchItemWithOrder","required":["id","created","order"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":1},"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2020-01-01"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"email":{"title":"Email","anyOf":[{"type":"string","format":"email"},{"type":"string"}],"description":"Email address","example":"mail@mail.ru"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"position":{"title":"Position","type":"string","description":"Candidate’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Candidate’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Candidate’s photo ID","example":10},"photo_url":{"title":"Photo Url","type":"string","description":"A link to a candidate’s photo","example":"https://hh.resume/12341234"},"created":{"title":"Created","type":"string","description":"Date and time of adding a candidate","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"order":{"title":"Order","type":"integer","description":"Order number","example":5}}},"ApplicantSearchResponse":{"title":"ApplicantSearchResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantSearchItemWithOrder"},"description":"List of applicants"}}},"ApplicantSource":{"title":"ApplicantSource","required":["id","name","type"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Applicant source ID","example":12},"foreign":{"title":"Foreign","type":"string","description":"Applicant source foreign","example":"f2"},"name":{"title":"Name","type":"string","description":"Applicant source name","example":"Headhunter"},"type":{"title":"Type","type":"string","description":"Applicant source type","example":"user"}}},"ApplicantSourcesResponse":{"title":"ApplicantSourcesResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ApplicantSource"},"description":"List of applicant's sources"}}},"ApplicantTag":{"title":"ApplicantTag","required":["tag","id"],"type":"object","properties":{"tag":{"title":"Tag","type":"integer","description":"[Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":1},"id":{"title":"Id","type":"integer","description":"[Applicant's tag ID](/v2/docs#get-/accounts/-account_id-/applicants/-applicant_id-/tags)","example":1}}},"ApplicantTagsListResponse":{"title":"ApplicantTagsListResponse","required":["tags"],"type":"object","properties":{"tags":{"title":"Tags","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of [Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":[2,3,9]}}},"ApplicantUpdateRequest":{"title":"ApplicantUpdateRequest","type":"object","properties":{"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Michael"},"money":{"title":"Money","type":"string","description":"Salary expectation","example":"$100000"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"email":{"title":"Email","type":"string","description":"Email address","format":"email","example":"mail@mail.ru"},"skype":{"title":"Skype","type":"string","description":"Skype login","example":"my_skype"},"position":{"title":"Position","type":"string","description":"Applicant’s occupation","example":"Front-end developer"},"company":{"title":"Company","type":"string","description":"Applicant’s place of work","example":"Google Inc."},"photo":{"title":"Photo","type":"integer","description":"Applicant’s photo ID","example":1},"birthday":{"title":"Birthday","type":"string","description":"Date of birth","format":"date","example":"2000-01-01"},"social":{"title":"Social","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantSocial"},"description":"List of applicant's social accounts"}}},"ApplicantVacancyOffer":{"title":"ApplicantVacancyOffer","required":["id","account_applicant_offer","created"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Offer ID","example":1},"account_applicant_offer":{"title":"Account Applicant Offer","type":"integer","description":"Organization's offer ID","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an offer","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"ApplicantVacancyOfferResponse":{"title":"ApplicantVacancyOfferResponse","required":["id","account_applicant_offer","created","values"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Offer ID","example":1},"account_applicant_offer":{"title":"Account Applicant Offer","type":"integer","description":"Organization's offer ID","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an offer","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"values":{"title":"Values","type":"object","description":"Offer values (fields). The composition of the values depends on the organization's offer settings.","example":{"whom_name":"Doe John Hovard","position_name":"CTO","whom_date":"24.11.2021","offer_text":"<p>Welcome to our company!</p>"}}}},"ApplicantVacancySplitRequest":{"title":"ApplicantVacancySplitRequest","required":["applicant","status"],"type":"object","properties":{"applicant":{"title":"Applicant","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":123},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":21},"fill_quota":{"title":"Fill Quota","type":"integer","description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)","example":321},"employment_date":{"title":"Employment Date","type":"string","description":"Employment date","format":"date","example":"2021-12-31"},"rejection_reason":{"title":"Rejection Reason","type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons) for trash status","example":456}}},"ApplicantVacancySplitResponse":{"title":"ApplicantVacancySplitResponse","required":["id","applicant","status","vacancy","vacancy_parent"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Applicant log ID"},"applicant":{"title":"Applicant","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)"},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)"},"vacancy":{"title":"Vacancy","type":"integer","description":"Child vacancy ID"},"vacancy_parent":{"title":"Vacancy Parent","type":"integer","description":"Parent vacancy ID"}}},"Area":{"title":"Area","type":"object","properties":{"country":{"title":"Country","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Country"},"city":{"title":"City","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"City"},"metro":{"title":"Metro","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Metro station"},"address":{"title":"Address","type":"string","description":"Full address","example":"Washington DC"},"lat":{"title":"Lat","type":"number","description":"Latitude","example":38.8951},"lng":{"title":"Lng","type":"number","description":"Longitude","example":-77.0364}}},"Attestation":{"title":"Attestation","type":"object","properties":{"date":{"$ref":"#/components/schemas/DateWithPrecision"},"name":{"title":"Name","type":"string"},"organization":{"title":"Organization","type":"string"},"description":{"title":"Description","type":"string"},"result":{"title":"Result","type":"string"}}},"BaseEducationInfo":{"title":"BaseEducationInfo","type":"object","properties":{"name":{"title":"Name","type":"string","description":"Education name","example":"Higher"},"description":{"title":"Description","type":"string","description":"Education description","example":"I have a higher education"},"date_from":{"title":"Date From","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education start date"},"date_to":{"title":"Date To","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education end date"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Education area"}}},"BaseSurveySchemaType":{"title":"BaseSurveySchemaType","required":["id","name","type","active","created","updated"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey ID","example":1},"name":{"title":"Name","type":"string","description":"Survey name","example":"test_survey"},"type":{"allOf":[{"$ref":"#/components/schemas/SurveyTypesEnum"}],"description":"Type of survey","example":"type_a"},"active":{"title":"Active","type":"boolean","description":"Is survey active?","example":true},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of the last update of the survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"BatchDivisionsMeta":{"title":"BatchDivisionsMeta","required":["data","account_id"],"type":"object","properties":{"data":{"title":"Data","type":"object","description":"Request body content"},"account_id":{"title":"Account Id","type":"integer","description":"[Organization ID](/v2/docs#get-/accounts)","example":11}}},"BatchDivisionsPayload":{"title":"BatchDivisionsPayload","required":["task_id"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","description":"[Task ID](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","format":"uuid"}}},"BatchDivisionsRequest":{"title":"BatchDivisionsRequest","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__divisions__Division"}}}},"BatchDivisionsResponse":{"title":"BatchDivisionsResponse","required":["status","payload","meta"],"type":"object","properties":{"status":{"title":"Status","type":"string","description":"Operation status","example":"ok"},"payload":{"$ref":"#/components/schemas/BatchDivisionsPayload"},"meta":{"$ref":"#/components/schemas/BatchDivisionsMeta"}}},"Birthdate":{"title":"Birthdate","type":"object","properties":{"year":{"title":"Year","exclusiveMinimum":0.0,"type":"integer","description":"Year","example":2000},"month":{"title":"Month","exclusiveMinimum":0.0,"type":"integer","description":"Month","example":10},"day":{"title":"Day","exclusiveMinimum":0.0,"type":"integer","description":"Day","example":7},"precision":{"title":"Precision","type":"string","description":"Precision of the date. Can be represented by values: year (2000) | month (2000-07) | day (2000-10-07)","example":"day"}}},"Body_upload_file_accounts__account_id__upload_post":{"title":"Body_upload_file_accounts__account_id__upload_post","required":["file"],"type":"object","properties":{"file":{"title":"File","type":"string","format":"binary"},"preset":{"title":"Preset","type":"string"}}},"Calendar":{"title":"Calendar","required":["id","name","access_role"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Calendar ID","example":10},"foreign":{"title":"Foreign","type":"string","description":"Foreign value","example":"john.smith@gmail.com"},"name":{"title":"Name","type":"string","description":"Calendar name","example":"John Smith Personal Calendar"},"access_role":{"title":"Access Role","type":"string","description":"Role","example":"owner"}}},"CalendarAccount":{"title":"CalendarAccount","required":["id","name","auth_type","calendars"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Calendar account ID","example":10},"name":{"title":"Name","type":"string","description":"Calendar account name","example":"john.smith@gmail.com"},"auth_type":{"title":"Auth Type","type":"string","description":"Authentication type","example":"GOOGLE"},"freebusy":{"title":"Freebusy","type":"boolean","default":false},"calendars":{"title":"Calendars","type":"array","items":{"$ref":"#/components/schemas/Calendar"},"description":"List of calendars associated with the account"}}},"CalendarAccountsListResponse":{"title":"CalendarAccountsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/CalendarAccount"},"description":"List of connected calendar accounts"}}},"CalendarEventCreator":{"title":"CalendarEventCreator","required":["email"],"type":"object","properties":{"displayName":{"title":"Displayname","type":"string","description":"Event creator name","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Event creator email","example":"test@example.com"},"self":{"title":"Self","type":"boolean","description":"Flag indicating that you are the creator of the event","default":false}}},"CalendarEventReminderMethod":{"title":"CalendarEventReminderMethod","enum":["popup","email"],"type":"string","description":"An enumeration."},"CalendarEventStatus":{"title":"CalendarEventStatus","enum":["accepted","declined","confirmed","tentative","cancelled","needsAction"],"type":"string","description":"An enumeration."},"CalendarEventType":{"title":"CalendarEventType","enum":["interview","other"],"type":"string","description":"An enumeration."},"CalendarListResponse":{"title":"CalendarListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/CalendarResponse"},"description":"List of available production calendars"}}},"CalendarResponse":{"title":"CalendarResponse","required":["id","name"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Calendar ID"},"name":{"title":"Name","type":"string","description":"Calendar name","example":"Russian Federation"}}},"Certificate":{"title":"Certificate","type":"object","properties":{"name":{"title":"Name","type":"string","description":"Name of certificate","example":"Certificate"},"organization":{"title":"Organization","type":"string","description":"The organization that issued the certificate","example":"Certificate organnization"},"description":{"title":"Description","type":"string","description":"Certificate description","example":"Certificate for John Doe"},"url":{"title":"Url","type":"string","description":"Certificate url","example":"https://example.com/certificate_john_doe.pdf"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Area of issue of the certificate"},"date":{"title":"Date","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Date of issue of the certificate"}}},"ChangeVacancyApplicantStatusRequest":{"title":"ChangeVacancyApplicantStatusRequest","required":["vacancy","status"],"type":"object","properties":{"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":2},"status":{"title":"Status","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":3},"comment":{"title":"Comment","maxLength":65535,"type":"string","description":"Comment text","example":"Example comment"},"rejection_reason":{"title":"Rejection Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons)<br>The reason of the rejection (if the status is 'rejected')","example":11},"fill_quota":{"title":"Fill Quota","exclusiveMinimum":0.0,"type":"integer","description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas) (if the status is 'hired')","example":1},"employment_date":{"title":"Employment Date","type":"string","description":"Employment date (if the status is 'hired')","format":"date","example":"2020-01-01"},"files":{"title":"Files","maxItems":15,"type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>The list of file's ID attached to the log","example":[1,2,3]},"applicant_offer":{"title":"Applicant Offer","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantOffer"}],"description":"Applicant's offer"},"calendar_event":{"title":"Calendar Event","allOf":[{"$ref":"#/components/schemas/ApplicantEvent"}],"description":"Calendar event object"},"email":{"title":"Email","allOf":[{"$ref":"#/components/schemas/ApplicantLogEmail"}],"description":"Email object"},"im":{"title":"Im","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/ApplicantLogIm"},"description":"Telegram message"},"sms":{"title":"Sms","allOf":[{"$ref":"#/components/schemas/ApplicantLogSms"}],"description":"SMS message"},"survey_questionary_id":{"title":"Survey Questionary Id","type":"integer","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)"}}},"CloseHoldReason":{"title":"CloseHoldReason","required":["name"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Reason ID","example":20},"name":{"title":"Name","type":"string","description":"Reason name","example":"Vacancy cancelled"}}},"CloseHoldReasonsListResponse":{"title":"CloseHoldReasonsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/CloseHoldReason"}}}},"Contact":{"title":"Contact","type":"object","properties":{"type":{"title":"Type","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Contact type"},"value":{"title":"Value","type":"string","description":"Contact value","example":"89999999999"},"preferred":{"title":"Preferred","type":"boolean","description":"This is the preferred method of communication","example":"true"},"full_value":{"title":"Full Value","allOf":[{"$ref":"#/components/schemas/ContactFullValue"}],"description":"If contact is a phone number - additional data about it"}}},"ContactFullValue":{"title":"ContactFullValue","required":["country","city","number","formatted"],"type":"object","properties":{"country":{"title":"Country","type":"string"},"city":{"title":"City","type":"string"},"number":{"title":"Number","type":"string"},"formatted":{"title":"Formatted","type":"string"}}},"CoworkerResponse":{"title":"CoworkerResponse","required":["id","member","type"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Coworker ID","example":12},"member":{"title":"Member","type":"integer","description":"User ID","example":1},"name":{"title":"Name","type":"string","description":"Coworker name","example":"John Doe"},"type":{"title":"Type","type":"string","description":"Coworker type (role)","example":"owner"},"head":{"title":"Head","type":"integer","description":"Head user ID","example":2},"email":{"title":"Email","type":"string","description":"Email","format":"email","example":"mail@gmail.com"},"meta":{"title":"Meta","type":"object","description":"Additional meta information"},"permissions":{"title":"Permissions","type":"array","items":{"$ref":"#/components/schemas/Permission"},"description":"Coworker permissions"}}},"CoworkersListResponse":{"title":"CoworkersListResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/CoworkerResponse"},"description":"List of coworkers"}}},"CreateAccountTagRequest":{"title":"CreateAccountTagRequest","required":["name","color"],"type":"object","properties":{"name":{"title":"Name","type":"string","description":"Tag name","example":"Blacklist"},"color":{"title":"Color","type":"string","description":"Tag color (HEX format)","example":"000000"}}},"CreateApplicantLogRequest":{"title":"CreateApplicantLogRequest","type":"object","properties":{"comment":{"title":"Comment","maxLength":65535,"type":"string","description":"Comment text","example":"Example comment"},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)<br>If this field is not set then the log will be added to `personal notes` block","example":6},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"[Upload files](/v2/docs#post-/accounts/-account_id-/upload)<br>List of uploaded files ID","example":[1,2,3]},"applicant_offer":{"title":"Applicant Offer","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantOffer"}],"description":"Applicant's offer"},"email":{"title":"Email","allOf":[{"$ref":"#/components/schemas/ApplicantLogEmail"}],"description":"Email object"},"calendar_event":{"title":"Calendar Event","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__ApplicantLogCalendarEvent"}],"description":"Calendar event object"},"im":{"title":"Im","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/ApplicantLogIm"},"description":"Telegram message"},"sms":{"title":"Sms","allOf":[{"$ref":"#/components/schemas/ApplicantLogSms"}],"description":"SMS message"},"survey_questionary_id":{"title":"Survey Questionary Id","type":"integer","description":"[Survey questionary ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries/-questionary_id-)"}}},"CreateApplicantLogResponse":{"title":"CreateApplicantLogResponse","required":["id","applicant","type","created","applicant_offer"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Log ID","example":14},"applicant":{"title":"Applicant","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":2},"type":{"allOf":[{"$ref":"#/components/schemas/ApplicantLogType"}],"description":"Log type","example":"COMMENT"},"vacancy":{"title":"Vacancy","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":4},"status":{"title":"Status","type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":8},"rejection_reason":{"title":"Rejection Reason","type":"integer","description":"[Rejection reason ID](/v2/docs#get-/accounts/-account_id-/rejection_reasons)","example":12},"created":{"title":"Created","type":"string","description":"Date and time of creation of the log","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"employment_date":{"title":"Employment Date","type":"string","description":"Employment date","format":"date","example":"2020-01-01"},"applicant_offer":{"title":"Applicant Offer","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__ApplicantOffer"}],"description":"Offer object"},"comment":{"title":"Comment","maxLength":65535,"type":"string","description":"Comment text","example":"Example comment"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of files attached to the log","default":[]},"calendar_event":{"title":"Calendar Event","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__ApplicantLogCalendarEvent"}],"description":"Calendar event object"},"email":{"title":"Email","allOf":[{"$ref":"#/components/schemas/ApplicantLogEmailResponse"}],"description":"Email object"},"survey_questionary":{"title":"Survey Questionary","allOf":[{"$ref":"#/components/schemas/ApplicantLogSurveyQuestionary"}],"description":"[Survey Questionary](/v2/docs#get-/accounts/-account_id-/surveys/type_q/questionaries)"}}},"CreateApplicantTagRequest":{"title":"CreateApplicantTagRequest","required":["tags"],"type":"object","properties":{"tags":{"title":"Tags","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of [Tag ID](/v2/docs#get-/accounts/-account_id-/tags)","example":[29,30]}}},"CreateVacancyRequestRequest":{"title":"CreateVacancyRequestRequest","required":["account_vacancy_request","position"],"type":"object","properties":{"account_vacancy_request":{"title":"Account Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request schema ID](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests)","example":1},"position":{"title":"Position","maxLength":255,"minLength":1,"type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"attendees":{"title":"Attendees","type":"array","items":{"$ref":"#/components/schemas/VacancyRequestAttendee"},"description":"List of people to send a request for approval"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of file IDs to attach to the vacancy request. [Upload files](/v2/docs#post-/accounts/-account_id-/upload)","example":[1,2,3]}}},"CreatedUserControlTaskResponse":{"title":"CreatedUserControlTaskResponse","required":["task_id","action","created"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","description":"Task ID","format":"uuid"},"action":{"allOf":[{"$ref":"#/components/schemas/UserControlTaskAction"}],"description":"Task action"},"created":{"title":"Created","type":"string","description":"Task creation time","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"Creator":{"title":"Creator","required":["account_id","name"],"type":"object","properties":{"account_id":{"title":"Account Id","type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)"},"name":{"title":"Name","type":"string","description":"Coworker name"}}},"CreatorInfo":{"title":"CreatorInfo","required":["id","name","email"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) who created the vacancy request"},"name":{"title":"Name","type":"string","description":"Name of coworker who created the vacancy request","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Email of coworker who created the vacancy request","format":"email"}}},"DateWithPrecision":{"title":"DateWithPrecision","required":["precision"],"type":"object","properties":{"year":{"title":"Year","type":"integer","description":"Year","example":2021},"month":{"title":"Month","type":"integer","description":"Month","example":12},"day":{"title":"Day","type":"integer","description":"Day","example":12},"precision":{"allOf":[{"$ref":"#/components/schemas/PrecisionTypes"}],"description":"Precision type","example":"day"}}},"DeadLineDate":{"title":"DeadLineDate","required":["days"],"type":"object","properties":{"days":{"title":"Days","type":"integer","description":"Amount of working days"},"start":{"title":"Start","type":"string","description":"A date to start counting. Default is today","format":"date"}}},"DeadLineDatesBulkRequest":{"title":"DeadLineDatesBulkRequest","type":"array","items":{"$ref":"#/components/schemas/DeadLineDate"}},"DeadLineDatesBulkResponse":{"title":"DeadLineDatesBulkResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"type":"string","format":"date"},"description":"List of deadlines","example":["2020-01-01"]}}},"DelayedTask":{"title":"DelayedTask","required":["task_id","state","created","created_datetime","states_log","result"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","description":"Task ID","format":"uuid"},"state":{"allOf":[{"$ref":"#/components/schemas/TaskState"}],"description":"Current task status"},"created":{"title":"Created","type":"number","description":"Unix timestamp of task creation","example":1561006501.318867},"updated":{"title":"Updated","type":"number","description":"Unix timestamp of the last task update","example":1561006501.318867},"created_datetime":{"title":"Created Datetime","type":"string","description":"Date and time of task creation (ISO 8601)","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated_datetime":{"title":"Updated Datetime","type":"string","description":"Date and time of the last task update (ISO 8601)","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"states_log":{"title":"States Log","type":"array","items":{"$ref":"#/components/schemas/TaskLog"},"description":"Task change log"},"result":{"title":"Result","anyOf":[{"$ref":"#/components/schemas/MultivacancyAddChildTaskResult"},{"$ref":"#/components/schemas/MultivacancyUpsertTaskResult"},{}],"description":"Task execution result"}}},"DictionariesListResponse":{"title":"DictionariesListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__dictionaries__DictionaryItem"}}}},"DictionaryCreateRequest":{"title":"DictionaryCreateRequest","required":["code","name","items"],"type":"object","properties":{"code":{"title":"Code","maxLength":128,"minLength":1,"type":"string","description":"Dictionary code"},"name":{"title":"Name","maxLength":255,"minLength":1,"type":"string","description":"Dictionary name"},"foreign":{"title":"Foreign","maxLength":1024,"minLength":1,"type":"string","description":"Foreign"},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__dictionaries__DictionaryItem"},"description":"Dictionary items"}}},"DictionaryCreateResponse":{"title":"DictionaryCreateResponse","required":["status","payload","meta"],"type":"object","properties":{"status":{"title":"Status","type":"string","description":"Operation status","example":"ok"},"payload":{"$ref":"#/components/schemas/DictionaryTaskResponsePayload"},"meta":{"$ref":"#/components/schemas/DictionaryTaskResponseMeta"}}},"DictionaryField":{"title":"DictionaryField","required":["id","name","order","active","deep"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Dictionary field ID"},"name":{"title":"Name","type":"string","description":"Dictionary field name"},"order":{"title":"Order","type":"integer","description":"Order"},"active":{"title":"Active","type":"boolean","description":"Activity flag"},"parent":{"title":"Parent","type":"integer","description":"Parent dictionary field ID"},"deep":{"title":"Deep","type":"integer","description":"Depth level"},"foreign":{"title":"Foreign","type":"string","description":"Foreign"},"meta":{"title":"Meta","type":"object","description":"Meta information","example":{"latitude":55.5374,"longitude":60.1408}}}},"DictionaryResponse":{"title":"DictionaryResponse","required":["id","code","name","created","fields"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Dictionary ID"},"code":{"title":"Code","type":"string","description":"Dictionary code"},"name":{"title":"Name","type":"string","description":"Dictionary name"},"foreign":{"title":"Foreign","type":"string","description":"Foreign"},"created":{"title":"Created","type":"string","description":"Date and time of creating a dictionary","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"fields":{"title":"Fields","type":"array","items":{"$ref":"#/components/schemas/DictionaryField"},"description":"Dictionary fields"}}},"DictionaryTaskResponseMeta":{"title":"DictionaryTaskResponseMeta","required":["data","account_id"],"type":"object","properties":{"data":{"title":"Data","type":"object","description":"Request body"},"account_id":{"title":"Account Id","type":"integer","description":"Organization ID"}}},"DictionaryTaskResponsePayload":{"title":"DictionaryTaskResponsePayload","required":["task_id"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","description":"Job ID","format":"uuid"}}},"DictionaryUpdateRequest":{"title":"DictionaryUpdateRequest","required":["name","items"],"type":"object","properties":{"name":{"title":"Name","maxLength":255,"minLength":1,"type":"string","description":"Dictionary name"},"foreign":{"title":"Foreign","maxLength":1024,"minLength":1,"type":"string","description":"Foreign"},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__dictionaries__DictionaryItem"},"description":"Dictionary items"}}},"DictionaryUpdateResponse":{"title":"DictionaryUpdateResponse","required":["status","payload","meta"],"type":"object","properties":{"status":{"title":"Status","type":"string","description":"Operation status","example":"ok"},"payload":{"$ref":"#/components/schemas/DictionaryTaskResponsePayload"},"meta":{"$ref":"#/components/schemas/DictionaryTaskResponseMeta"}}},"DivisionsListResponse":{"title":"DivisionsListResponse","required":["items","meta"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__divisions__Division"}},"meta":{"$ref":"#/components/schemas/api__v2__serializers__response__divisions__Meta"}}},"EditedFillQuota":{"title":"EditedFillQuota","type":"object","properties":{"deadline":{"title":"Deadline","type":"string","description":"Date when the quota should be filled","format":"date"},"applicants_to_hire":{"title":"Applicants To Hire","maximum":999.0,"minimum":1.0,"type":"integer","description":"Number of applicants should be hired on the fill quota"},"vacancy_request":{"title":"Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":12},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Quota ID","example":15}}},"Education":{"title":"Education","type":"object","properties":{"level":{"title":"Level","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Education level"},"higher":{"title":"Higher","type":"array","items":{"$ref":"#/components/schemas/ExtendedEducationInfo"},"description":"List of higher education institutions"},"vocational":{"title":"Vocational","type":"array","items":{"$ref":"#/components/schemas/ExtendedEducationInfo"},"description":"List of vocational education institutions"},"elementary":{"title":"Elementary","type":"array","items":{"$ref":"#/components/schemas/BaseEducationInfo"},"description":"List of elementary education institutions"},"additional":{"title":"Additional","type":"array","items":{"$ref":"#/components/schemas/EducationInfoWithResult"},"description":"List of additional education institutions"},"attestation":{"title":"Attestation","type":"array","items":{"$ref":"#/components/schemas/Attestation"},"description":"List of attestations"}}},"EducationInfoWithResult":{"title":"EducationInfoWithResult","type":"object","properties":{"name":{"title":"Name","type":"string","description":"Education name","example":"Higher"},"description":{"title":"Description","type":"string","description":"Education description","example":"I have a higher education"},"date_from":{"title":"Date From","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education start date"},"date_to":{"title":"Date To","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education end date"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Education area"},"result":{"title":"Result","type":"string","description":"Education result","example":"Completed"}}},"EmailAccount":{"title":"EmailAccount","required":["id","name","email","receive","send"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Email account ID","example":10},"name":{"title":"Name","type":"string","description":"Email name","example":"test@example.com"},"email":{"title":"Email","type":"string","description":"Email address","example":"test@example.com"},"receive":{"title":"Receive","type":"boolean","description":"Is it possible to receive letters"},"send":{"title":"Send","type":"boolean","description":"Is it possible to send letters"},"last_sync":{"title":"Last Sync","type":"string","description":"Date and time of last sync","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"EmailAccountsListResponse":{"title":"EmailAccountsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/EmailAccount"},"description":"List of connected email accounts"}}},"EmailContactType":{"title":"EmailContactType","enum":["cc","bcc","to"],"type":"string","description":"An enumeration."},"EmailFollowup":{"title":"EmailFollowup","required":["id","account_member_template","html","days"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Followup ID","example":2},"account_member_template":{"title":"Account Member Template","type":"integer","description":"Email template ID","example":7},"html":{"title":"Html","type":"string","description":"Email content (HTML)","example":"<p>Hello John!</p>"},"days":{"title":"Days","type":"integer","description":"The number of days after which to send a followup if there is no response","example":1,"gte":1}}},"ErrorBase":{"title":"ErrorBase","required":["type","title"],"type":"object","properties":{"type":{"title":"Type","type":"string","description":"Error type","example":"type_error.integer"},"title":{"title":"Title","type":"string","description":"Title","example":"value is not a valid integer"},"detail":{"title":"Detail","type":"string","description":"Error detail","example":"Expected valid integer, got: 'peanut'"},"location":{"title":"Location","allOf":[{"$ref":"#/components/schemas/Location"}],"description":"Error location"}}},"ErrorResponse":{"title":"ErrorResponse","required":["errors"],"type":"object","properties":{"errors":{"title":"Errors","type":"array","items":{"$ref":"#/components/schemas/ErrorBase"},"description":"Errors list"}}},"EventReminderMultiplier":{"title":"EventReminderMultiplier","enum":["minutes","hours","days","weeks"],"type":"string","description":"An enumeration."},"ExtendedEducationInfo":{"title":"ExtendedEducationInfo","type":"object","properties":{"name":{"title":"Name","type":"string","description":"Education name","example":"Higher"},"description":{"title":"Description","type":"string","description":"Education description","example":"I have a higher education"},"date_from":{"title":"Date From","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education start date"},"date_to":{"title":"Date To","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Education end date"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Education area"},"faculty":{"title":"Faculty","type":"string","description":"Faculty name","example":"Mathematics"},"form":{"$ref":"#/components/schemas/ExternalEntity"}}},"ExternalEntity":{"title":"ExternalEntity","type":"object","properties":{"id":{"title":"Id","anyOf":[{"type":"integer"},{"type":"string"}],"description":"Entity ID in Huntflow system"},"external_id":{"title":"External Id","type":"string","description":"Entity external ID"},"name":{"title":"Name","type":"string","description":"Entity name"}},"example":{"id":14,"external_id":"100","name":"Entity"}},"FieldType":{"title":"FieldType","enum":["string","integer","text","date","select","complex","contract","reason","stoplist","compensation","dictionary","income","position_status","division","region","url","hidden","html"],"type":"string","description":"An enumeration."},"FillQuota":{"title":"FillQuota","type":"object","properties":{"deadline":{"title":"Deadline","type":"string","description":"Date when the quota should be filled","format":"date"},"applicants_to_hire":{"title":"Applicants To Hire","maximum":999.0,"minimum":1.0,"type":"integer","description":"Number of applicants should be hired on the fill quota"},"vacancy_request":{"title":"Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":12}}},"ForeignUserRequest":{"title":"ForeignUserRequest","required":["id","name","email","type"],"type":"object","properties":{"id":{"title":"Id","type":"string","description":"Foreign User ID","example":"user-032155"},"name":{"title":"Name","type":"string","description":"User name","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Email","format":"email","example":"mail@gmail.com"},"type":{"allOf":[{"$ref":"#/components/schemas/MemberType"}],"description":"User type (role)","example":"owner"},"head_id":{"title":"Head Id","minLength":1,"type":"string","description":"Foreign user ID of head","example":"user-032044"},"division_ids":{"title":"Division Ids","type":"array","items":{"type":"string"},"description":"Foreign IDs of available divisions. If field is not provided, contains null or empty list, it means access to all divisions","example":["division-154","division-871"]},"permissions":{"title":"Permissions","type":"array","items":{"type":"string"},"description":"User permissions","example":["invite-watchers","create-vacancies"]},"meta":{"title":"Meta","type":"object","description":"Additional meta information"}}},"ForeignUserResponse":{"title":"ForeignUserResponse","required":["id","name","email","type"],"type":"object","properties":{"id":{"title":"Id","type":"string","description":"Foreign User ID","example":"user-032155"},"name":{"title":"Name","type":"string","description":"User name","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Email","format":"email","example":"mail@gmail.com"},"type":{"allOf":[{"$ref":"#/components/schemas/MemberType"}],"description":"User type (role)","example":"owner"},"head_id":{"title":"Head Id","minLength":1,"type":"string","description":"Foreign user ID of head","example":"user-032044"},"division_ids":{"title":"Division Ids","type":"array","items":{"type":"string"},"description":"Foreign IDs of available divisions. If field is not provided, contains null or empty list, it means access to all divisions","example":["division-154","division-871"]},"permissions":{"title":"Permissions","type":"array","items":{"type":"string"},"description":"User permissions","example":["invite-watchers","create-vacancies"]},"meta":{"title":"Meta","type":"object","description":"Additional meta information"}}},"ForeignUsersListResponse":{"title":"ForeignUsersListResponse","required":["page","count","total_pages"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/ForeignUserResponse"},"description":"Users with foreign identifiers"}}},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"InterviewType":{"title":"InterviewType","required":["id","name","account","order","type"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Interview type ID","example":20},"name":{"title":"Name","type":"string","description":"Interview type name","example":"Phone interview"},"account":{"title":"Account","type":"integer","description":"[Organization ID](/v2/docs#get-/accounts)","example":42},"order":{"title":"Order","type":"integer","description":"Order number"},"type":{"allOf":[{"$ref":"#/components/schemas/InterviewTypeEnum"}],"description":"Type of the interview","example":"user"}}},"InterviewTypeEnum":{"title":"InterviewTypeEnum","enum":["user","interview"],"type":"string","description":"An enumeration."},"InterviewTypesListResponse":{"title":"InterviewTypesListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/InterviewType"}}}},"Language":{"title":"Language","type":"object","properties":{"id":{"title":"Id","anyOf":[{"type":"integer"},{"type":"string"}],"description":"Entity ID in Huntflow system"},"external_id":{"title":"External Id","type":"string","description":"Entity external ID"},"name":{"title":"Name","type":"string","description":"Entity name"},"level":{"title":"Level","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Language proficiency level"}},"example":{"id":14,"external_id":"100","name":"Entity"}},"LastVacancyFrameResponse":{"title":"LastVacancyFrameResponse","required":["id","frame_begin","vacancy","workdays_in_work"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":3},"frame_begin":{"title":"Frame Begin","type":"string","description":"Date and time of creating a frame","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"frame_end":{"title":"Frame End","type":"string","description":"Date and time of closing a frame","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":85},"hired_applicants":{"title":"Hired Applicants","type":"array","items":{"type":"integer"},"description":"Hired [Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)s","example":[1,2,45]},"workdays_in_work":{"title":"Workdays In Work","type":"integer","description":"How many working days the vacancy is in work","example":10},"workdays_before_deadline":{"title":"Workdays Before Deadline","type":"integer","description":"How many working days before deadline","example":12}}},"Location":{"title":"Location","type":"object","properties":{"entity":{"title":"Entity","type":"string","description":"Entity where error was raised","example":"body"},"variable":{"title":"Variable","type":"string","description":"Json-pointer path to error","example":"/users/1/name"}}},"MailTemplate":{"title":"MailTemplate","required":["id","name","member","html","type"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Template ID","example":1},"subject":{"title":"Subject","type":"string","description":"Subject text","default":"","example":"{{Applicant.FirstName}}, we have a position of {{Vacancy.Position}} for you"},"name":{"title":"Name","type":"string","description":"Template name","example":"Vacancy Invitation"},"member":{"title":"Member","type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) who created the template","example":8},"html":{"title":"Html","type":"string","description":"HTML content","example":"<div><p>Hi {{Applicant.FirstName}}</p>,\n\n<p>We are looking for talented {{Vacancy.Position}} at {{Organization.Name}}.</p>\n\n<p>Are you interested to discuss? I will be glad to tell more.</p>\n\n<p>{{User.Sign}}</p></div>"},"type":{"title":"Type","type":"string","description":"Template type","example":"organization"},"followups":{"title":"Followups","type":"array","items":{"$ref":"#/components/schemas/EmailFollowup"},"description":"Follow-up list"},"attendees":{"title":"Attendees","type":"array","items":{"$ref":"#/components/schemas/MailTemplateAttendee"},"description":"Attendees list"},"divisions":{"title":"Divisions","type":"array","items":{"$ref":"#/components/schemas/MailTemplateDivision"},"description":"Divisions list"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"Files list"}}},"MailTemplateAttendee":{"title":"MailTemplateAttendee","required":["type","email"],"type":"object","properties":{"type":{"title":"Type","type":"string","description":"Attendee type","example":"bcc"},"email":{"title":"Email","type":"string","description":"Attendee email","format":"email"}}},"MailTemplateDivision":{"title":"MailTemplateDivision","required":["id"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Division ID","example":3}}},"MailTemplatesResponse":{"title":"MailTemplatesResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/MailTemplate"}}}},"MeResponse":{"title":"MeResponse","required":["id","locale"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"User ID","example":10},"name":{"title":"Name","type":"string","description":"User name","example":"John Doe"},"position":{"title":"Position","type":"string","description":"User occupation","example":"Head"},"email":{"title":"Email","type":"string","description":"Email address","format":"email"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"locale":{"title":"Locale","type":"string","description":"User locale","example":"ru_RU"}}},"MemberType":{"title":"MemberType","enum":["owner","manager","watcher"],"type":"string","description":"An enumeration."},"Military":{"title":"Military","type":"object","properties":{"date_from":{"title":"Date From","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Military service start date"},"date_to":{"title":"Date To","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Military service end date"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Military service area"},"unit":{"title":"Unit","type":"object","description":"Military service unit","example":{"name":"Infantry","external_id":3336026}}}},"MultiVacancyCreateRequest":{"title":"MultiVacancyCreateRequest","required":["position","blocks"],"type":"object","properties":{"account_applicant_offer":{"title":"Account Applicant Offer","exclusiveMinimum":0.0,"type":"integer","description":"Organization offer ID","example":10},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Python Developer"},"company":{"title":"Company","type":"string","description":"Department name (ignored if the [Divisions](/v2/docs#tag--Divisions) are enabled)","example":"Google"},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from [Coworkers](/v2/docs#tag--Coworkers)?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyCreateState"}],"description":"The state of a vacancy","default":"OPEN"},"coworkers":{"title":"Coworkers","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of [Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) working with a vacancy","example":[1,2,3]},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Development of new functionality, bug fixes, refactoring.</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<ul><li>Experience with python (at least 2 years), including asynchronous</li></ul>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Official employment<br>Remote work format<p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of file IDs to be attached to a vacancy ([Upload files](/v2/docs#post-/accounts/-account_id-/upload))","example":[1,2,3]},"blocks":{"title":"Blocks","type":"array","items":{"$ref":"#/components/schemas/VacancyBlock"},"description":"List of sub-vacancies for a multivacancy"}}},"MultiVacancyResponse":{"title":"MultiVacancyResponse","required":["task_id"],"type":"object","properties":{"task_id":{"title":"Task Id","type":"string","description":"[Task ID](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)","format":"uuid"}}},"MultiVacancyUpdatePartialRequest":{"title":"MultiVacancyUpdatePartialRequest","required":["position","blocks"],"type":"object","properties":{"account_applicant_offer":{"title":"Account Applicant Offer","exclusiveMinimum":0.0,"type":"integer","description":"Organization offer ID","example":10},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department name (ignored if the [Divisions](/v2/docs#tag--Divisions) are enabled)","example":"Google"},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from [Coworkers](/v2/docs#tag--Coworkers)?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyUpdateState"}],"description":"The state of a vacancy","default":"OPEN"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Development of new functionality, bug fixes, refactoring.</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<ul><li>Experience with python (at least 2 years), including asynchronous</li></ul>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Official employment<br>Remote work format<p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of file IDs to be attached to a vacancy ([Upload files](/v2/docs#post-/accounts/-account_id-/upload))","example":[1,2,3]},"blocks":{"title":"Blocks","type":"array","items":{"$ref":"#/components/schemas/VacancyBlockUpdatePartial"},"description":"List of sub-vacancies for a multivacancy"}}},"MultiVacancyUpdateRequest":{"title":"MultiVacancyUpdateRequest","required":["position","blocks"],"type":"object","properties":{"account_applicant_offer":{"title":"Account Applicant Offer","exclusiveMinimum":0.0,"type":"integer","description":"Organization offer ID","example":10},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department name (ignored if the [Divisions](/v2/docs#tag--Divisions) are enabled)","example":"Google"},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from [Coworkers](/v2/docs#tag--Coworkers)?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyUpdateState"}],"description":"The state of a vacancy","default":"OPEN"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Development of new functionality, bug fixes, refactoring.</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<ul><li>Experience with python (at least 2 years), including asynchronous</li></ul>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format. Available tags: ul, ol, li, p, br, a, strong, em, u, b, i","example":"<p>Official employment<br>Remote work format<p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of file IDs to be attached to a vacancy ([Upload files](/v2/docs#post-/accounts/-account_id-/upload))","example":[1,2,3]},"blocks":{"title":"Blocks","type":"array","items":{"$ref":"#/components/schemas/VacancyBlockUpdate"},"description":"List of sub-vacancies for a multivacancy"}}},"MultivacancyAddChildTaskResult":{"title":"MultivacancyAddChildTaskResult","required":["child_vacancy_id"],"type":"object","properties":{"child_vacancy_id":{"title":"Child Vacancy Id","type":"integer"}}},"MultivacancyUpsertTaskResult":{"title":"MultivacancyUpsertTaskResult","required":["parent_vacancy_id","children_vacancies_ids"],"type":"object","properties":{"parent_vacancy_id":{"title":"Parent Vacancy Id","type":"integer"},"children_vacancies_ids":{"title":"Children Vacancies Ids","type":"array","items":{"type":"integer"}}}},"Name":{"title":"Name","type":"object","properties":{"first":{"title":"First","type":"string","description":"Firstname","example":"John"},"last":{"title":"Last","type":"string","description":"Lastname","example":"Doe"},"middle":{"title":"Middle","type":"string","description":"Middlename","example":"Harvard"}}},"NonWorkingDaysBulkRequest":{"title":"NonWorkingDaysBulkRequest","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__calendar__NonWorkingDays"}},"NonWorkingDaysBulkResponse":{"title":"NonWorkingDaysBulkResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__calendar__NonWorkingDays"},"description":"Info about non-working days for several periods"}}},"NonWorkingDaysResponse":{"title":"NonWorkingDaysResponse","required":["start","deadline","total_days","not_working_days","production_calendar"],"type":"object","properties":{"start":{"title":"Start","type":"string","description":"Start date","format":"date","example":"2021-02-01"},"deadline":{"title":"Deadline","type":"string","description":"Deadline date","format":"date","example":"2021-02-07"},"total_days":{"title":"Total Days","type":"integer","description":"Total amount of days within the range","example":7},"not_working_days":{"title":"Not Working Days","type":"integer","description":"Amount of non-working days within the range","example":2},"production_calendar":{"title":"Production Calendar","exclusiveMinimum":0.0,"type":"integer","description":"Calendar ID"},"items":{"title":"Items","type":"array","items":{"type":"string","format":"date"},"description":"List of dates, weekends and holidays within the range","example":["2021-02-06","2021-02-07"]}}},"NullStr":{"title":"NullStr","enum":["null"],"type":"string","description":"An enumeration."},"Organization":{"title":"Organization","required":["id","name","nick","member_type"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Organization ID","example":10},"name":{"title":"Name","type":"string","description":"Organization name","example":"Huntflow"},"nick":{"title":"Nick","type":"string","description":"Short organization name","example":"huntflow"},"member_type":{"allOf":[{"$ref":"#/components/schemas/MemberType"}],"description":"Role of the current user in the organization","example":"owner"},"production_calendar":{"title":"Production Calendar","exclusiveMinimum":0.0,"type":"integer","description":"[Production calendar ID](/v2/docs#get-/production_calendars)","example":1}}},"OrganizationInfoResponse":{"title":"OrganizationInfoResponse","required":["id","name","nick","locale"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Organization ID](/v2/docs#get-/accounts)","example":10},"name":{"title":"Name","type":"string","description":"Organization name","example":"Huntflow"},"nick":{"title":"Nick","type":"string","description":"Short organization name","example":"huntflow"},"locale":{"title":"Locale","type":"string","description":"Organization locale","example":"ru_RU"},"photo":{"title":"Photo","maxLength":65536,"minLength":1,"type":"string","description":"Organization logo url","format":"uri","example":"https://huntflow.ru/logo.jpg"}}},"OrganizationsListResponse":{"title":"OrganizationsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/Organization"},"description":"List of available organizations"}}},"ParsedFields":{"title":"ParsedFields","type":"object","properties":{"name":{"$ref":"#/components/schemas/Name"},"birthdate":{"$ref":"#/components/schemas/Birthdate"},"phones":{"title":"Phones","type":"array","items":{"type":"string"},"description":"Phones","example":["+7 (999) 8887766"]},"email":{"title":"Email","type":"string","description":"Email","example":"mail@nomail.ru"},"salary":{"title":"Salary","type":"integer","description":"Salary","example":100500},"position":{"title":"Position","type":"string","description":"Position","example":"Программист"},"skype":{"title":"Skype","type":"string","description":"Skype","example":"tproger"},"telegram":{"title":"Telegram","type":"string","description":"Telegram","example":"@tproger"},"experience":{"title":"Experience","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__upload__Experience"},"description":"Experience"}}},"ParsingMetaResponse":{"title":"ParsingMetaResponse","required":["last_names_ignored","emails_ignored","phones_ignored"],"type":"object","properties":{"last_names_ignored":{"title":"Last Names Ignored","type":"boolean","description":"If last names ignored","example":true},"emails_ignored":{"title":"Emails Ignored","type":"boolean","description":"If emails ignored","example":true},"phones_ignored":{"title":"Phones Ignored","type":"boolean","description":"If phones ignored","example":true}}},"Permission":{"title":"Permission","required":["permission"],"type":"object","properties":{"permission":{"title":"Permission","type":"string","description":"Permission name","example":"status"},"value":{"title":"Value","type":"string","description":"Permission value","example":"97"},"vacancy":{"title":"Vacancy","type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":1}}},"PersonalInfo":{"title":"PersonalInfo","type":"object","properties":{"photo":{"title":"Photo","allOf":[{"$ref":"#/components/schemas/PhotoData"}],"description":"Urls for resume photo"},"first_name":{"title":"First Name","type":"string","description":"First name","example":"John"},"middle_name":{"title":"Middle Name","type":"string","description":"Middle name","example":"Abraham"},"last_name":{"title":"Last Name","type":"string","description":"Last name","example":"Doe"},"birth_date":{"title":"Birth Date","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Date of birth"},"text_block":{"title":"Text Block","allOf":[{"$ref":"#/components/schemas/TextBlock"}],"description":"Additional \"About\" info"}}},"PhotoData":{"title":"PhotoData","type":"object","properties":{"small":{"title":"Small","type":"string","description":"Small image url","example":"https://example.com/image_small.png"},"medium":{"title":"Medium","type":"string","description":"Medium image url","example":"https://example.com/image_medium.png"},"large":{"title":"Large","type":"string","description":"Large image url","example":"https://example.com/image_large.png"},"external_id":{"title":"External Id","type":"string","description":"Photo external ID","example":"12"},"description":{"title":"Description","type":"string","description":"Photo description","example":"Applicant's photo"},"source":{"title":"Source","type":"string","description":"Photo's source url","example":"https://example.com/photo_source.png"},"id":{"title":"Id","type":"integer","description":"Huntflow photo ID","example":10}}},"Portfolio":{"title":"Portfolio","type":"object","properties":{"small":{"title":"Small","type":"string","description":"Small image url","example":"https://example.com/image_small.png"},"large":{"title":"Large","type":"string","description":"Large image url","example":"https://example.com/image_large.png"},"description":{"title":"Description","type":"string","description":"Image description","example":"Example image"}}},"PrecisionTypes":{"title":"PrecisionTypes","enum":["year","month","day"],"type":"string","description":"An enumeration."},"QuestionaryField":{"title":"QuestionaryField","required":["type","id","order"],"type":"object","properties":{"type":{"allOf":[{"$ref":"#/components/schemas/FieldType"}],"description":"Field type","example":"income"},"id":{"title":"Id","type":"integer","description":"Field ID","example":10},"title":{"title":"Title","type":"string","description":"Field title","example":"Current salary"},"required":{"title":"Required","type":"boolean","description":"Field required flag","default":false},"order":{"title":"Order","type":"integer","description":"The order of the field on the form","example":1},"values":{"title":"Values","type":"array","items":{},"description":"List of possible values (for fields with select type)","example":["Net","Gross"]},"value":{"title":"Value","type":"string","description":"Set value","example":"Net"},"fields":{"title":"Fields","type":"object","additionalProperties":{"$ref":"#/components/schemas/QuestionaryField"},"description":"Child fields"},"show_in_profile":{"title":"Show In Profile","type":"boolean","description":"Display field value in applicant's profile"},"dictionary":{"title":"Dictionary","type":"string","description":"Organization dictionary name (for type=dictionary)","example":"Managers"}}},"QuestionaryRequest":{"title":"QuestionaryRequest","type":"object","properties":{}},"QuestionaryResponse":{"title":"QuestionaryResponse","type":"object","example":{"resource":{"id":667,"name":"Тестирование 2017","foreign":"f1","meta":{"foo":"bar"}},"position":{"id":33255,"name":"Стажер","foreign":"f2"},"expected_trial":{"income":"9","type":"Gross"},"expected_main":{"income":"9","type":"Gross"},"current_salary":{"income":"9","type":"Gross"},"current_total":{"income":"9","type":"Gross"}}},"QuestionarySchemaResponse":{"title":"QuestionarySchemaResponse","type":"object","additionalProperties":{"$ref":"#/components/schemas/QuestionaryField"},"description":"Mapping of fields in the questionary and objects with their values","example":{"field_name":{"type":"income","id":10,"title":"Current salary","required":false,"order":1,"values":["Net","Gross"],"value":"Net","fields":{"child_field":{}},"show_in_profile":true,"dictionary":"Managers"}}},"RawData":{"title":"RawData","type":"object","properties":{"body":{"title":"Body","type":"string","description":"Resume text (for resumes with auth_type = NATIVE)","example":"My resume"}}},"RecommendationProcessingFilter":{"title":"RecommendationProcessingFilter","enum":["ALL","PROCESSED","UNPROCESSED"],"type":"string","description":"An enumeration."},"RecommendationStatus":{"title":"RecommendationStatus","enum":["TAKEN","TAKEN_OTHER","DECLINED"],"type":"string","description":"- TAKEN: recommended applicant was taken from recommendations tab\n- TAKEN_OTHER: recommended applicant was taken from any other place\n- DECLINED: recommended applicant was declined"},"RefreshTokenRequest":{"title":"RefreshTokenRequest","required":["refresh_token"],"type":"object","properties":{"refresh_token":{"title":"Refresh Token","type":"string","description":"Refresh token","example":"123abc"}}},"RefreshTokenResponse":{"title":"RefreshTokenResponse","required":["access_token","token_type","expires_in","refresh_token_expires_in","refresh_token"],"type":"object","properties":{"access_token":{"title":"Access Token","type":"string","description":"New access token","example":"def456"},"token_type":{"title":"Token Type","type":"string","description":"Token type","example":"bearer"},"expires_in":{"title":"Expires In","type":"integer","description":"Token lifetime in seconds","example":604800},"refresh_token_expires_in":{"title":"Refresh Token Expires In","type":"integer","description":"Refresh token lifetime in seconds","example":1209600},"refresh_token":{"title":"Refresh Token","type":"string","description":"New refresh token","example":"ghi789"}}},"Region":{"title":"Region","required":["id","name","order","deep"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Region ID","example":2},"name":{"title":"Name","type":"string","description":"Region name","example":"Russian Federation"},"order":{"title":"Order","type":"integer","description":"Order number","example":1},"parent":{"title":"Parent","type":"integer","description":"Parent Region ID","example":1},"deep":{"title":"Deep","type":"integer","description":"Depth level"}}},"RegionsListResponse":{"title":"RegionsListResponse","required":["items","meta"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/Region"}},"meta":{"$ref":"#/components/schemas/api__v2__serializers__response__regions__Meta"}}},"RejectionReason":{"title":"RejectionReason","required":["name","order"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Rejection reason ID","example":20},"name":{"title":"Name","type":"string","description":"Rejection reason name","example":"High demands salary"},"order":{"title":"Order","type":"integer","description":"Order","example":1}},"description":"The ID can be None because the backend adds the rejection reason \"Other\" where ID is None"},"RejectionReasonsListResponse":{"title":"RejectionReasonsListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/RejectionReason"}}}},"Relocation":{"title":"Relocation","type":"object","properties":{"type":{"title":"Type","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Type of relocation"},"area":{"title":"Area","type":"array","items":{"$ref":"#/components/schemas/Area"},"description":"List of areas for relocation"}}},"Resume":{"title":"Resume","type":"object","properties":{"personal_info":{"title":"Personal Info","allOf":[{"$ref":"#/components/schemas/PersonalInfo"}],"description":"Personal info"},"source_url":{"title":"Source Url","type":"string","description":"Resume url to external job site","example":"https://example.com/resume"},"position":{"title":"Position","type":"string","description":"Resume header","example":"Manager"},"specialization":{"title":"Specialization","type":"array","items":{"$ref":"#/components/schemas/Specialization"},"description":"Specializations"},"skill_set":{"title":"Skill Set","type":"array","items":{"type":"string"},"description":"List of skills","example":["English language"]},"gender":{"title":"Gender","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Gender"},"experience":{"title":"Experience","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__resume__Experience"},"description":"Work experiences"},"education":{"title":"Education","allOf":[{"$ref":"#/components/schemas/Education"}],"description":"Education"},"certificate":{"title":"Certificate","type":"array","items":{"$ref":"#/components/schemas/Certificate"},"description":"Certificates"},"portfolio":{"title":"Portfolio","type":"array","items":{"$ref":"#/components/schemas/PhotoData"},"description":"Portfolio"},"contact":{"title":"Contact","type":"array","items":{"$ref":"#/components/schemas/Contact"},"description":"List of contacts"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Living area"},"relocation":{"title":"Relocation","allOf":[{"$ref":"#/components/schemas/Relocation"}],"description":"Relocation info"},"citizenship":{"title":"Citizenship","type":"array","items":{"$ref":"#/components/schemas/ExternalEntity"},"description":"Citizenship"},"work_permit":{"title":"Work Permit","type":"array","items":{"$ref":"#/components/schemas/ExternalEntity"},"description":"List of countries with work permission"},"language":{"title":"Language","type":"array","items":{"$ref":"#/components/schemas/Language"},"description":"Language proficiency"},"wanted_salary":{"title":"Wanted Salary","allOf":[{"$ref":"#/components/schemas/Salary"}],"description":"Desired salary"},"work_schedule":{"title":"Work Schedule","type":"array","items":{"$ref":"#/components/schemas/ExternalEntity"},"description":"Work schedules"},"business_trip_readiness":{"title":"Business Trip Readiness","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Readiness for business trips"},"recommendations":{"title":"Recommendations","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__resume__Recommendation"},"description":"List of recommendations"},"has_vehicle":{"title":"Has Vehicle","type":"boolean","description":"Ownership of vehicle","example":"false"},"driver_license_types":{"title":"Driver License Types","type":"array","items":{"type":"string"},"description":"List of available driver's licenses","example":["A1","B1"]},"military":{"title":"Military","type":"array","items":{"$ref":"#/components/schemas/Military"},"description":"Military service"},"social_ratings":{"title":"Social Ratings","type":"array","items":{"$ref":"#/components/schemas/SocialRating"},"description":"Social ratings"},"photos":{"title":"Photos","type":"array","items":{"$ref":"#/components/schemas/SimplePhoto"},"description":"Photos"},"additionals":{"title":"Additionals","type":"array","items":{"$ref":"#/components/schemas/Additional"},"description":"Some additional info related to resume"},"wanted_place_of_work":{"title":"Wanted Place Of Work","type":"string","description":"Desired place of work","example":"New York"},"updated_on_source":{"title":"Updated On Source","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Date of resume update in the source"},"travel_time":{"title":"Travel Time","allOf":[{"$ref":"#/components/schemas/ExternalEntity"}],"description":"Preferred travel time"}}},"Salary":{"title":"Salary","type":"object","properties":{"amount":{"title":"Amount","type":"number","description":"Salary amount"},"currency":{"title":"Currency","type":"string","description":"Salary currency"}}},"SimplePhoto":{"title":"SimplePhoto","type":"object","properties":{"url":{"title":"Url","type":"string","description":"Photo url"},"original":{"title":"Original","type":"string","description":"Photo original"}}},"SimpleVacancyRequest":{"title":"SimpleVacancyRequest","required":["id","position","created"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer"},"position":{"title":"Position","type":"string"},"created":{"title":"Created","type":"string","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"Changes on attach to vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"Skill":{"title":"Skill","required":["title"],"type":"object","properties":{"title":{"title":"Title","type":"string","description":"Skill name","example":"English language"}}},"SocialRating":{"title":"SocialRating","type":"object","properties":{"kind":{"title":"Kind","type":"string"},"stats":{"title":"Stats"},"tags":{"title":"Tags","type":"array","items":{"type":"string"}},"url":{"title":"Url","type":"string"},"login":{"title":"Login","type":"string"},"registered_at":{"title":"Registered At","type":"string","description":"ISO datetime"}}},"Specialization":{"title":"Specialization","type":"object","properties":{"id":{"title":"Id","anyOf":[{"type":"integer"},{"type":"string"}],"description":"Entity ID in Huntflow system"},"external_id":{"title":"External Id","type":"string","description":"Entity external ID"},"name":{"title":"Name","type":"string","description":"Entity name"},"profarea_id":{"title":"Profarea Id","type":"string","description":"Specialization ID in Huntflow system","example":"10"},"external_profarea_id":{"title":"External Profarea Id","type":"string","description":"Specialization external ID","example":"external_10"},"prefarea_name":{"title":"Prefarea Name","type":"string","description":"Specialization name","example":"Sales"}},"example":{"id":14,"external_id":"100","name":"Entity"}},"StartDate":{"title":"StartDate","required":["days"],"type":"object","properties":{"days":{"title":"Days","type":"integer","description":"Amount of working days"},"deadline":{"title":"Deadline","type":"string","description":"A date to finish the reverse counting. Default is today.","format":"date"}}},"StartDatesBulkRequest":{"title":"StartDatesBulkRequest","type":"array","items":{"$ref":"#/components/schemas/StartDate"}},"StatusResponse":{"title":"StatusResponse","type":"object","properties":{"status":{"title":"Status","type":"boolean","default":true,"example":true}}},"SurveyAnswerTypeAResponse":{"title":"SurveyAnswerTypeAResponse","required":["id","created","survey","respondent","data"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Survey answer of type A ID](/v2/docs#get-/accounts/-account_id-/surveys/type_a/-survey_id-/answers/-answer_id-)","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an answer","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"survey":{"title":"Survey","allOf":[{"$ref":"#/components/schemas/SurveySchemaTypeAResponse"}],"description":"Survey schema"},"respondent":{"title":"Respondent","allOf":[{"$ref":"#/components/schemas/SurveyTypeARespondent"}],"description":"Who created the survey answer"},"data":{"title":"Data","type":"object","description":"Answer data"}}},"SurveyQuestionaryAnswerResponse":{"title":"SurveyQuestionaryAnswerResponse","required":["id","created","survey","respondent","survey_questionary","data"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"[Survey questionary answer ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/answers/-answer_id-)","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating an answer","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"survey":{"title":"Survey","allOf":[{"$ref":"#/components/schemas/SurveySchemaTypeQResponse"}],"description":"Survey questionary schema"},"respondent":{"$ref":"#/components/schemas/SurveyQuestionaryRespondentWithName"},"survey_questionary":{"$ref":"#/components/schemas/SurveyQuestionaryCreatedInfo"},"data":{"title":"Data","type":"object","description":"Answer data"}}},"SurveyQuestionaryCreateRequest":{"title":"SurveyQuestionaryCreateRequest","required":["survey_id","respondent"],"type":"object","properties":{"survey_id":{"title":"Survey Id","type":"integer"},"respondent":{"$ref":"#/components/schemas/SurveyQuestionaryRespondent"}}},"SurveyQuestionaryCreatedInfo":{"title":"SurveyQuestionaryCreatedInfo","required":["id","created","created_by"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey questionary ID","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"created_by":{"$ref":"#/components/schemas/Creator"}}},"SurveyQuestionaryRespondent":{"title":"SurveyQuestionaryRespondent","required":["applicant_id"],"type":"object","properties":{"applicant_id":{"title":"Applicant Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)"}}},"SurveyQuestionaryRespondentWithName":{"title":"SurveyQuestionaryRespondentWithName","required":["applicant_id","name"],"type":"object","properties":{"applicant_id":{"title":"Applicant Id","type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)"},"name":{"title":"Name","type":"string"}}},"SurveyQuestionaryResponse":{"title":"SurveyQuestionaryResponse","required":["id","created","created_by","survey","respondent","survey_answer_id","link"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey questionary ID","example":1},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"created_by":{"$ref":"#/components/schemas/Creator"},"survey":{"title":"Survey","allOf":[{"$ref":"#/components/schemas/SurveySchemaTypeQResponse"}],"description":"Survey questionary schema"},"respondent":{"$ref":"#/components/schemas/SurveyQuestionaryRespondentWithName"},"survey_answer_id":{"title":"Survey Answer Id","type":"integer","description":"[Survey questionary answer ID](/v2/docs#get-/accounts/-account_id-/surveys/type_q/answers/-answer_id-)"},"link":{"title":"Link","type":"string","description":"Survey questionary link for applicant"}}},"SurveySchemaTypeALogResponse":{"title":"SurveySchemaTypeALogResponse","required":["id","name","type","active","created","updated"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey ID","example":1},"name":{"title":"Name","type":"string","description":"Survey name","example":"test_survey"},"type":{"allOf":[{"$ref":"#/components/schemas/SurveyTypesEnum"}],"description":"Type of survey","example":"type_a"},"active":{"title":"Active","type":"boolean","description":"Is survey active?","example":true},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of the last update of the survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"SurveySchemaTypeAResponse":{"title":"SurveySchemaTypeAResponse","required":["id","name","active","created","updated","schema","ui_schema"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey ID","example":1},"name":{"title":"Name","type":"string","description":"Survey name","example":"test_survey"},"type":{"allOf":[{"$ref":"#/components/schemas/SurveyTypesEnum"}],"description":"Type of survey","default":"type_a","example":"type_a"},"active":{"title":"Active","type":"boolean","description":"Is survey active?","example":true},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of the last update of the survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"schema":{"title":"Schema","type":"object","description":"JSON schema for the survey fields"},"ui_schema":{"title":"Ui Schema","type":"object","description":"UI schema for the survey fields"}}},"SurveySchemaTypeQLogResponse":{"title":"SurveySchemaTypeQLogResponse","required":["id","name","type","active","created","updated","title"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey ID","example":1},"name":{"title":"Name","type":"string","description":"Survey name","example":"test_survey"},"type":{"allOf":[{"$ref":"#/components/schemas/SurveyTypesEnum"}],"description":"Type of survey","example":"type_a"},"active":{"title":"Active","type":"boolean","description":"Is survey active?","example":true},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of the last update of the survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"title":{"title":"Title","type":"string","description":"Survey title","example":"Type Q title"}}},"SurveySchemaTypeQResponse":{"title":"SurveySchemaTypeQResponse","required":["id","name","active","created","updated","schema","ui_schema","title"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Survey ID","example":1},"name":{"title":"Name","type":"string","description":"Survey name","example":"test_survey"},"type":{"allOf":[{"$ref":"#/components/schemas/SurveyTypesEnum"}],"description":"Type of survey","default":"type_q","example":"type_q"},"active":{"title":"Active","type":"boolean","description":"Is survey active?","example":true},"created":{"title":"Created","type":"string","description":"Date and time of creating a survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of the last update of the survey","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"schema":{"title":"Schema","type":"object","description":"JSON schema for the survey fields"},"ui_schema":{"title":"Ui Schema","type":"object","description":"UI schema for the survey fields"},"title":{"title":"Title","type":"string","description":"Survey title","example":"Type Q title"}}},"SurveySchemasTypeAListResponse":{"title":"SurveySchemasTypeAListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/BaseSurveySchemaType"},"description":"List of type a survey schemas"}}},"SurveySchemasTypeQListResponse":{"title":"SurveySchemasTypeQListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/BaseSurveySchemaType"},"description":"List of type q survey schemas"}}},"SurveyTypeARespondent":{"title":"SurveyTypeARespondent","required":["account_id","name"],"type":"object","properties":{"account_id":{"title":"Account Id","type":"integer","description":"[User ID](/v2/docs#get-/accounts/-account_id-/users/-user_id-)","example":1},"name":{"title":"Name","type":"string","description":"Name of the user who created the survey answer","example":"John Joe"}}},"SurveyTypesEnum":{"title":"SurveyTypesEnum","enum":["type_a","type_q"],"type":"string","description":"An enumeration."},"TaskLog":{"title":"TaskLog","required":["state","timestamp","datetime"],"type":"object","properties":{"state":{"allOf":[{"$ref":"#/components/schemas/TaskState"}],"description":"Task status"},"timestamp":{"title":"Timestamp","type":"number","description":"Unix timestamp of the task state change","example":1561006501.318867},"datetime":{"title":"Datetime","type":"string","description":"Date and time of the task state change (ISO 8601)","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"comment":{"title":"Comment","type":"string","description":"Comment text","example":"Some text"}}},"TaskState":{"title":"TaskState","enum":["enqueued","inprogress","success","failed"],"type":"string","description":"An enumeration."},"TextBlock":{"title":"TextBlock","type":"object","properties":{"header":{"title":"Header","type":"string","description":"Text block header","example":"About header"},"body":{"title":"Body","type":"string","description":"Text block body","example":"About body"}}},"Transparency":{"title":"Transparency","enum":["busy","free"],"type":"string","description":"An enumeration."},"UploadResponse":{"title":"UploadResponse","required":["id","url","content_type","name"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"File ID"},"url":{"title":"Url","maxLength":65536,"minLength":1,"type":"string","description":"File URL","format":"uri"},"content_type":{"title":"Content Type","type":"string","description":"File content type","example":"image/jpeg"},"name":{"title":"Name","type":"string","description":"File name","example":"0001.jpeg"},"photo":{"title":"Photo","allOf":[{"$ref":"#/components/schemas/api__v2__serializers__common__File"}],"description":"Photo file"},"text":{"title":"Text","type":"string","description":"Parsed text"},"fields":{"title":"Fields","allOf":[{"$ref":"#/components/schemas/ParsedFields"}],"description":"Parsed fields"},"parsing_meta":{"title":"Parsing Meta","allOf":[{"$ref":"#/components/schemas/ParsingMetaResponse"}],"description":"Info on ignored arguments"}}},"User":{"title":"User","required":["id","name"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)"},"name":{"title":"Name","type":"string","description":"Coworker name","example":"John Joe"},"email":{"title":"Email","type":"string","description":"Email","format":"email"},"phone":{"title":"Phone","type":"string","description":"Phone number","example":"89999999999"},"meta":{"title":"Meta","type":"object","description":"Additional information"}}},"UserControlTaskAction":{"title":"UserControlTaskAction","enum":["CREATE","UPDATE","DELETE"],"type":"string","description":"An enumeration."},"UserControlTaskResponse":{"title":"UserControlTaskResponse","required":["id","account_id","action","status","created"],"type":"object","properties":{"id":{"title":"Id","type":"string","description":"Task ID","format":"uuid"},"account_id":{"title":"Account Id","type":"integer","description":"Organization account ID"},"action":{"allOf":[{"$ref":"#/components/schemas/UserControlTaskAction"}],"description":"Task action"},"status":{"allOf":[{"$ref":"#/components/schemas/UserControlTaskStatus"}],"description":"Task status"},"data":{"title":"Data","type":"object","description":"Task result"},"comment":{"title":"Comment","type":"string","description":"Comment (in case of error)"},"created":{"title":"Created","type":"string","description":"Task creation time","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"completed":{"title":"Completed","type":"string","description":"Task completion time","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"UserControlTaskStatus":{"title":"UserControlTaskStatus","enum":["PENDING","SUCCESS","FAILED"],"type":"string","description":"An enumeration."},"UserId":{"title":"UserId","required":["id"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"User ID","example":12}}},"UserResponse":{"title":"UserResponse","required":["id","type"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"User ID","example":12},"name":{"title":"Name","type":"string","description":"User name","example":"John Doe"},"type":{"title":"Type","type":"string","description":"User type (role)","example":"owner"},"head":{"title":"Head","type":"integer","description":"Head user ID","example":2},"email":{"title":"Email","type":"string","description":"Email","format":"email","example":"mail@gmail.com"},"meta":{"title":"Meta","type":"object","description":"Additional meta information"},"permissions":{"title":"Permissions","type":"array","items":{"$ref":"#/components/schemas/Permission"},"description":"User permissions"}}},"VacancyBlock":{"title":"VacancyBlock","required":["fill_quotas"],"type":"object","properties":{"fill_quotas":{"title":"Fill Quotas","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/FillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0}},"description":"Child vacancy for multivacancy"},"VacancyBlockUpdate":{"title":"VacancyBlockUpdate","required":["fill_quotas"],"type":"object","properties":{"fill_quotas":{"title":"Fill Quotas","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/EditedFillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Sub-vacancy ID","example":10}},"description":"Child vacancy for multivacancy"},"VacancyBlockUpdatePartial":{"title":"VacancyBlockUpdatePartial","type":"object","properties":{"fill_quotas":{"title":"Fill Quotas","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/EditedFillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Sub-vacancy ID","example":10},"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":4}},"description":"Child vacancy for multivacancy"},"VacancyChild":{"title":"VacancyChild","required":["position","created","files"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":150},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"additional_fields_list":{"title":"Additional Fields List","type":"array","items":{"type":"string"},"description":"List of additional field names. [Getting a schema of additional fields](/v2/docs#/Vacancies/get_additional_fields_schema_accounts__account_id__vacancies_additional_fields_get)","default":[],"example":["deadline"]},"multiple":{"title":"Multiple","type":"boolean","description":"Flag indicating if this vacancy is a multiple"},"parent":{"title":"Parent","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy parent ID","example":15},"account_vacancy_status_group":{"title":"Account Vacancy Status Group","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status group ID](/v2/docs#get-/accounts/-account_id-/vacancies/status_groups)","example":12},"updated":{"title":"Updated","type":"string","description":"Date and time of updating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__vacancies__File"}},"source":{"title":"Source","type":"string","description":"Vacancy source ID if it was imported","example":"0x5F22EC3F759E002B"}},"description":"Child vacancy for multivacancy"},"VacancyCloseRequest":{"title":"VacancyCloseRequest","type":"object","properties":{"date":{"title":"Date","type":"string","description":"Action date","format":"date","example":"2022-10-25"},"comment":{"title":"Comment","type":"string","description":"Comment","example":"Some comment"},"account_vacancy_close_reason":{"title":"Account Vacancy Close Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy close reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_close_reasons)","example":1},"unpublish_all":{"title":"Unpublish All","type":"boolean","description":"Remove a vacancy from all publications","default":false,"example":false}}},"VacancyCreateRequest":{"title":"VacancyCreateRequest","required":["account_division","position","fill_quotas"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyCreateState"}],"description":"The state of a vacancy","default":"OPEN"},"account_applicant_offer":{"title":"Account Applicant Offer","exclusiveMinimum":0.0,"type":"integer","description":"Organization offer ID","example":10},"coworkers":{"title":"Coworkers","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of [Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) working with a vacancy","example":[1,2]},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of file IDs attached to a vacancy. [Upload files](/v2/docs#post-/accounts/-account_id-/upload)","example":[1,2,3]},"fill_quotas":{"title":"Fill Quotas","maxItems":1,"type":"array","items":{"$ref":"#/components/schemas/FillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"}}},"VacancyCreateResponse":{"title":"VacancyCreateResponse","required":["account_division","position","id","created"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":10},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"coworkers":{"title":"Coworkers","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"List of [Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers) working with a vacancy","example":[1,2]},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of file IDs attached to a vacancy","example":[1,2]},"account_vacancy_status_group":{"title":"Account Vacancy Status Group","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status group ID](/v2/docs#get-/accounts/-account_id-/vacancies/status_groups)","example":10},"parent":{"title":"Parent","type":"integer","description":"Parent vacancy ID","example":9},"source":{"title":"Source","type":"string","description":"Vacancy source ID if it was imported"},"multiple":{"title":"Multiple","type":"boolean","description":"Flag indicating if this vacancy is a multiple","default":false},"vacancy_request":{"title":"Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":3}}},"VacancyCreateState":{"title":"VacancyCreateState","enum":["OPEN"],"type":"string","description":"An enumeration."},"VacancyFrame":{"title":"VacancyFrame","required":["id","frame_begin","vacancy","workdays_in_work"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":3},"frame_begin":{"title":"Frame Begin","type":"string","description":"Date and time of creating a frame","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"frame_end":{"title":"Frame End","type":"string","description":"Date and time of closing a frame","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":85},"hired_applicants":{"title":"Hired Applicants","type":"array","items":{"type":"integer"},"description":"Hired [Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)s","example":[1,2,45]},"workdays_in_work":{"title":"Workdays In Work","type":"integer","description":"How many working days the vacancy is in work","example":10},"workdays_before_deadline":{"title":"Workdays Before Deadline","type":"integer","description":"How many working days before deadline","example":12},"next_id":{"title":"Next Id","type":"integer","description":"The next frame ID","example":4}}},"VacancyFrameQuotasResponse":{"title":"VacancyFrameQuotasResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyQuotaItem"}}}},"VacancyFramesListResponse":{"title":"VacancyFramesListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyFrame"}}}},"VacancyHoldRequest":{"title":"VacancyHoldRequest","type":"object","properties":{"date":{"title":"Date","type":"string","description":"Action date","format":"date","example":"2022-10-25"},"comment":{"title":"Comment","type":"string","description":"Comment","example":"Some comment"},"account_vacancy_hold_reason":{"title":"Account Vacancy Hold Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy hold reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_hold_reasons)","example":1},"unpublish_all":{"title":"Unpublish All","type":"boolean","description":"Remove a vacancy from all publications","default":false,"example":false}}},"VacancyItem":{"title":"VacancyItem","required":["position","created"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":150},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"additional_fields_list":{"title":"Additional Fields List","type":"array","items":{"type":"string"},"description":"List of additional field names. [Getting a schema of additional fields](/v2/docs#/Vacancies/get_additional_fields_schema_accounts__account_id__vacancies_additional_fields_get)","default":[],"example":["deadline"]},"multiple":{"title":"Multiple","type":"boolean","description":"Flag indicating if this vacancy is a multiple"},"parent":{"title":"Parent","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy parent ID","example":15},"account_vacancy_status_group":{"title":"Account Vacancy Status Group","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status group ID](/v2/docs#get-/accounts/-account_id-/vacancies/status_groups)","example":12}}},"VacancyListResponse":{"title":"VacancyListResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyItem"}}}},"VacancyListState":{"title":"VacancyListState","enum":["OPEN","CLOSED","HOLD"],"type":"string","description":"An enumeration."},"VacancyLog":{"title":"VacancyLog","required":["id","state","created"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy log ID","example":12},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"Vacancy state ID","example":"OPEN"},"created":{"title":"Created","type":"string","description":"Vacancy log creation date","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"account_vacancy_hold_reason":{"title":"Account Vacancy Hold Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy hold reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_hold_reasons)","example":13},"account_vacancy_close_reason":{"title":"Account Vacancy Close Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy close reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_close_reasons)","example":235},"data":{"title":"Data"},"account_data":{"$ref":"#/components/schemas/AccountInfo"},"vacancy_request":{"$ref":"#/components/schemas/SimpleVacancyRequest"},"vacancy_frame_fill_quota":{"$ref":"#/components/schemas/VacancyQuotaExtendedItem"}}},"VacancyLogsResponse":{"title":"VacancyLogsResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyLog"},"description":"Vacancy logs, from newer to older"},"page":{"title":"Page","type":"integer","description":"Has value when page param passed, current page"},"count":{"title":"Count","type":"integer","description":"Has value when page param passed, count per page"},"total":{"title":"Total","type":"integer","description":"Has value when page param passed, total pages number"}}},"VacancyMemberCreateRequest":{"title":"VacancyMemberCreateRequest","type":"object","properties":{"permissions":{"title":"Permissions","type":"array","items":{"$ref":"#/components/schemas/VacancyMemberPermission"},"description":"List of permissions (if member type is `watcher`)"}}},"VacancyMemberPermission":{"title":"VacancyMemberPermission","required":["permission"],"type":"object","properties":{"permission":{"title":"Permission","type":"string","description":"Permission ID","example":"status"},"value":{"title":"Value","anyOf":[{"exclusiveMinimum":0.0,"type":"integer"},{"type":"string"}],"description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)"}}},"VacancyPeriodsResponse":{"title":"VacancyPeriodsResponse","required":["days_in_work","work_days_in_work","hold_periods","closed_periods"],"type":"object","properties":{"days_in_work":{"title":"Days In Work","type":"integer","description":"How many days the vacancy is in work","example":7},"work_days_in_work":{"title":"Work Days In Work","type":"integer","description":"How many working days the vacancy is in work","example":5},"hold_periods":{"title":"Hold Periods","type":"array","items":{"type":"array","items":{"type":"string","format":"date-time","example":"2020-01-01T00:00:00+03:00"}},"description":"List of periods when the vacancy was in HOLD state","example":[["2021-04-12T17:40:53+03:00","2021-06-10T03:00:00+03:00"]]},"closed_periods":{"title":"Closed Periods","type":"array","items":{"type":"array","items":{"type":"string","format":"date-time","example":"2020-01-01T00:00:00+03:00"}},"description":"List of periods when the vacancy was in CLOSED state","example":[["2021-04-12T17:40:53+03:00","2021-06-10T03:00:00+03:00"]]}}},"VacancyQuotaExtendedItem":{"title":"VacancyQuotaExtendedItem","required":["id","vacancy_frame","created","applicants_to_hire","already_hired","account_info"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)","example":2},"vacancy_frame":{"title":"Vacancy Frame","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":5},"vacancy_request":{"title":"Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":3},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy quota","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"Date and time of updating a vacancy quota","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"applicants_to_hire":{"title":"Applicants To Hire","exclusiveMinimum":0.0,"type":"integer","description":"Number of applicants should be hired on the quota","example":10},"already_hired":{"title":"Already Hired","type":"integer","description":"Number of applicants already hired on the quota","example":8},"deadline":{"title":"Deadline","type":"string","description":"Date when the quota should be filled","format":"date"},"closed":{"title":"Closed","type":"string","description":"Date and time when the quota was closed","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"work_days_in_work":{"title":"Work Days In Work","type":"integer","description":"How many working days the vacancy is in work","example":5},"work_days_after_deadline":{"title":"Work Days After Deadline","type":"integer","description":"How many working days the vacancy is in work after deadline","example":4},"account_info":{"$ref":"#/components/schemas/Account"}}},"VacancyQuotaItem":{"title":"VacancyQuotaItem","required":["id","vacancy_frame","created","applicants_to_hire","already_hired","account_info"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)","example":2},"vacancy_frame":{"title":"Vacancy Frame","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy frame ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames)","example":5},"vacancy_request":{"title":"Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request ID](/v2/docs#get-/accounts/-account_id-/vacancy_requests)","example":3},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy quota","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"Date and time of updating a vacancy quota","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"applicants_to_hire":{"title":"Applicants To Hire","exclusiveMinimum":0.0,"type":"integer","description":"Number of applicants should be hired on the quota","example":10},"already_hired":{"title":"Already Hired","type":"integer","description":"Number of applicants already hired on the quota","example":8},"deadline":{"title":"Deadline","type":"string","description":"Date when the quota should be filled","format":"date"},"closed":{"title":"Closed","type":"string","description":"Date and time when the quota was closed","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"work_days_in_work":{"title":"Work Days In Work","type":"integer","description":"How many working days the vacancy is in work","example":5},"work_days_after_deadline":{"title":"Work Days After Deadline","type":"integer","description":"How many working days the vacancy is in work after deadline","example":4},"account_info":{"$ref":"#/components/schemas/AccountInfo"}}},"VacancyQuotaList":{"title":"VacancyQuotaList","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyQuotaItem"}}}},"VacancyQuotasResponse":{"title":"VacancyQuotasResponse","type":"object","additionalProperties":{"$ref":"#/components/schemas/VacancyQuotaList"},"example":{"3":{"page":1,"count":30,"total_pages":1,"items":[{"id":3,"vacancy_frame":3,"created":"2021-12-22T13:07:19+03:00","changed":"2021-12-22T13:07:19+03:00","applicants_to_hire":1,"already_hired":0,"account_info":{"id":1,"name":"test@example.com","email":"test@example.com"}}]}},"descriptions":"List of vacancy quotas"},"VacancyRecommendationsResponse":{"title":"VacancyRecommendationsResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__recommendations__Recommendation"}},"next_page_cursor":{"title":"Next Page Cursor","type":"string"}}},"VacancyRequest":{"title":"VacancyRequest","required":["id","position","status","account_vacancy_request","created","creator","states"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy request ID"},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"status":{"allOf":[{"$ref":"#/components/schemas/VacancyRequestStatus"}],"description":"Vacancy request status"},"account_vacancy_request":{"title":"Account Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request schema ID](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests)"},"created":{"title":"Created","type":"string","description":"Date and time of creation of the request","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of editing of the request","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"Date and time of attaching to vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)"},"creator":{"title":"Creator","allOf":[{"$ref":"#/components/schemas/CreatorInfo"}],"description":"User who created the request"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of files attached to the request"},"states":{"title":"States","type":"array","items":{"$ref":"#/components/schemas/VacancyRequestApprovalState"},"description":"List of approval states"},"values":{"title":"Values","type":"object","description":"Vacancy request values","example":{"position":"Developer","account_division":1844,"category":687}}}},"VacancyRequestApprovalState":{"title":"VacancyRequestApprovalState","required":["id","status","email"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Approval ID"},"status":{"allOf":[{"$ref":"#/components/schemas/VacancyRequestStatus"}],"description":"Approval status"},"email":{"title":"Email","type":"string","description":"Email, which was used to send the request for approval","format":"email"},"reason":{"title":"Reason","type":"string","description":"Rejection reason","example":"Inappropriate qualifications"},"order":{"title":"Order","type":"integer","description":"Approval order number","example":2},"changed":{"title":"Changed","type":"string","description":"Date and time of the last approval change","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"VacancyRequestAttendee":{"title":"VacancyRequestAttendee","required":["email"],"type":"object","properties":{"email":{"title":"Email","type":"string","description":"Attendee email","format":"email"},"name":{"title":"Name","type":"string","description":"Attendee name","example":"John Doe"}}},"VacancyRequestListResponse":{"title":"VacancyRequestListResponse","required":["page","count","total_pages","items"],"type":"object","properties":{"page":{"title":"Page","exclusiveMinimum":0.0,"type":"integer","description":"Page number","example":1},"count":{"title":"Count","type":"integer","description":"Number of items per page","example":30},"total_pages":{"title":"Total Pages","type":"integer","description":"Total number of pages","example":2},"total_items":{"title":"Total Items","type":"integer","description":"Total number of items","example":50},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyRequest"}}}},"VacancyRequestResponse":{"title":"VacancyRequestResponse","required":["id","position","status","account_vacancy_request","created","creator","states"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy request ID"},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"status":{"allOf":[{"$ref":"#/components/schemas/VacancyRequestStatus"}],"description":"Vacancy request status"},"account_vacancy_request":{"title":"Account Vacancy Request","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy request schema ID](/v2/docs#get-/accounts/-account_id-/account_vacancy_requests)"},"created":{"title":"Created","type":"string","description":"Date and time of creation of the request","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated":{"title":"Updated","type":"string","description":"Date and time of editing of the request","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"changed":{"title":"Changed","type":"string","description":"Date and time of attaching to vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)"},"creator":{"title":"Creator","allOf":[{"$ref":"#/components/schemas/CreatorInfo"}],"description":"User who created the request"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__common__File"},"description":"List of files attached to the request"},"states":{"title":"States","type":"array","items":{"$ref":"#/components/schemas/VacancyRequestApprovalState"},"description":"List of approval states"},"values":{"title":"Values","type":"object","description":"Vacancy request values","example":{"position":"Developer","account_division":1844,"category":687}},"taken_by":{"title":"Taken By","allOf":[{"$ref":"#/components/schemas/AcceptorInfo"}],"description":"User who accepted the vacancy request for work"}}},"VacancyRequestStatus":{"title":"VacancyRequestStatus","enum":["pending","approved","rejected"],"type":"string","description":"An enumeration."},"VacancyResponse":{"title":"VacancyResponse","required":["position","created","files"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":150},"created":{"title":"Created","type":"string","description":"Date and time of creating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"additional_fields_list":{"title":"Additional Fields List","type":"array","items":{"type":"string"},"description":"List of additional field names. [Getting a schema of additional fields](/v2/docs#/Vacancies/get_additional_fields_schema_accounts__account_id__vacancies_additional_fields_get)","default":[],"example":["deadline"]},"multiple":{"title":"Multiple","type":"boolean","description":"Flag indicating if this vacancy is a multiple"},"parent":{"title":"Parent","exclusiveMinimum":0.0,"type":"integer","description":"Vacancy parent ID","example":15},"account_vacancy_status_group":{"title":"Account Vacancy Status Group","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status group ID](/v2/docs#get-/accounts/-account_id-/vacancies/status_groups)","example":12},"updated":{"title":"Updated","type":"string","description":"Date and time of updating a vacancy","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__vacancies__File"}},"source":{"title":"Source","type":"string","description":"Vacancy source ID if it was imported","example":"0x5F22EC3F759E002B"},"blocks":{"title":"Blocks","type":"array","items":{"$ref":"#/components/schemas/VacancyChild"},"description":"Affiliate vacancies if vacancy is a multiple","default":[]}},"description":"Child vacancy for multivacancy"},"VacancyState":{"title":"VacancyState","enum":["OPEN","CLOSED","HOLD","REOPEN","VACANCY_REQUEST_ATTACH","RESUME","CREATED"],"type":"string","description":"An enumeration."},"VacancyStatus":{"title":"VacancyStatus","required":["id","type","name","order"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Status ID","example":1},"type":{"title":"Type","type":"string","description":"Status type","example":"user"},"name":{"title":"Name","type":"string","description":"Status name","example":"New Lead"},"removed":{"title":"Removed","type":"string","description":"Date and time of removing","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"order":{"title":"Order","type":"integer","description":"Order number"},"stay_duration":{"title":"Stay Duration","type":"integer","description":"The allowed number of days of a applicant's stay at this status.`null` means unlimited","example":10}}},"VacancyStatusGroup":{"title":"VacancyStatusGroup","required":["id","name","statuses"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Group ID","example":1},"name":{"title":"Name","type":"string","description":"Group name","example":"Sales Manager"},"statuses":{"title":"Statuses","type":"array","items":{"$ref":"#/components/schemas/VacancyStatusInGroup"},"description":"List of recruitment statuses in the group"}}},"VacancyStatusGroupsResponse":{"title":"VacancyStatusGroupsResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyStatusGroup"}}}},"VacancyStatusInGroup":{"title":"VacancyStatusInGroup","required":["id","account_vacancy_status"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Item ID","example":10},"account_vacancy_status":{"title":"Account Vacancy Status","exclusiveMinimum":0.0,"type":"integer","description":"[Recruitment status ID](/v2/docs#get-/accounts/-account_id-/vacancies/statuses)","example":112},"stay_duration":{"title":"Stay Duration","type":"integer","description":"The allowed number of days of a candidate's stay at this status.`null` means unlimited","example":10}}},"VacancyStatusesResponse":{"title":"VacancyStatusesResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/VacancyStatus"}}}},"VacancyUpdatePartialRequest":{"title":"VacancyUpdatePartialRequest","type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of files attached to a vacancy"},"fill_quotas":{"title":"Fill Quotas","type":"array","items":{"$ref":"#/components/schemas/EditedFillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"},"account_vacancy_hold_reason":{"title":"Account Vacancy Hold Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy hold reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_hold_reasons)","example":12},"account_vacancy_close_reason":{"title":"Account Vacancy Close Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy close reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_close_reasons)","example":15}}},"VacancyUpdateRequest":{"title":"VacancyUpdateRequest","required":["account_division","position"],"type":"object","properties":{"account_division":{"title":"Account Division","exclusiveMinimum":0.0,"type":"integer","description":"[Division ID](/v2/docs#get-/accounts/-account_id-/divisions)","example":12},"account_region":{"title":"Account Region","exclusiveMinimum":0.0,"type":"integer","description":"[Region ID](/v2/docs#get-/accounts/-account_id-/regions)","example":1},"position":{"title":"Position","type":"string","description":"The name of the vacancy (occupation)","example":"Developer"},"company":{"title":"Company","type":"string","description":"Department (ignored if the DEPARTMENTS are enabled)","example":"Google"},"money":{"title":"Money","type":"string","description":"Salary","example":"$10000"},"priority":{"title":"Priority","maximum":1.0,"minimum":0.0,"type":"integer","description":"The priority of a vacancy (0 for usual or 1 for high)","example":0},"hidden":{"title":"Hidden","type":"boolean","description":"Is the vacancy hidden from the colleagues?","default":false},"state":{"allOf":[{"$ref":"#/components/schemas/VacancyState"}],"description":"The state of a vacancy","default":"OPEN"},"body":{"title":"Body","type":"string","description":"The responsibilities for a vacancy in HTML format","example":"<p>Test body</p>"},"requirements":{"title":"Requirements","type":"string","description":"The requirements for a vacancy in HTML format","example":"<p>Test requirements</p>"},"conditions":{"title":"Conditions","type":"string","description":"The conditions for a vacancy in HTML format","example":"<p>Test conditions</p>"},"files":{"title":"Files","type":"array","items":{"exclusiveMinimum":0.0,"type":"integer"},"description":"The list of files attached to a vacancy"},"fill_quotas":{"title":"Fill Quotas","type":"array","items":{"$ref":"#/components/schemas/EditedFillQuota"},"description":"[Fill quota ID](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/quotas)"},"account_vacancy_hold_reason":{"title":"Account Vacancy Hold Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy hold reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_hold_reasons)","example":12},"account_vacancy_close_reason":{"title":"Account Vacancy Close Reason","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy close reason ID](/v2/docs#get-/accounts/-account_id-/vacancy_close_reasons)","example":15}}},"VacancyUpdateState":{"title":"VacancyUpdateState","enum":["OPEN","CLOSED","HOLD"],"type":"string","description":"An enumeration."},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}},"WebhookEvent":{"title":"WebhookEvent","enum":["APPLICANT","VACANCY","RESPONSE","OFFER","VACANCY-REQUEST","RECRUITMENT-EVALUATION","SURVEY-QUESTIONARY"],"type":"string","description":"An enumeration."},"WebhookRequest":{"title":"WebhookRequest","required":["secret","url","active","webhook_events"],"type":"object","properties":{"secret":{"title":"Secret","maxLength":64,"type":"string","description":"Secret key"},"url":{"title":"Url","maxLength":255,"minLength":1,"type":"string","description":"Webhook URL","format":"uri","example":"https://example.com/hooks"},"active":{"title":"Active","type":"boolean","description":"Webhook activity flag","example":true},"webhook_events":{"type":"array","items":{"$ref":"#/components/schemas/WebhookEvent"},"description":"Events types"},"type":{"allOf":[{"$ref":"#/components/schemas/WebhookType"}],"description":"Webhook type","default":"USER"}}},"WebhookResponse":{"title":"WebhookResponse","required":["id","account","url","created","active","webhook_events","type"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Webhook ID"},"account":{"title":"Account","exclusiveMinimum":0.0,"type":"integer","description":"Organization ID"},"url":{"title":"Url","maxLength":65536,"minLength":1,"type":"string","description":"Webhook URL","format":"uri","example":"https://example.com/hooks"},"created":{"title":"Created","type":"string","description":"Date and time of creating a webhook","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"active":{"title":"Active","type":"boolean","description":"Webhook activity flag","example":true},"webhook_events":{"type":"array","items":{"$ref":"#/components/schemas/WebhookEvent"},"description":"Event types"},"type":{"allOf":[{"$ref":"#/components/schemas/WebhookType"}],"description":"Webhook type"}}},"WebhookType":{"title":"WebhookType","enum":["USER","APPLICATION"],"type":"string","description":"An enumeration."},"WebhooksListResponse":{"title":"WebhooksListResponse","required":["items"],"type":"object","properties":{"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/WebhookResponse"}}}},"api__v2__serializers__common__File":{"title":"File","required":["id","url","content_type","name"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"File ID","example":19},"url":{"title":"Url","maxLength":65536,"minLength":1,"type":"string","description":"File URL","format":"uri"},"content_type":{"title":"Content Type","type":"string","description":"MIME type of file","example":"application/pdf"},"name":{"title":"Name","type":"string","description":"File name","example":"Resume.pdf"}}},"api__v2__serializers__request__applicants__ApplicantLogCalendarEvent":{"title":"ApplicantLogCalendarEvent","required":["event_type","calendar","attendees","start","end","transparency"],"type":"object","properties":{"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":2},"private":{"title":"Private","type":"boolean","description":"Event private flag","default":true},"name":{"title":"Name","type":"string","description":"Event name","example":"Example event"},"reminders":{"title":"Reminders","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__CalendarEventReminder"},"description":"List of reminders <a href=https://tools.ietf.org/html/rfc5545>RFC 5545</a>"},"location":{"title":"Location","maxLength":1024,"type":"string","description":"Event location","example":"Washington street 121"},"interview_type":{"title":"Interview Type","exclusiveMinimum":0.0,"type":"integer","description":"Interview type ID","example":17},"event_type":{"allOf":[{"$ref":"#/components/schemas/CalendarEventType"}],"description":"Calendar event type","example":"interview"},"description":{"title":"Description","type":"string","description":"Event description (comment)","example":"Interview with applicant"},"calendar":{"title":"Calendar","exclusiveMinimum":0.0,"type":"integer","description":"[Calendar ID](/v2/docs#get-/calendar_accounts)","example":4},"attendees":{"title":"Attendees","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__applicants__CalendarEventAttendee"},"description":"Event attendees (participants)"},"start":{"title":"Start","type":"string","description":"Event start date","format":"date-time","example":"2021-05-20T09:00:00"},"end":{"title":"End","type":"string","description":"Event end date","format":"date-time","example":"2021-05-20T10:00:00"},"timezone":{"title":"Timezone","type":"string","description":"Time zone","example":"Europe/Moscow"},"transparency":{"allOf":[{"$ref":"#/components/schemas/Transparency"}],"description":"Event transparency (availability)","example":"busy"}}},"api__v2__serializers__request__applicants__ApplicantOffer":{"title":"ApplicantOffer","required":["account_applicant_offer","values"],"type":"object","properties":{"account_applicant_offer":{"title":"Account Applicant Offer","exclusiveMinimum":0.0,"type":"integer","description":"[Organization offer ID](/v2/docs#get-/accounts/-account_id-/offers)","example":10},"values":{"title":"Values","type":"object","description":"Offer values. You can see required values here - [Organization offer schema](/v2/docs#get-/accounts/-account_id-/offers/-offer_id-)","example":{"position_name":"IOS developer","offer_text":"Offer text"}}}},"api__v2__serializers__request__applicants__ApplicantSocial":{"title":"ApplicantSocial","required":["social_type","value"],"type":"object","properties":{"social_type":{"title":"Social Type","enum":["TELEGRAM"],"type":"string","description":"Type","example":"TELEGRAM"},"value":{"title":"Value","type":"string","description":"Value","example":"TelegramUsername"}}},"api__v2__serializers__request__applicants__CalendarEventAttendee":{"title":"CalendarEventAttendee","required":["email"],"type":"object","properties":{"member":{"title":"Member","exclusiveMinimum":0.0,"type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":19},"displayName":{"title":"Displayname","type":"string","description":"Attendee name","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Attendee email","format":"email","example":"test@example.com"}}},"api__v2__serializers__request__applicants__CalendarEventReminder":{"title":"CalendarEventReminder","required":["multiplier","value","method"],"type":"object","properties":{"multiplier":{"allOf":[{"$ref":"#/components/schemas/EventReminderMultiplier"}],"description":"Reminder period","example":"hours"},"value":{"title":"Value","type":"integer","description":"Reminder value","example":1,"gte":0},"method":{"allOf":[{"$ref":"#/components/schemas/CalendarEventReminderMethod"}],"description":"Reminder method","example":"popup"}}},"api__v2__serializers__request__applicants__EmailRecipient":{"title":"EmailRecipient","required":["email","type"],"type":"object","properties":{"email":{"title":"Email","type":"string","description":"Email address","example":"mail@mail.ru"},"type":{"allOf":[{"$ref":"#/components/schemas/EmailContactType"}],"description":"Recipient type","example":"cc"},"displayName":{"title":"Displayname","type":"string","description":"Recipient name","example":"John Doe"}}},"api__v2__serializers__request__calendar__NonWorkingDays":{"title":"NonWorkingDays","required":["deadline"],"type":"object","properties":{"deadline":{"title":"Deadline","type":"string","description":"Deadline date","format":"date"},"start":{"title":"Start","type":"string","description":"Start date","format":"date"}}},"api__v2__serializers__request__dictionaries__DictionaryItem":{"title":"DictionaryItem","required":["name","foreign"],"type":"object","properties":{"name":{"title":"Name","maxLength":255,"minLength":1,"type":"string","description":"Dictionary item name"},"foreign":{"title":"Foreign","maxLength":1024,"minLength":1,"type":"string","description":"Foreign"},"meta":{"title":"Meta","type":"object","description":"Meta information","example":{"latitude":55.5374,"longitude":60.1408}},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__dictionaries__DictionaryItem"},"description":"Dictionary items"}}},"api__v2__serializers__request__divisions__Division":{"title":"Division","required":["name","foreign"],"type":"object","properties":{"name":{"title":"Name","minLength":1,"type":"string","description":"Division name","example":"Division 1"},"foreign":{"title":"Foreign","minLength":1,"type":"string","description":"The unique identifier in the customer's internal system","example":"d1"},"meta":{"title":"Meta","type":"object","description":"Arbitrary structure with additional information","example":{"lead":"director@example.com","comment":"Main division"}},"items":{"title":"Items","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__request__divisions__Division"},"description":"List with subdivisions","example":[{"name":"Division 1.1","foreign":"d1.1","meta":{"lead":"test@example.com"}}]}}},"api__v2__serializers__response__applicants__ApplicantLogCalendarEvent":{"title":"ApplicantLogCalendarEvent","required":["id","all_day","created","start","end","event_type","calendar","status","transparency"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Calendar event ID","example":1},"name":{"title":"Name","type":"string","description":"Event name","example":"Event: Interview John Doe"},"all_day":{"title":"All Day","type":"boolean","description":"Flag indicating that the event is scheduled for the whole day"},"created":{"title":"Created","type":"string","description":"Date and time of event creation","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"creator":{"title":"Creator","allOf":[{"$ref":"#/components/schemas/CalendarEventCreator"}],"description":"Event creator"},"description":{"title":"Description","type":"string","description":"Event description","example":"Interview with John Doe"},"timezone":{"title":"Timezone","type":"string","description":"Event time zone","example":"Europe/Moscow"},"start":{"title":"Start","type":"string","description":"Event start date and time","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"end":{"title":"End","type":"string","description":"Event end date and time","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"etag":{"title":"Etag","type":"string","description":"Event Etag","example":"<etag_value>"},"event_type":{"allOf":[{"$ref":"#/components/schemas/CalendarEventType"}],"description":"Event type","example":"interview"},"interview_type":{"title":"Interview Type","type":"integer","description":"Interview type ID","example":17},"calendar":{"title":"Calendar","exclusiveMinimum":0.0,"type":"integer","description":"[Calendar ID](/v2/docs#get-/calendar_accounts)","example":4},"vacancy":{"title":"Vacancy","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":2},"foreign":{"title":"Foreign","type":"string","description":"Foreign ID of event","example":"f1"},"location":{"title":"Location","type":"string","description":"Event location","example":"Washington street 121"},"attendees":{"title":"Attendees","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__CalendarEventAttendee"},"description":"Event attendees (participants)","default":[]},"reminders":{"title":"Reminders","type":"array","items":{"$ref":"#/components/schemas/api__v2__serializers__response__applicants__CalendarEventReminder"},"description":"List of reminders <a href=https://tools.ietf.org/html/rfc5545>RFC 5545</a>","default":[]},"status":{"allOf":[{"$ref":"#/components/schemas/CalendarEventStatus"}],"description":"Event status","example":"tentative"},"transparency":{"allOf":[{"$ref":"#/components/schemas/Transparency"}],"description":"Event transparency (availability)","example":"busy"},"recurrence":{"title":"Recurrence","type":"array","items":{}}}},"api__v2__serializers__response__applicants__ApplicantOffer":{"title":"ApplicantOffer","required":["id","account_applicant_offer","created"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Applicant's offer ID","example":1},"account_applicant_offer":{"title":"Account Applicant Offer","type":"integer","description":"Organization's offer ID","example":2},"created":{"title":"Created","type":"string","description":"Date and time of creating an offer","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"api__v2__serializers__response__applicants__ApplicantSocial":{"title":"ApplicantSocial","required":["id","social_type","value","verified"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Social ID","example":1},"social_type":{"title":"Social Type","type":"string","description":"Type","example":"TELEGRAM"},"value":{"title":"Value","type":"string","description":"Value","example":"TelegramUsername"},"verified":{"title":"Verified","type":"boolean","description":"Verification flag"},"verification_date":{"title":"Verification Date","type":"string","description":"Verification date","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"api__v2__serializers__response__applicants__CalendarEventAttendee":{"title":"CalendarEventAttendee","required":["email"],"type":"object","properties":{"member":{"title":"Member","type":"integer","description":"[Coworker ID](/v2/docs#get-/accounts/-account_id-/coworkers)","example":10},"displayName":{"title":"Displayname","type":"string","description":"Attendee name","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Attendee email","example":"test@example.com"},"responseStatus":{"allOf":[{"$ref":"#/components/schemas/CalendarEventStatus"}],"description":"Attendee response status","example":"confirmed"}}},"api__v2__serializers__response__applicants__CalendarEventReminder":{"title":"CalendarEventReminder","required":["method","minutes"],"type":"object","properties":{"method":{"allOf":[{"$ref":"#/components/schemas/CalendarEventReminderMethod"}],"description":"Reminder method","example":"popup"},"minutes":{"title":"Minutes","type":"integer","description":"How many minutes in advance to remind about the event","example":10}}},"api__v2__serializers__response__applicants__EmailRecipient":{"title":"EmailRecipient","required":["email"],"type":"object","properties":{"type":{"allOf":[{"$ref":"#/components/schemas/EmailContactType"}],"description":"Type of the email contact","example":"cc"},"displayName":{"title":"Displayname","type":"string","description":"Name of email recipient","example":"John Doe"},"email":{"title":"Email","type":"string","description":"Email address","example":"email@example.com"}}},"api__v2__serializers__response__calendar__NonWorkingDays":{"title":"NonWorkingDays","required":["start","deadline","total_days","not_working_days","production_calendar"],"type":"object","properties":{"start":{"title":"Start","type":"string","description":"Start date","format":"date","example":"2021-02-01"},"deadline":{"title":"Deadline","type":"string","description":"Deadline date","format":"date","example":"2021-02-07"},"total_days":{"title":"Total Days","type":"integer","description":"Total amount of days within the range","example":7},"not_working_days":{"title":"Not Working Days","type":"integer","description":"Amount of non-working days within the range","example":2},"production_calendar":{"title":"Production Calendar","exclusiveMinimum":0.0,"type":"integer","description":"Calendar ID"}}},"api__v2__serializers__response__dictionaries__DictionaryItem":{"title":"DictionaryItem","required":["id","code","name","created"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Dictionary ID","example":7},"code":{"title":"Code","type":"string","description":"Dictionary code","example":"citizenship"},"name":{"title":"Name","type":"string","description":"Dictionary name","example":"Citizenship"},"foreign":{"title":"Foreign","type":"string","description":"The unique identifier in the customer's internal system","example":"d_ctz"},"created":{"title":"Created","type":"string","description":"Date and time of creating a dictionary","format":"date-time","example":"2020-01-01T00:00:00+03:00"}}},"api__v2__serializers__response__divisions__Division":{"title":"Division","required":["id","name","order","active","deep"],"type":"object","properties":{"id":{"title":"Id","type":"integer","description":"Division ID","example":2},"name":{"title":"Name","type":"string","description":"Division name","example":"IT Department"},"order":{"title":"Order","type":"integer","description":"Order number","example":1},"active":{"title":"Active","type":"boolean","description":"Activity flag"},"parent":{"title":"Parent","type":"integer","description":"Parent division ID","example":1},"deep":{"title":"Deep","type":"integer","description":"Depth level"},"foreign":{"title":"Foreign","type":"string","description":"The unique identifier in the customer's internal system","example":"it_department"},"meta":{"title":"Meta","type":"object","description":"Additional meta information","example":{"lead":"test@example.com"}}}},"api__v2__serializers__response__divisions__Meta":{"title":"Meta","required":["levels","has_inactive"],"type":"object","properties":{"levels":{"title":"Levels","type":"integer","description":"The number of levels of nesting in the structure","example":1},"has_inactive":{"title":"Has Inactive","type":"boolean","description":"A flag indicating whether the structure has inactive divisions"}}},"api__v2__serializers__response__recommendations__Recommendation":{"title":"Recommendation","required":["id","vacancy_id","applicant_id","rank","created_at","updated_at"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"Recommendation ID","example":134},"vacancy_id":{"title":"Vacancy Id","exclusiveMinimum":0.0,"type":"integer","description":"[Vacancy ID](/v2/docs#get-/accounts/-account_id-/vacancies)","example":11},"applicant_id":{"title":"Applicant Id","exclusiveMinimum":0.0,"type":"integer","description":"[Applicant ID](/v2/docs#get-/accounts/-account_id-/applicants)","example":11},"rank":{"title":"Rank","type":"integer","description":"Position of the recommendation in the ranking list.","example":0},"created_at":{"title":"Created At","type":"string","description":"Date and time when the recommendation was created.","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"updated_at":{"title":"Updated At","type":"string","description":"Date and time when the recommendation was last updated.","format":"date-time","example":"2020-01-01T00:00:00+03:00"},"resolved_by_user":{"title":"Resolved By User","type":"integer","description":"ID of the recruiter who resolved recommendation. null if not processed yet.","example":125},"status":{"allOf":[{"$ref":"#/components/schemas/RecommendationStatus"}],"description":"Current status of the recommendation. null if not processed yet.","example":"TAKEN"}}},"api__v2__serializers__response__regions__Meta":{"title":"Meta","required":["levels","has_inactive"],"type":"object","properties":{"levels":{"title":"Levels","type":"integer","description":"The number of levels of nesting in the structure","example":1},"has_inactive":{"title":"Has Inactive","type":"boolean","description":"A flag indicating whether the structure has inactive regions"}}},"api__v2__serializers__response__resume__Experience":{"title":"Experience","type":"object","properties":{"position":{"title":"Position","type":"string","description":"Position","example":"Manager"},"date_from":{"title":"Date From","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Experience start date"},"date_to":{"title":"Date To","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Experience end date"},"company":{"title":"Company","type":"string","description":"Company name","example":"Company"},"url":{"title":"Url","type":"string","description":"Company's url","example":"https://example.com"},"area":{"title":"Area","allOf":[{"$ref":"#/components/schemas/Area"}],"description":"Experience area"},"industries":{"title":"Industries","type":"array","items":{"$ref":"#/components/schemas/ExternalEntity"},"description":"List of experience industries"},"description":{"title":"Description","type":"string","description":"Experience description","example":"I worked as a manager"},"skills":{"title":"Skills","type":"array","items":{"$ref":"#/components/schemas/Skill"},"description":"List of skills"}}},"api__v2__serializers__response__resume__Recommendation":{"title":"Recommendation","type":"object","properties":{"value":{"title":"Value","type":"string","description":"Recommendation"},"date":{"title":"Date","allOf":[{"$ref":"#/components/schemas/DateWithPrecision"}],"description":"Date of recommendation"},"name":{"title":"Name","type":"string","description":"Name to whom recommendation"},"position":{"title":"Position","type":"string","description":"Position","example":"Manager"},"organization":{"title":"Organization","type":"string","description":"Organization name","example":"Test organization"},"contact":{"title":"Contact","type":"string","description":"Contact","example":"89999999999"}}},"api__v2__serializers__response__upload__Experience":{"title":"Experience","type":"object","properties":{"position":{"title":"Position","type":"string","description":"Position","example":"Some position name"},"company":{"title":"Company","type":"string","description":"Company name","example":"Some company name"}}},"api__v2__serializers__response__vacancies__File":{"title":"File","required":["id","name","content_type","url"],"type":"object","properties":{"id":{"title":"Id","exclusiveMinimum":0.0,"type":"integer","description":"File ID","example":134},"name":{"title":"Name","type":"string","description":"File name","example":"Test_file.txt"},"content_type":{"title":"Content Type","type":"string","description":"MIME type of file","example":"application/pdf"},"url":{"title":"Url","type":"string","description":"File URL","example":"https://example.com"}}}},"securitySchemes":{"HTTPBearerAuth":{"type":"http","scheme":"bearer"}}},"tags":[{"name":"Basic information","description":"\n## Overview\n\nAll the requests to the Huntflow API are done by the user or special token-user. In that case every action performed by \nthe API calls authored by that user.\n\nTo retrieve information about the user asscoiated with access token you could use [me](/v2/docs#get-/me) method.\n\nOne user in Huntflow could have different roles in different accounts (one to many).\nThat's why almost all methods have path prefix `/accounts/{account_id}` where `account_id` is account (organization) \nidentifier. Use [this](/v2/docs#get-/accounts) method to receive available accounts and their identifiers.  \n"},{"name":"User settings"},{"name":"Vacancy Requests","description":"\n## Overview\n\nPossibilities for working with vacancy requests:\n- view vacancy requests schemas in the organization\n- view and create vacancy requests\n"},{"name":"Vacancies","description":"\n## Overview\n\nVacancy is a project in Huntflow that describes the number of employees we need, the number we are already hired, \n vacancy description (whom do we need) and it's current status.\n\nEvery vacancy starts from a demand in employees that could be described as \n a [vacancy request](/v2/docs#tag--Vacancy-requests) or just a number of employees you need. \nAfter the demand approved recruiter can start working on it by [creating a new vacancy](/v2/docs) \n or [adding it to the existing one](/v2/docs). \n Approved demand that the recruiter is working on is called [a fill quota](/v2/docs) (or just a **quota**). \n \nVacancy can have different lifetime: always open (evergreen) or could be opened or closed depend on the needs.\nIn all that cases vacancy has special periods when vacancy was opened and we call them **frames**. \nIt is possible to retrieve only \n [last active vacancy frame](/v2/docs#get-/accounts/-account_id-/vacancies/-vacancy_id-/frame) \n or [the full list](/v2/docs/#get-/accounts/-account_id-/vacancies/-vacancy_id-/frames).\n\n"},{"name":"Applicants","description":"\n## Overview\n\nApplicant (aka candidate) describes the person that recruiter (or any system) adds to the Huntflow \n and has its basic fields like first name, last name, email and etc.\n\nAlso every applicant has:\n - one or more resumes (aka CVs or `externals`)\n - tags (aka labels)\n - questionaries (additional information fields that are specific to the organization)\n "},{"name":"Applicant's resumes","description":"\n## Overview\n\nHuntflow can save resumes/profiles from the different sources (GitHub, Facebook, etc.).\nIn that case Huntflow keeps them in two formats:\n * original source (`data` attribute) format (for e.g. we've saved the resume via jobsite API and keep the response).\n * unified  (`resume` attribute) format (format that keeps the same between different sources)\n\nOriginal format depends on the source of the resume. Possible sources and formats are:\n\nauth_type | Resume format\n--------- | -------------\nNATIVE | Text format\nSJ | [SuperJob](https://api.superjob.ru/client/#resume_descr)\nHH | [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item)\nLI | LinkedIn (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\nVK | VK\nMK | [Habr Career](https://career.habr.com/info/api#q1.4)\nZPRUHH | [Zarplata.ru](https://api.zarplata.ru/openapi/redoc)\nWORKUA | Work Ua (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\nRABOTAUA | Rabota Ua (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\nGITHUB | Github (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\nFACEBOOK | Facebook (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\nAVITO | Avito (the format is similar to [HeadHunter](https://github.com/hhru/api/blob/master/docs/resumes.md#item))*\n\n\\* Formats similar to HeadHunter are reference and may change in the future\n"},{"name":"Applicant responses"},{"name":"Files and CV Parsing","description":"\n## Overview\n\nIt is possible to upload different file types to the Huntflow. \nMaximum filesize is 15 Mb.\n\nHuntflow has a special mechanism that checks for duplicate files. \n If you will try to upload the same file one more time the result of previous upload would be returned.  \n"},{"name":"Applicant On Vacancy","description":"\n## Overview\n\nAfter recruiter has added applicant into Huntflow it's time to apply applicant on some vacancy.\n "},{"name":"Applicant's Tags","description":"\n## Overview\n\nTag (aka label) can be added to applicant for convenient work.\n\nPossibilities for working with tags:\n- view, create, edit and delete tags in the organization\n- view and edit applicants tags\n"},{"name":"Applicant's questionary","description":"\n## Overview\n\nApplicant's questionary contains additional information about the applicant that recruiters can fill up.\n\nThe list of additional fields depends on organization settings. \nA special [method](/v2/docs#get-/accounts/-account_id-/applicants/questionary) should be called to retrieve a schema\n of available fields for specified organization.\n"},{"name":"Applicant's Offer","description":"\n## Overview\n\nApplicant's offer consists of two parts:\n * a special form (depends on organization settings) that recruiter fills up\n * a PDF view of that form (could be customized with a company design)\n"},{"name":"Multivacancies","description":"\n## Overview\n\n**Make sure that your organization use it.**\n\nA multivacancy is one large vacancy with independent sub-vacancies (child vacancies).\n\nFor example, your organization needs multiple employees for the same vacancy in three \n[regions](/v2/docs#get-/accounts/-account_id-/regions) or three \n[company divisions](/v2/docs#get-/accounts/-account_id-/divisions).\nIn order not to make a separate vacancy for each, you can create a multivacancy.\n\nThat is, there will be one vacancy, but it will have many divisions, \nfor each of which all applicants (candidates) can be considered separately.\nIf an applicant does not suit in one place, he may be considered in another.\n\nEach sub-vacancy has the same settings as a regular vacancy.\n You can add individual people to work for each sub-vacancy: both managers and watchers.\nEach sub-vacancy can have its own deadline, you can edit it, pause it and do whatever you need to do.\n\nAll endpoints create a background task to create or update a multivacancy and returns its \nidentifier. You can track this task \n[here](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-)\n\nA special [endpoint](/v2/docs#put-/accounts/-account_id-/applicants/vacancy/-vacancy_id-/split) \nshould be used for moving applicant from the multivacancy to a child vacancy.\n____________\nRestrictions:\n- The availability of multi-vacancies depends on your license, and only by agreeing on the \nterms of its implementation, as it is an individually configurable feature.\nFirst, you need to implement a structure of your \n[company divisions](/v2/docs#get-/accounts/-account_id-/divisions),\n since without them the multivacancy cannot work.\n- The request body schema will depend on your multivacancy's settings.\n____________\nYou can use [vacancies endpoints](/v2/docs#tag--Vacancies) to work with sub-vacancies separately\n (getting, closing, etc.).\n"},{"name":"System Dictionaries","description":"\n## Overview\n\nSystem dictionaries is a special type of dictionaries that have a special purpose:\n * Company divisions are used in vacancy request and vacancies\n * Regions dictionary is a preset list of regions that matched with supported job boards like HeadHunter. \n   This helps to link vacancy (or applicant) to a specified region between Huntflow and a job board. \n \n"},{"name":"Custom Dictionaries","description":"\n## Overview\n\nYou can create a custom dictionaries (skills, specializations, grades, etc.) that can be later \n integrated as fields in applicant questionary, vacancy request, vacancy, offer models and used as a filter criteria \n in reports or any other purpose.  \n"},{"name":"Recruitment evaluations","description":"\n-----\nCreate answer request for recruitment evaluation\n"},{"name":"Notification tokens","description":"\n----\nMobile app token management.\n"},{"name":"System and Security","description":"\n## Overview\n\nSome types of operations are performed asynchronously, creating a system delayed task.\n\nFor example: \n[Creating or updating divisions structure for organization](/v2/docs#post-/accounts/-account_id-/divisions/batch).<br>\n[Here](/v2/docs#get-/accounts/-account_id-/delayed_tasks/-task_id-) \nyou can check the execution status of such tasks.\n"},{"name":"Webhooks","description":"\n## Overview \n\n* Get all webhooks\n* Create a webhook\n* Delete a webhook\n\n\n\nWebhooks description available [here](https://github.com/huntflow/api/blob/master/ru/webhooks.md).\n\n"},{"name":"Production calendars","description":"\n## Overview\n\nPossibilities of working with production calendars:\n- Get a list of available production calendars\n- Receive information about non-working days for periods\n- Calculate a deadline date taking into account the non-working days\n- Calculate a start date taking into account the non-working days\n"},{"name":"Organization settings","description":"\n## Overview\n\nAll organization related settings including users (coworkers).  \n"},{"name":"Billing","description":"\n## Overview\n\n"},{"name":"Integrations"},{"name":"Users"},{"name":"Users Management","description":"\n## Overview\n\nUsers could be synchronized with organization role management system using provided API.\n\nYou should have dedicated or on-premise Huntflow deployment and have a license to use this API.\n\nAll data changes processed in delayed tasks and each mutating method returns the task's identifier,\nyou can track this task [here](/v2/docs#get-/accounts/-account_id-/users/foreign/task/-task_id-).\n\nAll identifiers in requests/responses are foreign\n(aka external) and that used in your role management system.\n\n# User types\n- `owner`: managing recruiter (administrator)\n- `manager`: recruiter\n- `watcher`: hiring manager\n\nRestrictions:\n- Hiring manager can not have `head_id` parameter\n- Type change is available between types 'manager' and 'owner'\n\n# Permissions\n- `invite-managers`: can invite new managers\n- `hide-vacancies`: can see own vacancies only\n- `remove-applicants`: can delete applicants\n- `hide-other-divisions-vacancies`: can not see vacancies in inaccessible divisions\n- `hide-salary`: can not see salary (only for `watcher` role type)\n- `receive-vacancy-requests`: can receive vacancies' requests\n- `invite-watchers`: can invite new watchers\n- `remove-vacancies`: can delete vacancies\n- `create-vacancies`: can create vacancies\n- `mail-templates`: can manage organization's mail templates\n- `add-candidates`: can add candidates\n- `manage-tags`: can manage tags\n- `manage-dictionaries`: can manage organization's dictionaries\n\nPermissions list could be updated in the future.\n\nManaging recruiters have no permissions, everything is available for them by default.\n\nBasic recommended permissions for managers are: `create-vacancies`, `remove-vacancies`,\n`invite-managers`, `invite-watchers`, `remove-applicants`, `mail-templates`,\n`receive-vacancy-requests`, `manage-tags`, `manage-dictionaries`.\n\nThe only permission available for watchers is `hide-salary`.\n "},{"name":"Type a surveys","description":"\n## Overview\n\nApplicant feedback forms.\n"},{"name":"Type q surveys","description":"\n## Overview\n\nSurvey questionary contains a set of questions for applicant to fill out.\n"},{"name":"Recommendations","description":"\nRecommendations is a feature in Huntflow that helps recruiters find\nthe most suitable candidates for a vacancy. It provides a list of recommended candidates\n based on the job requirements and other relevant factors.\n\nThe recommendation process is based on analyzing the vacancy details and matching\nthem with potential candidates. Recruiters can retrieve the recommended candidates for\na specific vacancy and review their profiles to make hiring decisions.\n\nAt the moment, the API allows retrieving only the list of\n[recommendations for a vacancy](/v2/docs#get-/account/-account_id-/recommendations/-vacancy_id-).\n"}]}